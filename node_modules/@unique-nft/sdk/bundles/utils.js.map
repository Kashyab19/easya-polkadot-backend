{"version":3,"sources":["../../../../node_modules/base-x/src/index.js","../../../../node_modules/@noble/hashes/_assert.js","../../../../node_modules/@noble/hashes/_u64.js","../../../../node_modules/@noble/hashes/crypto.js","../../../../node_modules/@noble/hashes/utils.js","../../../../node_modules/@noble/hashes/sha3.js","../../../../node_modules/@noble/hashes/_blake.js","../../../../node_modules/@noble/hashes/blake2b.js","../../../../node_modules/utf-helpers/index.js","../../../../node_modules/src/coin.ts","../../../../node_modules/@unique-nft/utils/index.js","../../../../packages/sdk/src/bundles/utils.ts"],"names":["require_src","__commonJSMin","exports","module","base","ALPHABET","length","TypeError","BASE_MAP","Uint8Array","j","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","encode","source","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray","from","zeroes","pbegin","pend","size","b58","carry","it1","Error","it2","str","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","string","require_assert","Object","defineProperty","value","output","exists","hash","bytes","bool","number","isBytes","n","Number","isSafeInteger","b","a","constructor","name","lengths","includes","h","create","outputLen","blockLen","instance","checkFinished","destroyed","finished","out","min","assert","default","require_u64","add5L","add5H","add4H","add4L","add3H","add3L","add","rotlBL","rotlBH","rotlSL","rotlSH","rotr32L","rotr32H","rotrBL","rotrBH","rotrSL","rotrSH","shrSL","shrSH","toBig","split","fromBig","U32_MASK64","BigInt","_32n","le","l","lst","Ah","Uint32Array","Al","__name","_l","s","_h","Bh","Bl","Cl","low","Ch","Dl","Dh","El","Eh","u64","require_crypto","crypto","globalThis","undefined","require_utils","randomBytes","wrapXOFConstructorWithOpts","wrapConstructorWithOpts","wrapConstructor","checkOpts","Hash","concatBytes","toBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","byteSwap32","byteSwapIfBE","byteSwap","isLE","rotl","rotr","createView","u32","u8","crypto_1","require","_assert_js_1","arr","floor","DataView","word","shift","hexes","_","toString","padStart","hex","asciis","_0","_9","_A","_F","_a","_f","asciiToBase16","char","hl","al","array","ai","hi","n1","n2","iters","tick","cb","ts","Date","now","diff","TextEncoder","data","arrays","sum","res","pad","set","clone","_cloneInto","toStr","defaults","opts","call","assign","hashCons","hashC","msg","update","digest","tmp","bytesLength","getRandomValues","require_sha3","shake256","shake128","keccak_512","keccak_384","keccak_256","keccak_224","sha3_512","sha3_384","sha3_256","sha3_224","Keccak","keccakP","_u64_js_1","utils_js_1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","y","push","t","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","rounds","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","fill","suffix","enableXOF","pos","posOut","state","state32","keccak","len","take","finish","writeInto","bufferOut","subarray","xofInto","xof","digestInto","destroy","to","gen","genShake","dkLen","require_blake","BLAKE","SIGMA","keyLen","saltLen","persLen","key","salt","personalization","buffer32","offset","buf","compress","dataOffset","data32","pos32","out32","get","forEach","v","slice","require_blake2b","blake2b","_blake_js_1","B2B_IV","BBUF","G1b","c","d","Xl","Xh","ll","G2b","BLAKE2b","v0l","v0h","v1l","v1h","v2l","v2h","v3l","v3h","v4l","v4h","v5l","v5h","v6l","v6h","v7l","v7h","keyLength","pers","isLast","require_utf_helpers","__defProp","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","enumerable","__copyProps","except","desc","__toCommonJS","mod","utf_helpers_exports","HexString","Utf16","Utf8","UtfHelpers","fromArray","reduce","byte","fromU8a","toArray","hexString","startsWith","match","map","parseInt","toU8a","stringToU8a","u8a","lengthInBytes","start","c1","c2","stringToNumberArray","u8aToString","end","String","fromCharCode","t2","numberArrayToString","stringToHexString","hexStringToString","stringToU16a","u16arr","Uint16Array","cp","codePointAt","fromCodePoint","u16aToString","DEFAULT_DECIMALS","validateDecimals","coinToWeiInBigInt","coinToWei","weiToCoin","dangerouslyWeiToCoinInFloat","formatNice","formatFixed","weiFormatNice","weiFormatFixed","weiToGwei","gweiToWei","coinToGwei","gweiToCoin","cleanUpCoinsValue","Coin","decimals","multiplier","integerPart","fractionalPart","weiValue","weiBigInt","divisor","ethAmountBigInt","formattedRemainder","formattingThreshold","numStr","roughNum","integerNum","roughRemainder","digits","fractionalPadded","suffixes","integerPartOfNice","fractionalPartOfNice","precision","gwei","gweiIntegerPartInWei","fractionalPartStr","currency","paddedCurrency","_precision","wei","coins","metric","__create","__getProtoOf","getPrototypeOf","__reExport","secondTarget","__toESM","isNodeMode","__esModule","src_exports","Address","Address_exports","coin_exports","CoinUtils","HexString4","HexUtils","StringUtils","constants","constants_exports","algorithms","imports_exports","collection","compare","extract","is","mirror","nesting","normalize","substrate","validate","COLLECTION_ADDRESS_PREFIX","NESTING_PREFIX","STATIC_ADDRESSES","contractHelpers","collectionHelpers","base58","base64","basex","import_base_x","import_blake2b","import_sha3","BASE58_ALPHABET","BASE64_ALPHABET","import_utf_helpers","DWORDHexString","_checkU32","num","isNaN","fromNumber","toNumber","unsafeNormalizeEthereumAddress","address","addr","toLowerCase","replace","addressHash","checksumAddress","toUpperCase","normalizeEthereumAddress","ethereumAddress","compareEthereumAddresses","address1","address2","addr1","Ethereum","ethereum","addr2","collectionIdToEthAddress","collectionId","ethAddressToCollectionId","collectionAddress","collectionIdAndTokenIdToNestingAddress","tokenId","nestingAddressToCollectionIdAndTokenId","nestingAddress","import_utf_helpers2","blake2AsU8a","u8aConcat","u8as","result","SS58_PREFIX","sshash","checkAddressChecksum","decoded","ignoreChecksum","ss58Length","ss58Decoded","isPublicKey","isValid","normalizeSubstrateAddress","prefix","encodeSubstrateAddress","decodeSubstrateAddress","ss58Format","allowedDecodedLengths","join","u8aPrefix","input","realError","substratePublicKey","bigint","ss58Prefix","allowedEncodedLengths","endPos","publicKey","error","message","compareSubstrateAddresses","Substrate","decoded1","decoded2","addressToEvm","truncated","EVM_PREFIX_U8A","evmToAddress","evmAddress","guessAddressAndExtractCrossAccountIdUnsafe","rawAddress","normalize2","subPublicKey","sub","_hex","subBigInt","ethBigInt","eth","substrateAddress","guessAddressAndExtractCrossAccountIdSafe","substrateOrMirrorIfEthereum","addressObject","ethereumToSubstrate","addressInAnyFormToEnhancedCrossAccountId","crossAccountId","normalized","addressSS58","isEthereum","isSubstrate","type","ETH_ADDRESS_REGEX","SUB_PUBLIC_KEY_REGEX","obj","substrateAddressObject","ethereumAddressObject","crossAccountIdUncapitalized","substrateAddressObjectUncapitalized","ethereumAddressObjectUncapitalized","substrateAddressInAnyForm","ethereumAddressInAnyForm","validAddressInAnyForm","idToAddress","addressToId","idsToAddress","addressToIds","addressOrCrossAccountId","addressSafe","addressNormalized","addressNormalizedSafe","addressForScanNormalized","addressForScanNormalizedSafe","crossAccountIdSafe","crossAccountIdNormalized","crossAccountIdNormalizedSafe","crossAccountIdUncapitalizedSafe","crossAccountIdUncapitalizedNormalized","crossAccountIdUncapitalizedNormalizedSafe","substrateOrMirrorIfEthereumSafe","substrateOrMirrorIfEthereumNormalized","substrateOrMirrorIfEthereumNormalizedSafe","substratePublicKeySafe","enhancedCrossAccountId","addressInAnyForm","enhancedCrossAccountIdSafe","ethCrossAccountId","addressEnhanced","ethCrossAccountIdSafe","substrateToEthereum","substrateAddresses","ethereumAddresses","utils","utils_exports"],"mappings":"qwBAAA,IAAAA,GAAAC,EAAA,CAAAC,GAAAC,KAAA,cAMA,SAASC,GAAMC,EAAQ,CACrB,GAAIA,EAASC,QAAU,IAAO,MAAM,IAAIC,UAAU,mBAAA,EAElD,QADIC,EAAW,IAAIC,WAAW,GAAA,EACrBC,EAAI,EAAGA,EAAIF,EAASF,OAAQI,IACnCF,EAASE,CAAAA,EAAK,IAEhB,QAASC,EAAI,EAAGA,EAAIN,EAASC,OAAQK,IAAK,CACxC,IAAIC,EAAIP,EAASQ,OAAOF,CAAAA,EACpBG,EAAKF,EAAEG,WAAW,CAAA,EACtB,GAAIP,EAASM,CAAAA,IAAQ,IAAO,MAAM,IAAIP,UAAUK,EAAI,eAAA,EACpDJ,EAASM,CAAAA,EAAMH,EAEjB,IAAIK,EAAOX,EAASC,OAChBW,EAASZ,EAASQ,OAAO,CAAA,EACzBK,EAASC,KAAKC,IAAIJ,CAAAA,EAAQG,KAAKC,IAAI,GAAA,EACnCC,EAAUF,KAAKC,IAAI,GAAA,EAAOD,KAAKC,IAAIJ,CAAAA,EACvC,SAASM,EAAQC,EAAM,CAOrB,GANIA,aAAkBd,aACXe,YAAYC,OAAOF,CAAAA,EAC5BA,EAAS,IAAId,WAAWc,EAAOG,OAAQH,EAAOI,WAAYJ,EAAOK,UAAU,EAClEC,MAAMC,QAAQP,CAAAA,IACvBA,EAASd,WAAWsB,KAAKR,CAAAA,IAEvB,EAAEA,aAAkBd,YAAe,MAAM,IAAIF,UAAU,qBAAA,EAC3D,GAAIgB,EAAOjB,SAAW,EAAK,MAAO,GAMlC,QAJI0B,EAAS,EACT1B,EAAS,EACT2B,EAAS,EACTC,EAAOX,EAAOjB,OACX2B,IAAWC,GAAQX,EAAOU,CAAAA,IAAY,GAC3CA,IACAD,IAMF,QAHIG,GAASD,EAAOD,GAAUZ,EAAU,IAAO,EAC3Ce,EAAM,IAAI3B,WAAW0B,CAAAA,EAElBF,IAAWC,GAAM,CAItB,QAHIG,EAAQd,EAAOU,CAAAA,EAEftB,EAAI,EACC2B,EAAMH,EAAO,GAAIE,IAAU,GAAK1B,EAAIL,IAAYgC,IAAQ,GAAKA,IAAO3B,IAC3E0B,GAAU,IAAMD,EAAIE,CAAAA,IAAU,EAC9BF,EAAIE,CAAAA,EAAQD,EAAQrB,IAAU,EAC9BqB,EAASA,EAAQrB,IAAU,EAE7B,GAAIqB,IAAU,EAAK,MAAM,IAAIE,MAAM,gBAAA,EACnCjC,EAASK,EACTsB,IAIF,QADIO,EAAML,EAAO7B,EACVkC,IAAQL,GAAQC,EAAII,CAAAA,IAAS,GAClCA,IAIF,QADIC,GAAMxB,EAAOyB,OAAOV,CAAAA,EACjBQ,EAAML,EAAM,EAAEK,EAAOC,IAAOpC,EAASQ,OAAOuB,EAAII,CAAAA,CAAI,EAC3D,OAAOC,EACT,CA5CSnB,EAAAA,EAAAA,UA6CT,SAASqB,EAAcpB,EAAM,CAC3B,GAAI,OAAOA,GAAW,SAAY,MAAM,IAAIhB,UAAU,iBAAA,EACtD,GAAIgB,EAAOjB,SAAW,EAAK,OAAO,IAAIG,WAKtC,QAJImC,EAAM,EAENZ,EAAS,EACT1B,EAAS,EACNiB,EAAOqB,CAAAA,IAAS3B,GACrBe,IACAY,IAMF,QAHIT,GAAUZ,EAAOjB,OAASsC,GAAO1B,EAAU,IAAO,EAClD2B,EAAO,IAAIpC,WAAW0B,CAAAA,EAEnBZ,EAAOqB,CAAAA,GAAM,CAElB,IAAIP,EAAQ7B,EAASe,EAAOR,WAAW6B,CAAAA,CAAAA,EAEvC,GAAIP,IAAU,IAAO,OAErB,QADI1B,EAAI,EACCmC,EAAMX,EAAO,GAAIE,IAAU,GAAK1B,EAAIL,IAAYwC,IAAQ,GAAKA,IAAOnC,IAC3E0B,GAAUrB,EAAO6B,EAAKC,CAAAA,IAAU,EAChCD,EAAKC,CAAAA,EAAQT,EAAQ,MAAS,EAC9BA,EAASA,EAAQ,MAAS,EAE5B,GAAIA,IAAU,EAAK,MAAM,IAAIE,MAAM,gBAAA,EACnCjC,EAASK,EACTiC,IAIF,QADIG,EAAMZ,EAAO7B,EACVyC,IAAQZ,GAAQU,EAAKE,CAAAA,IAAS,GACnCA,IAIF,QAFIC,EAAM,IAAIvC,WAAWuB,GAAUG,EAAOY,EAAE,EACxCrC,GAAIsB,EACDe,IAAQZ,GACba,EAAItC,IAAAA,EAAOmC,EAAKE,GAAAA,EAElB,OAAOC,CACT,CAzCSL,EAAAA,EAAAA,gBA0CT,SAASM,EAAQC,EAAM,CACrB,IAAIxB,EAASiB,EAAaO,CAAAA,EAC1B,GAAIxB,EAAU,OAAOA,EACrB,MAAM,IAAIa,MAAM,WAAavB,EAAO,YAAA,CACtC,CAJSiC,OAAAA,EAAAA,EAAAA,UAKF,CACL3B,OAAQA,EACRqB,aAAcA,EACdM,OAAQA,CACV,CACF,CAjHS7C,EAAAA,GAAAA,QAkHTD,GAAOD,QAAUE,KCxHjB,IAAA+C,GAAAlD,EAAAC,GAAA,cACAkD,OAAOC,eAAenD,EAAS,aAAc,CAAEoD,MAAO,EAAK,CAAA,EAC3DpD,EAAQqD,OAASrD,EAAQsD,OAAStD,EAAQuD,KAAOvD,EAAQwD,MAAQxD,EAAQyD,KAAOzD,EAAQ0D,OAAS1D,EAAQ2D,QAAU,OACnH,SAASD,GAAOE,EAAC,CACb,GAAI,CAACC,OAAOC,cAAcF,CAAAA,GAAMA,EAAI,EAChC,MAAM,IAAIvB,MAAM,kCAAkCuB,GAAG,CAC7D,CAHSF,EAAAA,GAAAA,UAIT1D,EAAQ0D,OAASA,GACjB,SAASD,GAAKM,EAAC,CACX,GAAI,OAAOA,GAAM,UACb,MAAM,IAAI1B,MAAM,yBAAyB0B,GAAG,CACpD,CAHSN,EAAAA,GAAAA,QAITzD,EAAQyD,KAAOA,GAEf,SAASE,GAAQK,EAAC,CACd,OAAQA,aAAazD,YAChByD,GAAK,MAAQ,OAAOA,GAAM,UAAYA,EAAEC,YAAYC,OAAS,YACtE,CAHSP,EAAAA,GAAAA,WAIT3D,EAAQ2D,QAAUA,GAClB,SAASH,GAAMO,KAAMI,EAAO,CACxB,GAAI,CAACR,GAAQI,CAAAA,EACT,MAAM,IAAI1B,MAAM,qBAAA,EACpB,GAAI8B,EAAQ/D,OAAS,GAAK,CAAC+D,EAAQC,SAASL,EAAE3D,MAAM,EAChD,MAAM,IAAIiC,MAAM,iCAAiC8B,oBAA0BJ,EAAE3D,QAAQ,CAC7F,CALSoD,EAAAA,GAAAA,SAMTxD,EAAQwD,MAAQA,GAChB,SAASD,GAAKc,EAAC,CACX,GAAI,OAAOA,GAAM,YAAc,OAAOA,EAAEC,QAAW,WAC/C,MAAM,IAAIjC,MAAM,iDAAA,EACpBqB,GAAOW,EAAEE,SAAS,EAClBb,GAAOW,EAAEG,QAAQ,CACrB,CALSjB,EAAAA,GAAAA,QAMTvD,EAAQuD,KAAOA,GACf,SAASD,GAAOmB,EAAUC,EAAgB,GAAI,CAC1C,GAAID,EAASE,UACT,MAAM,IAAItC,MAAM,kCAAA,EACpB,GAAIqC,GAAiBD,EAASG,SAC1B,MAAM,IAAIvC,MAAM,uCAAA,CACxB,CALSiB,EAAAA,GAAAA,UAMTtD,EAAQsD,OAASA,GACjB,SAASD,GAAOwB,EAAKJ,EAAQ,CACzBjB,GAAMqB,CAAAA,EACN,IAAMC,EAAML,EAASF,UACrB,GAAIM,EAAIzE,OAAS0E,EACb,MAAM,IAAIzC,MAAM,yDAAyDyC,GAAK,CAEtF,CANSzB,EAAAA,GAAAA,UAOTrD,EAAQqD,OAASA,GACjB,IAAM0B,GAAS,CAAErB,OAAAA,GAAQD,KAAAA,GAAMD,MAAAA,GAAOD,KAAAA,GAAMD,OAAAA,GAAQD,OAAAA,EAAO,EAC3DrD,EAAQgF,QAAUD,KCjDlB,IAAAE,GAAAlF,EAAAC,GAAA,cACAkD,OAAOC,eAAenD,EAAS,aAAc,CAAEoD,MAAO,EAAK,CAAA,EAC3DpD,EAAQkF,MAAQlF,EAAQmF,MAAQnF,EAAQoF,MAAQpF,EAAQqF,MAAQrF,EAAQsF,MAAQtF,EAAQuF,MAAQvF,EAAQwF,IAAMxF,EAAQyF,OAASzF,EAAQ0F,OAAS1F,EAAQ2F,OAAS3F,EAAQ4F,OAAS5F,EAAQ6F,QAAU7F,EAAQ8F,QAAU9F,EAAQ+F,OAAS/F,EAAQgG,OAAShG,EAAQiG,OAASjG,EAAQkG,OAASlG,EAAQmG,MAAQnG,EAAQoG,MAAQpG,EAAQqG,MAAQrG,EAAQsG,MAAQtG,EAAQuG,QAAU,OAC5W,IAAMC,GAA6BC,OAAO,GAAK,GAAK,CAAA,EAC9CC,GAAuBD,OAAO,EAAA,EAEpC,SAASF,GAAQ3C,EAAG+C,EAAK,GAAK,CAC1B,OAAIA,EACO,CAAEtC,EAAGR,OAAOD,EAAI4C,EAAAA,EAAaI,EAAG/C,OAAQD,GAAK8C,GAAQF,EAAAA,CAAY,EACrE,CAAEnC,EAAGR,OAAQD,GAAK8C,GAAQF,EAAAA,EAAc,EAAGI,EAAG/C,OAAOD,EAAI4C,EAAAA,EAAc,CAAE,CACpF,CAJSD,EAAAA,GAAAA,WAKTvG,EAAQuG,QAAUA,GAClB,SAASD,GAAMO,EAAKF,EAAK,GAAK,CAC1B,IAAIG,EAAK,IAAIC,YAAYF,EAAIzG,MAAM,EAC/B4G,EAAK,IAAID,YAAYF,EAAIzG,MAAM,EACnC,QAASK,EAAI,EAAGA,EAAIoG,EAAIzG,OAAQK,IAAK,CACjC,GAAM,CAAE4D,EAAAA,EAAGuC,EAAAA,CAAC,EAAKL,GAAQM,EAAIpG,CAAAA,EAAIkG,CAAAA,EACjC,CAACG,EAAGrG,CAAAA,EAAIuG,EAAGvG,CAAAA,CAAE,EAAI,CAAC4D,EAAGuC,GAEzB,MAAO,CAACE,EAAIE,EAChB,CARSV,EAAAA,GAAAA,SASTtG,EAAQsG,MAAQA,GAChB,IAAMD,GAAQY,EAAA,CAAC5C,EAAGuC,IAAOH,OAAOpC,IAAM,CAAA,GAAMqC,GAAQD,OAAOG,IAAM,CAAA,EAAnD,SACd5G,EAAQqG,MAAQA,GAEhB,IAAMD,GAAQa,EAAA,CAAC5C,EAAG6C,EAAIC,IAAM9C,IAAM8C,EAApB,SACdnH,EAAQoG,MAAQA,GAChB,IAAMD,GAAQc,EAAA,CAAC5C,EAAGuC,EAAGO,IAAO9C,GAAM,GAAK8C,EAAOP,IAAMO,EAAtC,SACdnH,EAAQmG,MAAQA,GAEhB,IAAMD,GAASe,EAAA,CAAC5C,EAAGuC,EAAGO,IAAO9C,IAAM8C,EAAMP,GAAM,GAAKO,EAArC,UACfnH,EAAQkG,OAASA,GACjB,IAAMD,GAASgB,EAAA,CAAC5C,EAAGuC,EAAGO,IAAO9C,GAAM,GAAK8C,EAAOP,IAAMO,EAAtC,UACfnH,EAAQiG,OAASA,GAEjB,IAAMD,GAASiB,EAAA,CAAC5C,EAAGuC,EAAGO,IAAO9C,GAAM,GAAK8C,EAAOP,IAAOO,EAAI,GAA3C,UACfnH,EAAQgG,OAASA,GACjB,IAAMD,GAASkB,EAAA,CAAC5C,EAAGuC,EAAGO,IAAO9C,IAAO8C,EAAI,GAAQP,GAAM,GAAKO,EAA5C,UACfnH,EAAQ+F,OAASA,GAEjB,IAAMD,GAAUmB,EAAA,CAACG,EAAIR,IAAMA,EAAX,WAChB5G,EAAQ8F,QAAUA,GAClB,IAAMD,GAAUoB,EAAA,CAAC5C,EAAG6C,IAAO7C,EAAX,WAChBrE,EAAQ6F,QAAUA,GAElB,IAAMD,GAASqB,EAAA,CAAC5C,EAAGuC,EAAGO,IAAO9C,GAAK8C,EAAMP,IAAO,GAAKO,EAArC,UACfnH,EAAQ4F,OAASA,GACjB,IAAMD,GAASsB,EAAA,CAAC5C,EAAGuC,EAAGO,IAAOP,GAAKO,EAAM9C,IAAO,GAAK8C,EAArC,UACfnH,EAAQ2F,OAASA,GAEjB,IAAMD,GAASuB,EAAA,CAAC5C,EAAGuC,EAAGO,IAAOP,GAAMO,EAAI,GAAQ9C,IAAO,GAAK8C,EAA5C,UACfnH,EAAQ0F,OAASA,GACjB,IAAMD,GAASwB,EAAA,CAAC5C,EAAGuC,EAAGO,IAAO9C,GAAM8C,EAAI,GAAQP,IAAO,GAAKO,EAA5C,UACfnH,EAAQyF,OAASA,GAGjB,SAASD,GAAIsB,EAAIE,EAAIK,EAAIC,EAAE,CACvB,IAAMV,GAAKI,IAAO,IAAMM,IAAO,GAC/B,MAAO,CAAEjD,EAAIyC,EAAKO,GAAOT,EAAI,GAAK,GAAM,GAAM,EAAGA,EAAGA,EAAI,CAAE,CAC9D,CAHSpB,EAAAA,GAAAA,OAITxF,EAAQwF,IAAMA,GAEd,IAAMD,GAAQ0B,EAAA,CAACD,EAAIM,EAAIC,KAAQP,IAAO,IAAMM,IAAO,IAAMC,IAAO,GAAlD,SACdvH,EAAQuF,MAAQA,GAChB,IAAMD,GAAQ2B,EAAA,CAACO,EAAKV,EAAIO,EAAII,IAAQX,EAAKO,EAAKI,GAAOD,EAAM,GAAK,GAAM,GAAM,EAA9D,SACdxH,EAAQsF,MAAQA,GAChB,IAAMD,GAAQ4B,EAAA,CAACD,EAAIM,EAAIC,EAAIG,KAAQV,IAAO,IAAMM,IAAO,IAAMC,IAAO,IAAMG,IAAO,GAAnE,SACd1H,EAAQqF,MAAQA,GAChB,IAAMD,GAAQ6B,EAAA,CAACO,EAAKV,EAAIO,EAAII,EAAIE,IAAQb,EAAKO,EAAKI,EAAKE,GAAOH,EAAM,GAAK,GAAM,GAAM,EAAvE,SACdxH,EAAQoF,MAAQA,GAChB,IAAMF,GAAQ+B,EAAA,CAACD,EAAIM,EAAIC,EAAIG,EAAIE,KAAQZ,IAAO,IAAMM,IAAO,IAAMC,IAAO,IAAMG,IAAO,IAAME,IAAO,GAApF,SACd5H,EAAQkF,MAAQA,GAChB,IAAMC,GAAQ8B,EAAA,CAACO,EAAKV,EAAIO,EAAII,EAAIE,EAAIE,IAAQf,EAAKO,EAAKI,EAAKE,EAAKE,GAAOL,EAAM,GAAK,GAAM,GAAM,EAAhF,SACdxH,EAAQmF,MAAQA,GAEhB,IAAM2C,GAAM,CACRvB,QAAAA,GAASD,MAAAA,GAAOD,MAAAA,GAChBD,MAAAA,GAAOD,MAAAA,GACPD,OAAAA,GAAQD,OAAAA,GAAQD,OAAAA,GAAQD,OAAAA,GACxBD,QAAAA,GAASD,QAAAA,GACTD,OAAAA,GAAQD,OAAAA,GAAQD,OAAAA,GAAQD,OAAAA,GACxBD,IAAAA,GAAKD,MAAAA,GAAOD,MAAAA,GAAOD,MAAAA,GAAOD,MAAAA,GAAOD,MAAAA,GAAOD,MAAAA,EAC5C,EACAlF,EAAQgF,QAAU8C,KCnFlB,IAAAC,GAAAhI,EAAAC,IAAA,cACAkD,OAAOC,eAAenD,GAAS,aAAc,CAAEoD,MAAO,EAAK,CAAA,EAC3DpD,GAAQgI,OAAS,OACjBhI,GAAQgI,OAAS,OAAOC,YAAe,UAAY,WAAYA,WAAaA,WAAWD,OAASE,SCHhG,IAAAC,GAAApI,EAAAC,GAAA,cAEAkD,OAAOC,eAAenD,EAAS,aAAc,CAAEoD,MAAO,EAAK,CAAA,EAC3DpD,EAAQoI,YAAcpI,EAAQqI,2BAA6BrI,EAAQsI,wBAA0BtI,EAAQuI,gBAAkBvI,EAAQwI,UAAYxI,EAAQyI,KAAOzI,EAAQ0I,YAAc1I,EAAQ2I,QAAU3I,EAAQ4I,YAAc5I,EAAQ6I,UAAY7I,EAAQ8I,SAAW9I,EAAQ+I,WAAa/I,EAAQgJ,WAAahJ,EAAQiJ,WAAajJ,EAAQkJ,aAAelJ,EAAQmJ,SAAWnJ,EAAQoJ,KAAOpJ,EAAQqJ,KAAOrJ,EAAQsJ,KAAOtJ,EAAQuJ,WAAavJ,EAAQwJ,IAAMxJ,EAAQyJ,GAAKzJ,EAAQ2D,QAAU,OAOvd,IAAM+F,GAAWC,KACXC,GAAeD,KAGrB,SAAShG,GAAQK,EAAC,CACd,OAAQA,aAAazD,YAChByD,GAAK,MAAQ,OAAOA,GAAM,UAAYA,EAAEC,YAAYC,OAAS,YACtE,CAHSP,EAAAA,GAAAA,WAIT3D,EAAQ2D,QAAUA,GAElB,IAAM8F,GAAKxC,EAAC4C,GAAQ,IAAItJ,WAAWsJ,EAAIrI,OAAQqI,EAAIpI,WAAYoI,EAAInI,UAAU,EAAlE,MACX1B,EAAQyJ,GAAKA,GACb,IAAMD,GAAMvC,EAAC4C,GAAQ,IAAI9C,YAAY8C,EAAIrI,OAAQqI,EAAIpI,WAAYR,KAAK6I,MAAMD,EAAInI,WAAa,CAAA,CAAA,EAAjF,OACZ1B,EAAQwJ,IAAMA,GAEd,IAAMD,GAAatC,EAAC4C,GAAQ,IAAIE,SAASF,EAAIrI,OAAQqI,EAAIpI,WAAYoI,EAAInI,UAAU,EAAhE,cACnB1B,EAAQuJ,WAAaA,GAErB,IAAMD,GAAOrC,EAAA,CAAC+C,EAAMC,IAAWD,GAAS,GAAKC,EAAWD,IAASC,EAApD,QACbjK,EAAQsJ,KAAOA,GAEf,IAAMD,GAAOpC,EAAA,CAAC+C,EAAMC,IAAWD,GAAQC,EAAWD,IAAU,GAAKC,IAAY,EAAhE,QACbjK,EAAQqJ,KAAOA,GACfrJ,EAAQoJ,KAAO,IAAI7I,WAAW,IAAIwG,YAAY,CAAC,UAAW,EAAEvF,MAAM,EAAE,CAAA,IAAO,GAE3E,IAAM2H,GAAWlC,EAAC+C,GAAWA,GAAQ,GAAM,WACrCA,GAAQ,EAAK,SACbA,IAAS,EAAK,MACdA,IAAS,GAAM,IAHJ,YAIjBhK,EAAQmJ,SAAWA,GAEnBnJ,EAAQkJ,aAAelJ,EAAQoJ,KAAQxF,GAAMA,EAAKA,MAAU5D,EAAQmJ,UAAUvF,CAAAA,EAE9E,SAASqF,GAAWY,EAAG,CACnB,QAASpJ,EAAI,EAAGA,EAAIoJ,EAAIzJ,OAAQK,IAC5BoJ,EAAIpJ,CAAAA,KAAST,EAAQmJ,UAAUU,EAAIpJ,CAAAA,CAAE,CAE7C,CAJSwI,EAAAA,GAAAA,cAKTjJ,EAAQiJ,WAAaA,GAErB,IAAMiB,GAAwBvI,MAAME,KAAK,CAAEzB,OAAQ,GAAI,EAAG,CAAC+J,EAAG1J,IAAMA,EAAE2J,SAAS,EAAA,EAAIC,SAAS,EAAG,GAAA,CAAA,EAI/F,SAASrB,GAAWxF,EAAK,IACjBoG,GAAapG,OAAOA,CAAAA,EAExB,IAAI8G,EAAM,GACV,QAAS7J,EAAI,EAAGA,EAAI+C,EAAMpD,OAAQK,IAC9B6J,GAAOJ,GAAM1G,EAAM/C,CAAAA,CAAE,EAEzB,OAAO6J,CACX,CARStB,EAAAA,GAAAA,cASThJ,EAAQgJ,WAAaA,GAErB,IAAMuB,EAAS,CAAEC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI,EACjE,SAASC,GAAcC,EAAI,CACvB,GAAIA,GAAQR,EAAOC,IAAMO,GAAQR,EAAOE,GACpC,OAAOM,EAAOR,EAAOC,GACzB,GAAIO,GAAQR,EAAOG,IAAMK,GAAQR,EAAOI,GACpC,OAAOI,GAAQR,EAAOG,GAAK,IAC/B,GAAIK,GAAQR,EAAOK,IAAMG,GAAQR,EAAOM,GACpC,OAAOE,GAAQR,EAAOK,GAAK,GAEnC,CARSE,EAAAA,GAAAA,iBAYT,SAAS/B,GAAWuB,EAAG,CACnB,GAAI,OAAOA,GAAQ,SACf,MAAM,IAAIjI,MAAM,4BAA8B,OAAOiI,CAAAA,EACzD,IAAMU,EAAKV,EAAIlK,OACT6K,EAAKD,EAAK,EAChB,GAAIA,EAAK,EACL,MAAM,IAAI3I,MAAM,0DAA4D2I,CAAAA,EAChF,IAAME,EAAQ,IAAI3K,WAAW0K,CAAAA,EAC7B,QAASE,EAAK,EAAGC,EAAK,EAAGD,EAAKF,EAAIE,IAAMC,GAAM,EAAG,CAC7C,IAAMC,EAAKP,GAAcR,EAAIzJ,WAAWuK,CAAAA,CAAAA,EAClCE,EAAKR,GAAcR,EAAIzJ,WAAWuK,EAAK,CAAA,CAAA,EAC7C,GAAIC,IAAOnD,QAAaoD,IAAOpD,OAAW,CACtC,IAAM6C,EAAOT,EAAIc,CAAAA,EAAMd,EAAIc,EAAK,CAAA,EAChC,MAAM,IAAI/I,MAAM,+CAAiD0I,EAAO,cAAgBK,CAAAA,EAE5FF,EAAMC,CAAAA,EAAME,EAAK,GAAKC,EAE1B,OAAOJ,CACX,CAlBSnC,EAAAA,GAAAA,cAmBT/I,EAAQ+I,WAAaA,GAIrB,IAAMD,GAAW7B,EAAA,SAAA,CAAc,EAAd,YACjBjH,EAAQ8I,SAAWA,GAEnB,eAAeD,GAAU0C,EAAOC,EAAMC,EAAE,CACpC,IAAIC,EAAKC,KAAKC,IAAG,EACjB,QAASnL,EAAI,EAAGA,EAAI8K,EAAO9K,IAAK,CAC5BgL,EAAGhL,CAAAA,EAEH,IAAMoL,EAAOF,KAAKC,IAAG,EAAKF,EACtBG,GAAQ,GAAKA,EAAOL,IAExB,QAAUxL,EAAQ8I,UAAO,EACzB4C,GAAMG,GAEd,CAXehD,EAAAA,GAAAA,aAYf7I,EAAQ6I,UAAYA,GAIpB,SAASD,GAAYrG,EAAG,CACpB,GAAI,OAAOA,GAAQ,SACf,MAAM,IAAIF,MAAM,oCAAoC,OAAOE,GAAK,EACpE,OAAO,IAAIhC,WAAW,IAAIuL,YAAAA,EAAc1K,OAAOmB,CAAAA,CAAAA,CACnD,CAJSqG,EAAAA,GAAAA,eAKT5I,EAAQ4I,YAAcA,GAMtB,SAASD,GAAQoD,EAAI,CACjB,OAAI,OAAOA,GAAS,WAChBA,EAAOnD,GAAYmD,CAAAA,MACnBnC,GAAapG,OAAOuI,CAAAA,EACjBA,CACX,CALSpD,EAAAA,GAAAA,WAMT3I,EAAQ2I,QAAUA,GAIlB,SAASD,MAAesD,EAAM,CAC1B,IAAIC,EAAM,EACV,QAASxL,EAAI,EAAGA,EAAIuL,EAAO5L,OAAQK,IAAK,CACpC,IAAMuD,EAAIgI,EAAOvL,CAAAA,KACbmJ,GAAapG,OAAOQ,CAAAA,EACxBiI,GAAOjI,EAAE5D,OAEb,IAAM8L,EAAM,IAAI3L,WAAW0L,CAAAA,EAC3B,QAASxL,EAAI,EAAG0L,EAAM,EAAG1L,EAAIuL,EAAO5L,OAAQK,IAAK,CAC7C,IAAMuD,EAAIgI,EAAOvL,CAAAA,EACjByL,EAAIE,IAAIpI,EAAGmI,CAAAA,EACXA,GAAOnI,EAAE5D,OAEb,OAAO8L,CACX,CAdSxD,EAAAA,GAAAA,eAeT1I,EAAQ0I,YAAcA,GAEtB,IAAMD,GAANxB,EAAA,KAAMwB,CAEF4D,OAAQ,CACJ,OAAO,KAAKC,WAAU,CAC1B,CACJ,EALA,QAMAtM,EAAQyI,KAAOA,GACf,IAAM8D,GAAQ,CAAC,EAAEnC,SACjB,SAAS5B,GAAUgE,EAAUC,EAAI,CAC7B,GAAIA,IAASvE,QAAaqE,GAAMG,KAAKD,CAAAA,IAAU,kBAC3C,MAAM,IAAIpK,MAAM,uCAAA,EAEpB,OADea,OAAOyJ,OAAOH,EAAUC,CAAAA,CAE3C,CALSjE,EAAAA,GAAAA,aAMTxI,EAAQwI,UAAYA,GACpB,SAASD,GAAgBqE,EAAQ,CAC7B,IAAMC,EAAQ5F,EAAC6F,GAAQF,EAAAA,EAAWG,OAAOpE,GAAQmE,CAAAA,CAAAA,EAAME,OAAM,EAA/C,SACRC,EAAML,EAAAA,EACZC,OAAAA,EAAMtI,UAAY0I,EAAI1I,UACtBsI,EAAMrI,SAAWyI,EAAIzI,SACrBqI,EAAMvI,OAAS,IAAMsI,EAAAA,EACdC,CACX,CAPStE,EAAAA,GAAAA,mBAQTvI,EAAQuI,gBAAkBA,GAC1B,SAASD,GAAwBsE,EAAQ,CACrC,IAAMC,EAAQ5F,EAAA,CAAC6F,EAAKL,IAASG,EAASH,CAAAA,EAAMM,OAAOpE,GAAQmE,CAAAA,CAAAA,EAAME,OAAM,EAAzD,SACRC,EAAML,EAAS,CAAC,CAAA,EACtBC,OAAAA,EAAMtI,UAAY0I,EAAI1I,UACtBsI,EAAMrI,SAAWyI,EAAIzI,SACrBqI,EAAMvI,OAAUmI,GAASG,EAASH,CAAAA,EAC3BI,CACX,CAPSvE,EAAAA,GAAAA,2BAQTtI,EAAQsI,wBAA0BA,GAClC,SAASD,GAA2BuE,EAAQ,CACxC,IAAMC,EAAQ5F,EAAA,CAAC6F,EAAKL,IAASG,EAASH,CAAAA,EAAMM,OAAOpE,GAAQmE,CAAAA,CAAAA,EAAME,OAAM,EAAzD,SACRC,EAAML,EAAS,CAAC,CAAA,EACtBC,OAAAA,EAAMtI,UAAY0I,EAAI1I,UACtBsI,EAAMrI,SAAWyI,EAAIzI,SACrBqI,EAAMvI,OAAUmI,GAASG,EAASH,CAAAA,EAC3BI,CACX,CAPSxE,EAAAA,GAAAA,8BAQTrI,EAAQqI,2BAA6BA,GAIrC,SAASD,GAAY8E,EAAc,GAAE,CACjC,GAAIxD,GAAS1B,QAAU,OAAO0B,GAAS1B,OAAOmF,iBAAoB,WAC9D,OAAOzD,GAAS1B,OAAOmF,gBAAgB,IAAI5M,WAAW2M,CAAAA,CAAAA,EAE1D,MAAM,IAAI7K,MAAM,wCAAA,CACpB,CALS+F,EAAAA,GAAAA,eAMTpI,EAAQoI,YAAcA,KCjNtB,IAAAgF,GAAArN,EAAAC,GAAA,cACAkD,OAAOC,eAAenD,EAAS,aAAc,CAAEoD,MAAO,EAAK,CAAA,EAC3DpD,EAAQqN,SAAWrN,EAAQsN,SAAWtN,EAAQuN,WAAavN,EAAQwN,WAAaxN,EAAQyN,WAAazN,EAAQ0N,WAAa1N,EAAQ2N,SAAW3N,EAAQ4N,SAAW5N,EAAQ6N,SAAW7N,EAAQ8N,SAAW9N,EAAQ+N,OAAS/N,EAAQgO,QAAU,OACzO,IAAMpE,EAAeD,KACfsE,GAAYtE,KACZuE,EAAavE,KAIbwE,GAAU,CAAA,EACVC,GAAY,CAAA,EACZC,GAAa,CAAA,EACbC,GAAsB7H,OAAO,CAAA,EAC7B8H,GAAsB9H,OAAO,CAAA,EAC7B+H,GAAsB/H,OAAO,CAAA,EAC7BgI,GAAsBhI,OAAO,CAAA,EAC7BiI,GAAwBjI,OAAO,GAAA,EAC/BkI,GAAyBlI,OAAO,GAAA,EACtC,QAASmI,EAAQ,EAAGC,EAAIN,GAAK7N,EAAI,EAAGoO,EAAI,EAAGF,EAAQ,GAAIA,IAAS,CAE5D,CAAClO,EAAGoO,CAAAA,EAAK,CAACA,GAAI,EAAIpO,EAAI,EAAIoO,GAAK,GAC/BX,GAAQY,KAAK,GAAK,EAAID,EAAIpO,EAAAA,EAE1B0N,GAAUW,MAAQH,EAAQ,IAAMA,EAAQ,GAAM,EAAK,EAAA,EAEnD,IAAII,EAAIV,GACR,QAAS9N,EAAI,EAAGA,EAAI,EAAGA,IACnBqO,GAAMA,GAAKN,IAASM,GAAKJ,IAAOE,IAAWD,GACvCG,EAAIL,KACJQ,GAAKT,KAASA,IAAuB9H,OAAOjG,CAAAA,GAAM+N,IAE1DF,GAAWU,KAAKC,CAAAA,EAEpB,GAAM,CAACC,GAAaC,EAAAA,KAAmCjB,GAAU3H,OAAO+H,GAAY,EAAA,EAE9Ec,GAAQlI,EAAA,CAAC5C,EAAGuC,EAAGO,IAAOA,EAAI,MAAS8G,GAAUvI,QAAQrB,EAAGuC,EAAGO,CAAAA,KAAS8G,GAAUrI,QAAQvB,EAAGuC,EAAGO,CAAAA,EAApF,SACRiI,GAAQnI,EAAA,CAAC5C,EAAGuC,EAAGO,IAAOA,EAAI,MAAS8G,GAAUxI,QAAQpB,EAAGuC,EAAGO,CAAAA,KAAS8G,GAAUtI,QAAQtB,EAAGuC,EAAGO,CAAAA,EAApF,SAEd,SAAS6G,GAAQ7G,EAAGkI,EAAS,GAAE,CAC3B,IAAMC,EAAI,IAAIvI,YAAY,EAAI,EAE9B,QAAS6H,EAAQ,GAAKS,EAAQT,EAAQ,GAAIA,IAAS,CAE/C,QAASlO,EAAI,EAAGA,EAAI,GAAIA,IACpB4O,EAAE5O,CAAAA,EAAKyG,EAAEzG,CAAAA,EAAKyG,EAAEzG,EAAI,EAAA,EAAMyG,EAAEzG,EAAI,EAAA,EAAMyG,EAAEzG,EAAI,EAAA,EAAMyG,EAAEzG,EAAI,EAAA,EAC5D,QAASA,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC5B,IAAM6O,GAAQ7O,EAAI,GAAK,GACjB8O,GAAQ9O,EAAI,GAAK,GACjB+O,EAAKH,EAAEE,CAAAA,EACPE,EAAKJ,EAAEE,EAAO,CAAA,EACdG,EAAKR,GAAMM,EAAIC,EAAI,CAAA,EAAKJ,EAAEC,CAAAA,EAC1BK,EAAKR,GAAMK,EAAIC,EAAI,CAAA,EAAKJ,EAAEC,EAAO,CAAA,EACvC,QAAST,EAAI,EAAGA,EAAI,GAAIA,GAAK,GACzB3H,EAAEzG,EAAIoO,CAAAA,GAAMa,EACZxI,EAAEzG,EAAIoO,EAAI,CAAA,GAAMc,EAIxB,IAAIC,EAAO1I,EAAE,CAAA,EACT2I,EAAO3I,EAAE,CAAA,EACb,QAAS6H,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAM/E,EAAQmE,GAAUY,CAAAA,EAClBW,EAAKR,GAAMU,EAAMC,EAAM7F,CAAAA,EACvB2F,EAAKR,GAAMS,EAAMC,EAAM7F,CAAAA,EACvB8F,EAAK5B,GAAQa,CAAAA,EACnBa,EAAO1I,EAAE4I,CAAAA,EACTD,EAAO3I,EAAE4I,EAAK,CAAA,EACd5I,EAAE4I,CAAAA,EAAMJ,EACRxI,EAAE4I,EAAK,CAAA,EAAKH,EAGhB,QAASd,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAAI,CAC7B,QAASpO,EAAI,EAAGA,EAAI,GAAIA,IACpB4O,EAAE5O,CAAAA,EAAKyG,EAAE2H,EAAIpO,CAAAA,EACjB,QAASA,EAAI,EAAGA,EAAI,GAAIA,IACpByG,EAAE2H,EAAIpO,CAAAA,GAAM,CAAC4O,GAAG5O,EAAI,GAAK,EAAA,EAAM4O,GAAG5O,EAAI,GAAK,EAAA,EAGnDyG,EAAE,CAAA,GAAM8H,GAAYL,CAAAA,EACpBzH,EAAE,CAAA,GAAM+H,GAAYN,CAAAA,EAExBU,EAAEU,KAAK,CAAA,CACX,CA5CShC,EAAAA,GAAAA,WA6CThO,EAAQgO,QAAUA,GAClB,IAAMD,GAAN9G,EAAA,MAAM8G,WAAeG,EAAWzF,IAAI,CAEhCxE,YAAYO,EAAUyL,EAAQ1L,EAAW2L,EAAY,GAAOb,EAAS,GAAI,CAcrE,GAbA,MAAK,EACL,KAAK7K,SAAWA,EAChB,KAAKyL,OAASA,EACd,KAAK1L,UAAYA,EACjB,KAAK2L,UAAYA,EACjB,KAAKb,OAASA,EACd,KAAKc,IAAM,EACX,KAAKC,OAAS,EACd,KAAKxL,SAAW,GAChB,KAAKD,UAAY,MAEbiF,EAAalG,QAAQa,CAAAA,EAErB,GAAK,KAAKC,UAAY,KAAKA,UAAY,IACvC,MAAM,IAAInC,MAAM,0CAAA,EACpB,KAAKgO,MAAQ,IAAI9P,WAAW,GAAA,EAC5B,KAAK+P,WAAcpC,EAAW1E,KAAK,KAAK6G,KAAK,CACjD,CACAE,QAAS,CACArC,EAAW9E,SACR8E,EAAWjF,YAAY,KAAKqH,OAAO,EAC3CtC,GAAQ,KAAKsC,QAAS,KAAKjB,MAAM,EAC5BnB,EAAW9E,SACR8E,EAAWjF,YAAY,KAAKqH,OAAO,EAC3C,KAAKF,OAAS,EACd,KAAKD,IAAM,CACf,CACApD,OAAOhB,EAAM,IACLnC,EAAatG,QAAQ,IAAI,EAC7B,GAAM,CAAEkB,SAAAA,EAAU6L,MAAAA,CAAK,EAAK,KAC5BtE,KAAWmC,EAAWvF,SAASoD,CAAAA,EAC/B,IAAMyE,EAAMzE,EAAK3L,OACjB,QAAS+P,EAAM,EAAGA,EAAMK,GAAM,CAC1B,IAAMC,EAAOxP,KAAK6D,IAAIN,EAAW,KAAK2L,IAAKK,EAAML,CAAAA,EACjD,QAAS1P,EAAI,EAAGA,EAAIgQ,EAAMhQ,IACtB4P,EAAM,KAAKF,KAAG,GAAOpE,EAAKoE,GAAAA,EAC1B,KAAKA,MAAQ3L,GACb,KAAK+L,OAAM,EAEnB,OAAO,IACX,CACAG,QAAS,CACL,GAAI,KAAK9L,SACL,OACJ,KAAKA,SAAW,GAChB,GAAM,CAAEyL,MAAAA,EAAOJ,OAAAA,EAAQE,IAAAA,EAAK3L,SAAAA,CAAQ,EAAK,KAEzC6L,EAAMF,CAAAA,GAAQF,EACTA,EAAS,KAAeE,IAAQ3L,EAAW,GAC5C,KAAK+L,OAAM,EACfF,EAAM7L,EAAW,CAAA,GAAM,IACvB,KAAK+L,OAAM,CACf,CACAI,UAAU9L,EAAK,IACP+E,EAAatG,QAAQ,KAAM,EAAA,KAC3BsG,EAAapG,OAAOqB,CAAAA,EACxB,KAAK6L,OAAM,EACX,IAAME,EAAY,KAAKP,MACjB,CAAE7L,SAAAA,CAAQ,EAAK,KACrB,QAAS2L,EAAM,EAAGK,EAAM3L,EAAIzE,OAAQ+P,EAAMK,GAAM,CACxC,KAAKJ,QAAU5L,GACf,KAAK+L,OAAM,EACf,IAAME,EAAOxP,KAAK6D,IAAIN,EAAW,KAAK4L,OAAQI,EAAML,CAAAA,EACpDtL,EAAIuH,IAAIwE,EAAUC,SAAS,KAAKT,OAAQ,KAAKA,OAASK,CAAAA,EAAON,CAAAA,EAC7D,KAAKC,QAAUK,EACfN,GAAOM,EAEX,OAAO5L,CACX,CACAiM,QAAQjM,EAAK,CAET,GAAI,CAAC,KAAKqL,UACN,MAAM,IAAI7N,MAAM,uCAAA,EACpB,OAAO,KAAKsO,UAAU9L,CAAAA,CAC1B,CACAkM,IAAIvN,EAAO,CACN,SAAGoG,EAAalG,QAAQF,CAAAA,EAClB,KAAKsN,QAAQ,IAAIvQ,WAAWiD,CAAAA,CAAAA,CACvC,CACAwN,WAAWnM,EAAK,CAEZ,MADI+E,EAAavG,QAAQwB,EAAK,IAAI,EAC9B,KAAKD,SACL,MAAM,IAAIvC,MAAM,6BAAA,EACpB,YAAKsO,UAAU9L,CAAAA,EACf,KAAKoM,QAAO,EACLpM,CACX,CACAmI,QAAS,CACL,OAAO,KAAKgE,WAAW,IAAIzQ,WAAW,KAAKgE,SAAS,CAAA,CACxD,CACA0M,SAAU,CACN,KAAKtM,UAAY,GACjB,KAAK0L,MAAML,KAAK,CAAA,CACpB,CACA1D,WAAW4E,EAAI,CACX,GAAM,CAAE1M,SAAAA,EAAUyL,OAAAA,EAAQ1L,UAAAA,EAAW8K,OAAAA,EAAQa,UAAAA,CAAS,EAAK,KAC3DgB,OAAAA,IAAOA,EAAK,IAAInD,GAAOvJ,EAAUyL,EAAQ1L,EAAW2L,EAAWb,CAAAA,GAC/D6B,EAAGZ,QAAQlE,IAAI,KAAKkE,OAAO,EAC3BY,EAAGf,IAAM,KAAKA,IACde,EAAGd,OAAS,KAAKA,OACjBc,EAAGtM,SAAW,KAAKA,SACnBsM,EAAG7B,OAASA,EAEZ6B,EAAGjB,OAASA,EACZiB,EAAG3M,UAAYA,EACf2M,EAAGhB,UAAYA,EACfgB,EAAGvM,UAAY,KAAKA,UACbuM,CACX,CACJ,EAhHA,UAiHAlR,EAAQ+N,OAASA,GACjB,IAAMoD,EAAMlK,EAAA,CAACgJ,EAAQzL,EAAUD,OAAkB2J,EAAW3F,iBAAiB,IAAM,IAAIwF,GAAOvJ,EAAUyL,EAAQ1L,CAAAA,CAAAA,EAApG,OACZvE,EAAQ8N,SAAWqD,EAAI,EAAM,IAAK,IAAM,CAAA,EAKxCnR,EAAQ6N,SAAWsD,EAAI,EAAM,IAAK,IAAM,CAAA,EACxCnR,EAAQ4N,SAAWuD,EAAI,EAAM,IAAK,IAAM,CAAA,EACxCnR,EAAQ2N,SAAWwD,EAAI,EAAM,GAAI,IAAM,CAAA,EACvCnR,EAAQ0N,WAAayD,EAAI,EAAM,IAAK,IAAM,CAAA,EAK1CnR,EAAQyN,WAAa0D,EAAI,EAAM,IAAK,IAAM,CAAA,EAC1CnR,EAAQwN,WAAa2D,EAAI,EAAM,IAAK,IAAM,CAAA,EAC1CnR,EAAQuN,WAAa4D,EAAI,EAAM,GAAI,IAAM,CAAA,EACzC,IAAMC,GAAWnK,EAAA,CAACgJ,EAAQzL,EAAUD,OAAkB2J,EAAW7F,4BAA4B,CAACoE,EAAO,CAAC,IAAM,IAAIsB,GAAOvJ,EAAUyL,EAAQxD,EAAK4E,QAAUnJ,OAAY3D,EAAYkI,EAAK4E,MAAO,EAAA,CAAA,EAA3K,YACjBrR,EAAQsN,SAAW8D,GAAS,GAAM,IAAK,IAAM,CAAA,EAC7CpR,EAAQqN,SAAW+D,GAAS,GAAM,IAAK,IAAM,CAAA,ICzN7C,IAAAE,GAAAvR,EAAAC,GAAA,cACAkD,OAAOC,eAAenD,EAAS,aAAc,CAAEoD,MAAO,EAAK,CAAA,EAC3DpD,EAAQuR,MAAQvR,EAAQwR,MAAQ,OAChC,IAAM5H,EAAeD,KACfuE,EAAavE,KAInB3J,EAAQwR,MAAQ,IAAIjR,WAAW,CAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EACnD,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EACnD,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAClD,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EACnD,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClD,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAClD,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EACnD,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EACtD,EACD,IAAMgR,GAANtK,EAAA,cAAoBiH,EAAWzF,IAAI,CAC/BxE,YAAYO,EAAUD,EAAWkI,EAAO,CAAC,EAAGgF,EAAQC,EAASC,EAAS,CAWlE,GAVA,MAAK,EACL,KAAKnN,SAAWA,EAChB,KAAKD,UAAYA,EACjB,KAAKnE,OAAS,EACd,KAAK+P,IAAM,EACX,KAAKvL,SAAW,GAChB,KAAKD,UAAY,MACbiF,EAAalG,QAAQc,CAAAA,KACrBoF,EAAalG,QAAQa,CAAAA,KACrBqF,EAAalG,QAAQ+N,CAAAA,EACrBlN,EAAY,GAAKA,EAAYkN,EAC7B,MAAM,IAAIpP,MAAM,8BAAA,EACpB,GAAIoK,EAAKmF,MAAQ1J,SAAcuE,EAAKmF,IAAIxR,OAAS,GAAKqM,EAAKmF,IAAIxR,OAASqR,GACpE,MAAM,IAAIpP,MAAM,qBAAqBoP,0BAA+B,EACxE,GAAIhF,EAAKoF,OAAS3J,QAAauE,EAAKoF,KAAKzR,SAAWsR,EAChD,MAAM,IAAIrP,MAAM,gBAAgBqP,0BAAgC,EACpE,GAAIjF,EAAKqF,kBAAoB5J,QAAauE,EAAKqF,gBAAgB1R,SAAWuR,EACtE,MAAM,IAAItP,MAAM,2BAA2BsP,0BAAgC,EAC/E,KAAKI,YAAe7D,EAAW1E,KAAM,KAAKhI,OAAS,IAAIjB,WAAWiE,CAAAA,CAAAA,CACtE,CACAuI,OAAOhB,EAAM,IACLnC,EAAatG,QAAQ,IAAI,EAK7B,GAAM,CAAEkB,SAAAA,EAAUhD,OAAAA,EAAQuQ,SAAAA,CAAQ,EAAK,KACvChG,KAAWmC,EAAWvF,SAASoD,CAAAA,EAC/B,IAAMyE,EAAMzE,EAAK3L,OACX4R,EAASjG,EAAKtK,WACdwQ,EAAMlG,EAAKvK,OACjB,QAAS2O,EAAM,EAAGA,EAAMK,GAAM,CAEtB,KAAKL,MAAQ3L,IACR0J,EAAW9E,SACR8E,EAAWjF,YAAY8I,CAAAA,EAC/B,KAAKG,SAASH,EAAU,EAAG,EAAA,EACtB7D,EAAW9E,SACR8E,EAAWjF,YAAY8I,CAAAA,EAC/B,KAAK5B,IAAM,GAEf,IAAMM,EAAOxP,KAAK6D,IAAIN,EAAW,KAAK2L,IAAKK,EAAML,CAAAA,EAC3CgC,EAAaH,EAAS7B,EAE5B,GAAIM,IAASjM,GAAY,EAAE2N,EAAa,IAAMhC,EAAMM,EAAOD,EAAK,CAC5D,IAAM4B,EAAS,IAAIrL,YAAYkL,EAAKE,EAAYlR,KAAK6I,OAAO0G,EAAML,GAAO,CAAA,CAAA,EACpEjC,EAAW9E,SACR8E,EAAWjF,YAAYmJ,CAAAA,EAC/B,QAASC,EAAQ,EAAGlC,EAAM3L,EAAWgM,EAAK6B,GAASN,EAAS3R,OAAQ+P,GAAO3L,EACvE,KAAKpE,QAAUoE,EACf,KAAK0N,SAASE,EAAQC,EAAO,EAAA,EAE5BnE,EAAW9E,SACR8E,EAAWjF,YAAYmJ,CAAAA,EAC/B,SAEJ5Q,EAAO4K,IAAIL,EAAK8E,SAASV,EAAKA,EAAMM,CAAAA,EAAO,KAAKN,GAAG,EACnD,KAAKA,KAAOM,EACZ,KAAKrQ,QAAUqQ,EACfN,GAAOM,EAEX,OAAO,IACX,CACAO,WAAWnM,EAAK,IACR+E,EAAatG,QAAQ,IAAI,KACzBsG,EAAavG,QAAQwB,EAAK,IAAI,EAClC,GAAM,CAAEsL,IAAAA,EAAK4B,SAAAA,CAAQ,EAAK,KAC1B,KAAKnN,SAAW,GAEhB,KAAKpD,OAAOqP,SAASV,CAAAA,EAAKH,KAAK,CAAA,EAC1B9B,EAAW9E,SACR8E,EAAWjF,YAAY8I,CAAAA,EAC/B,KAAKG,SAASH,EAAU,EAAG,EAAA,EACtB7D,EAAW9E,SACR8E,EAAWjF,YAAY8I,CAAAA,EAC/B,IAAMO,KAAYpE,EAAW1E,KAAK3E,CAAAA,EAClC,KAAK0N,IAAG,EAAGC,QAAQ,CAACC,EAAGhS,IAAO6R,EAAM7R,CAAAA,KAASyN,EAAWhF,cAAcuJ,CAAAA,CAAAA,CAC1E,CACAzF,QAAS,CACL,GAAM,CAAExL,OAAAA,EAAQ+C,UAAAA,CAAS,EAAK,KAC9B,KAAKyM,WAAWxP,CAAAA,EAChB,IAAM0K,EAAM1K,EAAOkR,MAAM,EAAGnO,CAAAA,EAC5B,YAAK0M,QAAO,EACL/E,CACX,CACAI,WAAW4E,EAAI,CACX,GAAM,CAAE1P,OAAAA,EAAQpB,OAAAA,EAAQwE,SAAAA,EAAUD,UAAAA,EAAWJ,UAAAA,EAAW4L,IAAAA,CAAG,EAAK,KAChEe,OAAAA,IAAOA,EAAK,IAAI,KAAKjN,YAAY,CAAEoN,MAAO9M,CAAU,CAAA,GACpD2M,EAAG9E,IAAG,GAAI,KAAKmG,IAAG,CAAA,EAClBrB,EAAG9Q,OAASA,EACZ8Q,EAAGtM,SAAWA,EACdsM,EAAGvM,UAAYA,EACfuM,EAAG3M,UAAYA,EACf2M,EAAG1P,OAAO4K,IAAI5K,CAAAA,EACd0P,EAAGf,IAAMA,EACFe,CACX,CACJ,EAnGA,SAoGAlR,EAAQuR,MAAQA,KC1HhB,IAAAoB,GAAA5S,EAAAC,IAAA,cACAkD,OAAOC,eAAenD,GAAS,aAAc,CAAEoD,MAAO,EAAK,CAAA,EAC3DpD,GAAQ4S,QAAU,OAClB,IAAMC,GAAclJ,KACdsE,EAAYtE,KACZuE,EAAavE,KAGbmJ,EAAyB,IAAI/L,YAAY,CAC3C,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WACvF,EAEKgM,EAAuB,IAAIhM,YAAY,EAAA,EAE7C,SAASiM,EAAIhP,EAAGD,EAAGkP,EAAGC,EAAGpG,EAAKpM,EAAC,CAE3B,IAAMyS,EAAKrG,EAAIpM,CAAAA,EAAI0S,EAAKtG,EAAIpM,EAAI,CAAA,EAC5BsG,EAAK+L,EAAK,EAAI/O,CAAAA,EAAI8C,EAAKiM,EAAK,EAAI/O,EAAI,CAAA,EACpCsD,EAAKyL,EAAK,EAAIhP,CAAAA,EAAIsD,EAAK0L,EAAK,EAAIhP,EAAI,CAAA,EACpCwD,EAAKwL,EAAK,EAAIE,CAAAA,EAAIxL,EAAKsL,EAAK,EAAIE,EAAI,CAAA,EACpCvL,EAAKqL,EAAK,EAAIG,CAAAA,EAAIvL,EAAKoL,EAAK,EAAIG,EAAI,CAAA,EAEpCG,EAAKpF,EAAUjJ,QAAQO,MAAMyB,EAAIM,EAAI6L,CAAAA,EACzCrM,EAAKmH,EAAUjJ,QAAQM,MAAM+N,EAAIvM,EAAIO,EAAI+L,CAAAA,EACzCpM,EAAKqM,EAAK,EAET,CAAE1L,GAAAA,EAAID,GAAAA,CAAE,EAAK,CAAEC,GAAIA,EAAKb,EAAIY,GAAIA,EAAKV,CAAG,EACxC,CAAEW,GAAAA,EAAID,GAAAA,CAAE,EAAK,CAAEC,GAAIsG,EAAUjJ,QAAQc,QAAQ6B,EAAID,CAAAA,EAAKA,GAAIuG,EAAUjJ,QAAQa,QAAQ8B,EAAID,CAAAA,CAAI,EAE5F,CAAErD,EAAGoD,EAAIb,EAAGW,CAAE,EAAK0G,EAAUjJ,QAAQQ,IAAIiC,EAAIF,EAAII,EAAID,CAAAA,EAErD,CAAEL,GAAAA,EAAIC,GAAAA,CAAE,EAAK,CAAED,GAAIA,EAAKI,EAAIH,GAAIA,EAAKC,CAAG,EACxC,CAAEF,GAAAA,EAAIC,GAAAA,CAAE,EAAK,CAAED,GAAI4G,EAAUjJ,QAAQkB,OAAOmB,EAAIC,EAAI,EAAA,EAAKA,GAAI2G,EAAUjJ,QAAQiB,OAAOoB,EAAIC,EAAI,EAAA,CAAI,EAClGyL,EAAK,EAAI/O,CAAAA,EAAKgD,EAAM+L,EAAK,EAAI/O,EAAI,CAAA,EAAK8C,EACtCiM,EAAK,EAAIhP,CAAAA,EAAKuD,EAAMyL,EAAK,EAAIhP,EAAI,CAAA,EAAKsD,EACtC0L,EAAK,EAAIE,CAAAA,EAAK1L,EAAMwL,EAAK,EAAIE,EAAI,CAAA,EAAKxL,EACtCsL,EAAK,EAAIG,CAAAA,EAAKxL,EAAMqL,EAAK,EAAIG,EAAI,CAAA,EAAKvL,CAC3C,CAvBSqL,EAAAA,EAAAA,OAwBT,SAASM,EAAItP,EAAGD,EAAGkP,EAAGC,EAAGpG,EAAKpM,EAAC,CAE3B,IAAMyS,EAAKrG,EAAIpM,CAAAA,EAAI0S,EAAKtG,EAAIpM,EAAI,CAAA,EAC5BsG,EAAK+L,EAAK,EAAI/O,CAAAA,EAAI8C,EAAKiM,EAAK,EAAI/O,EAAI,CAAA,EACpCsD,EAAKyL,EAAK,EAAIhP,CAAAA,EAAIsD,EAAK0L,EAAK,EAAIhP,EAAI,CAAA,EACpCwD,EAAKwL,EAAK,EAAIE,CAAAA,EAAIxL,EAAKsL,EAAK,EAAIE,EAAI,CAAA,EACpCvL,EAAKqL,EAAK,EAAIG,CAAAA,EAAIvL,EAAKoL,EAAK,EAAIG,EAAI,CAAA,EAEpCG,EAAKpF,EAAUjJ,QAAQO,MAAMyB,EAAIM,EAAI6L,CAAAA,EACzCrM,EAAKmH,EAAUjJ,QAAQM,MAAM+N,EAAIvM,EAAIO,EAAI+L,CAAAA,EACzCpM,EAAKqM,EAAK,EAET,CAAE1L,GAAAA,EAAID,GAAAA,CAAE,EAAK,CAAEC,GAAIA,EAAKb,EAAIY,GAAIA,EAAKV,CAAG,EACxC,CAAEW,GAAAA,EAAID,GAAAA,CAAE,EAAK,CAAEC,GAAIsG,EAAUjJ,QAAQkB,OAAOyB,EAAID,EAAI,EAAA,EAAKA,GAAIuG,EAAUjJ,QAAQiB,OAAO0B,EAAID,EAAI,EAAA,CAAI,EAElG,CAAErD,EAAGoD,EAAIb,EAAGW,CAAE,EAAK0G,EAAUjJ,QAAQQ,IAAIiC,EAAIF,EAAII,EAAID,CAAAA,EAErD,CAAEL,GAAAA,EAAIC,GAAAA,CAAE,EAAK,CAAED,GAAIA,EAAKI,EAAIH,GAAIA,EAAKC,CAAG,EACxC,CAAEF,GAAAA,EAAIC,GAAAA,CAAE,EAAK,CAAED,GAAI4G,EAAUjJ,QAAQgB,OAAOqB,EAAIC,EAAI,EAAA,EAAKA,GAAI2G,EAAUjJ,QAAQe,OAAOsB,EAAIC,EAAI,EAAA,CAAI,EAClGyL,EAAK,EAAI/O,CAAAA,EAAKgD,EAAM+L,EAAK,EAAI/O,EAAI,CAAA,EAAK8C,EACtCiM,EAAK,EAAIhP,CAAAA,EAAKuD,EAAMyL,EAAK,EAAIhP,EAAI,CAAA,EAAKsD,EACtC0L,EAAK,EAAIE,CAAAA,EAAK1L,EAAMwL,EAAK,EAAIE,EAAI,CAAA,EAAKxL,EACtCsL,EAAK,EAAIG,CAAAA,EAAKxL,EAAMqL,EAAK,EAAIG,EAAI,CAAA,EAAKvL,CAC3C,CAvBS2L,EAAAA,EAAAA,OAwBT,IAAMC,GAANtM,EAAA,cAAsB4L,GAAYtB,KAAK,CACnCtN,YAAYwI,EAAO,CAAC,EAAG,CACnB,MAAM,IAAKA,EAAK4E,QAAUnJ,OAAY,GAAKuE,EAAK4E,MAAO5E,EAAM,GAAI,GAAI,EAAA,EAErE,KAAK+G,IAAMV,EAAO,CAAA,EAAK,EACvB,KAAKW,IAAMX,EAAO,CAAA,EAAK,EACvB,KAAKY,IAAMZ,EAAO,CAAA,EAAK,EACvB,KAAKa,IAAMb,EAAO,CAAA,EAAK,EACvB,KAAKc,IAAMd,EAAO,CAAA,EAAK,EACvB,KAAKe,IAAMf,EAAO,CAAA,EAAK,EACvB,KAAKgB,IAAMhB,EAAO,CAAA,EAAK,EACvB,KAAKiB,IAAMjB,EAAO,CAAA,EAAK,EACvB,KAAKkB,IAAMlB,EAAO,CAAA,EAAK,EACvB,KAAKmB,IAAMnB,EAAO,CAAA,EAAK,EACvB,KAAKoB,IAAMpB,EAAO,EAAA,EAAM,EACxB,KAAKqB,IAAMrB,EAAO,EAAA,EAAM,EACxB,KAAKsB,IAAMtB,EAAO,EAAA,EAAM,EACxB,KAAKuB,IAAMvB,EAAO,EAAA,EAAM,EACxB,KAAKwB,IAAMxB,EAAO,EAAA,EAAM,EACxB,KAAKyB,IAAMzB,EAAO,EAAA,EAAM,EACxB,IAAM0B,EAAY/H,EAAKmF,IAAMnF,EAAKmF,IAAIxR,OAAS,EAE/C,GADA,KAAKoT,KAAO,KAAKjP,UAAaiQ,GAAa,EAAM,MAAe,GAAQ,GACpE/H,EAAKoF,KAAM,CACX,IAAMA,KAAW3D,EAAW1E,QAAS0E,EAAWvF,SAAS8D,EAAKoF,IAAI,CAAA,EAClE,KAAKmC,QAAW9F,EAAWhF,cAAc2I,EAAK,CAAA,CAAE,EAChD,KAAKoC,QAAW/F,EAAWhF,cAAc2I,EAAK,CAAA,CAAE,EAChD,KAAKqC,QAAWhG,EAAWhF,cAAc2I,EAAK,CAAA,CAAE,EAChD,KAAKsC,QAAWjG,EAAWhF,cAAc2I,EAAK,CAAA,CAAE,EAEpD,GAAIpF,EAAKqF,gBAAiB,CACtB,IAAM2C,KAAWvG,EAAW1E,QAAS0E,EAAWvF,SAAS8D,EAAKqF,eAAe,CAAA,EAC7E,KAAKsC,QAAWlG,EAAWhF,cAAcuL,EAAK,CAAA,CAAE,EAChD,KAAKJ,QAAWnG,EAAWhF,cAAcuL,EAAK,CAAA,CAAE,EAChD,KAAKH,QAAWpG,EAAWhF,cAAcuL,EAAK,CAAA,CAAE,EAChD,KAAKF,QAAWrG,EAAWhF,cAAcuL,EAAK,CAAA,CAAE,EAEpD,GAAIhI,EAAKmF,IAAK,CAEV,IAAM3E,EAAM,IAAI1M,WAAW,KAAKiE,QAAQ,EACxCyI,EAAIb,OAAQ8B,EAAWvF,SAAS8D,EAAKmF,GAAG,CAAA,EACxC,KAAK7E,OAAOE,CAAAA,EAEpB,CAEAsF,KAAM,CACF,GAAI,CAAEiB,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,EAAKC,IAAAA,CAAG,EAAK,KACzF,MAAO,CAACf,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACvF,CAEAnI,IAAIoH,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAK,CAChF,KAAKf,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,EACjB,KAAKC,IAAMA,EAAM,CACrB,CACArC,SAASpF,EAAKkF,EAAQ0C,EAAQ,CAC1B,KAAKnC,IAAG,EAAGC,QAAQ,CAACC,EAAGhS,IAAOsS,EAAKtS,CAAAA,EAAKgS,CAAAA,EACxCM,EAAK3G,IAAI0G,EAAQ,EAAA,EACjB,GAAI,CAAEzO,EAAAA,EAAGuC,EAAAA,CAAC,EAAKqH,EAAUjJ,QAAQuB,QAAQE,OAAO,KAAKrG,MAAM,CAAA,EAC3D2S,EAAK,EAAA,EAAMD,EAAO,CAAA,EAAKlM,EACvBmM,EAAK,EAAA,EAAMD,EAAO,CAAA,EAAKzO,EAEnBqQ,IACA3B,EAAK,EAAA,EAAM,CAACA,EAAK,EAAA,EACjBA,EAAK,EAAA,EAAM,CAACA,EAAK,EAAA,GAErB,IAAIvS,EAAI,EACF2G,EAAI0L,GAAYrB,MACtB,QAAS/Q,EAAI,EAAGA,EAAI,GAAIA,IACpBuS,EAAI,EAAG,EAAG,EAAG,GAAIlG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EACzC8S,EAAI,EAAG,EAAG,EAAG,GAAIxG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EACzCwS,EAAI,EAAG,EAAG,EAAG,GAAIlG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EACzC8S,EAAI,EAAG,EAAG,EAAG,GAAIxG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EACzCwS,EAAI,EAAG,EAAG,GAAI,GAAIlG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EAC1C8S,EAAI,EAAG,EAAG,GAAI,GAAIxG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EAC1CwS,EAAI,EAAG,EAAG,GAAI,GAAIlG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EAC1C8S,EAAI,EAAG,EAAG,GAAI,GAAIxG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EAC1CwS,EAAI,EAAG,EAAG,GAAI,GAAIlG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EAC1C8S,EAAI,EAAG,EAAG,GAAI,GAAIxG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EAC1CwS,EAAI,EAAG,EAAG,GAAI,GAAIlG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EAC1C8S,EAAI,EAAG,EAAG,GAAI,GAAIxG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EAC1CwS,EAAI,EAAG,EAAG,EAAG,GAAIlG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EACzC8S,EAAI,EAAG,EAAG,EAAG,GAAIxG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EACzCwS,EAAI,EAAG,EAAG,EAAG,GAAIlG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EACzC8S,EAAI,EAAG,EAAG,EAAG,GAAIxG,EAAKkF,EAAS,EAAI7K,EAAE3G,GAAAA,CAAI,EAE7C,KAAKgT,KAAOT,EAAK,CAAA,EAAKA,EAAK,EAAA,EAC3B,KAAKU,KAAOV,EAAK,CAAA,EAAKA,EAAK,EAAA,EAC3B,KAAKW,KAAOX,EAAK,CAAA,EAAKA,EAAK,EAAA,EAC3B,KAAKY,KAAOZ,EAAK,CAAA,EAAKA,EAAK,EAAA,EAC3B,KAAKa,KAAOb,EAAK,CAAA,EAAKA,EAAK,EAAA,EAC3B,KAAKc,KAAOd,EAAK,CAAA,EAAKA,EAAK,EAAA,EAC3B,KAAKe,KAAOf,EAAK,CAAA,EAAKA,EAAK,EAAA,EAC3B,KAAKgB,KAAOhB,EAAK,CAAA,EAAKA,EAAK,EAAA,EAC3B,KAAKiB,KAAOjB,EAAK,CAAA,EAAKA,EAAK,EAAA,EAC3B,KAAKkB,KAAOlB,EAAK,CAAA,EAAKA,EAAK,EAAA,EAC3B,KAAKmB,KAAOnB,EAAK,EAAA,EAAMA,EAAK,EAAA,EAC5B,KAAKoB,KAAOpB,EAAK,EAAA,EAAMA,EAAK,EAAA,EAC5B,KAAKqB,KAAOrB,EAAK,EAAA,EAAMA,EAAK,EAAA,EAC5B,KAAKsB,KAAOtB,EAAK,EAAA,EAAMA,EAAK,EAAA,EAC5B,KAAKuB,KAAOvB,EAAK,EAAA,EAAMA,EAAK,EAAA,EAC5B,KAAKwB,KAAOxB,EAAK,EAAA,EAAMA,EAAK,EAAA,EAC5BA,EAAK/C,KAAK,CAAA,CACd,CACAiB,SAAU,CACN,KAAKtM,UAAY,GACjB,KAAKoN,SAAS/B,KAAK,CAAA,EACnB,KAAK5D,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAA,CAC1D,CACJ,EAzHA,WA+HApM,GAAQ4S,WAAc1E,EAAW5F,yBAA0BmE,GAAS,IAAI8G,GAAQ9G,CAAAA,CAAAA,IC9LhF,IAAAkI,GAAA5U,EAAA,CAAAC,GAAAC,KAAA,cACA,IAAI2U,GAAY1R,OAAOC,eACnB0R,GAAmB3R,OAAO4R,yBAC1BC,GAAoB7R,OAAO8R,oBAC3BC,GAAe/R,OAAOgS,UAAUC,eAChCC,GAAWnO,EAAA,CAACoO,EAAQC,IAAAA,CACtB,QAASpR,KAAQoR,EACfV,GAAUS,EAAQnR,EAAM,CAAEqO,IAAK+C,EAAIpR,CAAAA,EAAOqR,WAAY,EAAK,CAAA,CAC/D,EAHe,YAIXC,GAAcvO,EAAA,CAACiK,EAAIrP,EAAM4T,EAAQC,IAAAA,CACnC,GAAI7T,GAAQ,OAAOA,GAAS,UAAY,OAAOA,GAAS,WACtD,QAAS+P,KAAOmD,GAAkBlT,CAAAA,EAC5B,CAACoT,GAAavI,KAAKwE,EAAIU,CAAAA,GAAQA,IAAQ6D,GACzCb,GAAU1D,EAAIU,EAAK,CAAEW,IAAK,IAAM1Q,EAAK+P,CAAAA,EAAM2D,WAAY,EAAEG,EAAOb,GAAiBhT,EAAM+P,CAAAA,IAAS8D,EAAKH,UAAW,CAAA,EAEtH,OAAOrE,CACT,EAPkB,eAQdyE,GAAe1O,EAAC2O,GAAQJ,GAAYZ,GAAU,CAAC,EAAG,aAAc,CAAExR,MAAO,EAAK,CAAA,EAAIwS,CAAAA,EAAnE,gBAGfC,GAAsB,CAAC,EAC3BT,GAASS,GAAqB,CAC5BC,UAAW,IAAMA,EACjBC,MAAO,IAAMA,GACbC,KAAM,IAAMA,EACZC,WAAY,IAAMA,EACpB,CAAA,EACAhW,GAAOD,QAAU2V,GAAaE,EAAAA,EAC9B,IAAIC,EAAY,CACdI,UAAY1S,GAAAA,CACV,GAAI,EAAEA,aAAiBjD,aAAe,CAACoB,MAAMC,QAAQ4B,CAAAA,EACnD,MAAM,IAAInB,MAAM,wEAAwE,OAAOmB,MAAUA,GAAO,EAGlH,MAAO,MADKA,aAAiBjD,WAAaoB,MAAME,KAAK2B,CAAAA,EAASA,GAC5C2S,OAAO,CAAC5T,EAAK6T,IAAS7T,EAAM6T,EAAKhM,SAAS,EAAA,EAAIC,SAAS,EAAG,GAAA,EAAM,EAAA,CACpF,EACAgM,QAAU7S,GAAUsS,EAAUI,UAAU1S,CAAAA,EACxC8S,QAAQC,EAAS,CACf,GAAI,OAAOA,GAAc,SACvB,MAAM,IAAIlU,MAAM,qDAAqD,OAAOkU,GAAW,EAIzF,QAFYA,EAAUC,WAAW,IAAA,EAAQD,EAAU7D,MAAM,CAAA,EAAK6D,GAC5CE,MAAM,SAAA,GAAc,CAAA,GACzBC,IAAKN,GAASO,SAASP,EAAM,EAAA,CAAA,CAC5C,EACAQ,MAAQL,GAAchW,WAAWsB,KAAKiU,EAAUQ,QAAQC,CAAAA,CAAAA,CAC1D,EACIP,EAAO,CACTa,YAAYtU,EAAG,CACb,IAAMuU,EAAM,IAAIvW,WAAWyV,EAAKe,cAAcxU,CAAAA,CAAAA,EAC1CyP,EAAS,EACPgF,EAAQhF,EACViF,EAAK,EACLC,EAAK,EACLzW,EAAI,EACR,KAAOA,EAAI8B,EAAInC,QACb6W,EAAK1U,EAAI1B,WAAWJ,CAAAA,EAChBwW,EAAK,IACPH,EAAI9E,GAAAA,EAAYiF,EACPA,EAAK,MACdH,EAAI9E,GAAAA,EAAYiF,GAAM,EAAI,IAC1BH,EAAI9E,GAAAA,EAAYiF,EAAK,GAAK,MAChBA,EAAK,SAAW,SAAWC,EAAK3U,EAAI1B,WAAWJ,EAAI,CAAA,GAAM,SAAW,OAC9EwW,EAAK,QAAUA,EAAK,OAAS,KAAOC,EAAK,MACzC,EAAEzW,EACFqW,EAAI9E,GAAAA,EAAYiF,GAAM,GAAK,IAC3BH,EAAI9E,GAAAA,EAAYiF,GAAM,GAAK,GAAK,IAChCH,EAAI9E,GAAAA,EAAYiF,GAAM,EAAI,GAAK,IAC/BH,EAAI9E,GAAAA,EAAYiF,EAAK,GAAK,MAE1BH,EAAI9E,GAAAA,EAAYiF,GAAM,GAAK,IAC3BH,EAAI9E,GAAAA,EAAYiF,GAAM,EAAI,GAAK,IAC/BH,EAAI9E,GAAAA,EAAYiF,EAAK,GAAK,KAE5BxW,GAAK,EAEP,IAAMoL,EAAOmG,EAASgF,EACtB,OAAOF,CACT,EACAK,oBAAoB5U,EAAG,CACrB,OAAOZ,MAAME,KAAKmU,EAAKa,YAAYtU,CAAAA,CAAAA,CACrC,EACA6U,YAAYN,EAAG,CACb,IAAIE,EAAQ,EACRK,EAAMP,EAAI1W,OACd,GAAIiX,EAAML,EAAQ,EAChB,MAAO,GAET,IAAIzU,EAAM,GACN9B,EAAIuW,EACR,KAAOvW,EAAI4W,GAAK,CACd,IAAMrI,EAAI8H,EAAIrW,GAAAA,EACd,GAAIuO,GAAK,IACPzM,GAAO+U,OAAOC,aAAavI,CAAAA,UAClBA,GAAK,KAAOA,EAAI,IACzBzM,GAAO+U,OAAOC,cAAcvI,EAAI,KAAO,EAAI8H,EAAIrW,GAAAA,EAAO,EAAA,UAC7CuO,GAAK,KAAOA,EAAI,IACzBzM,GAAO+U,OAAOC,cAAcvI,EAAI,KAAO,IAAM8H,EAAIrW,GAAAA,EAAO,KAAO,EAAIqW,EAAIrW,GAAAA,EAAO,EAAA,UACrEuO,GAAK,IAAK,CACnB,IAAMwI,IAAOxI,EAAI,IAAM,IAAM8H,EAAIrW,GAAAA,EAAO,KAAO,IAAMqW,EAAIrW,GAAAA,EAAO,KAAO,EAAIqW,EAAIrW,GAAAA,EAAO,IAAM,MAC5F8B,GAAO+U,OAAOC,aAAa,OAASC,GAAM,GAAC,EAC3CjV,GAAO+U,OAAOC,aAAa,OAASC,EAAK,KAAG,GAGhD,OAAOjV,CACT,EACAkV,oBAAoB5N,EAAG,CACrB,OAAOmM,EAAKoB,YAAY7W,WAAWsB,KAAKgI,CAAAA,CAAAA,CAC1C,EACA6N,kBAAkBnV,EAAG,CACnB,OAAOuT,EAAUO,QAAQL,EAAKa,YAAYtU,CAAAA,CAAAA,CAC5C,EACAoV,kBAAkBpB,EAAS,CACzB,OAAOP,EAAKoB,YAAYtB,EAAUc,MAAML,CAAAA,CAAAA,CAC1C,EACAQ,cAAcxU,EAAG,CACf,IAAIiO,EAAM,EACNyC,EAAI,EACJxS,EAAI,EACR,KAAOA,EAAI8B,EAAInC,QACb6S,EAAI1Q,EAAI1B,WAAWJ,CAAAA,EACfwS,EAAI,IACNzC,GAAO,EACEyC,EAAI,KACbzC,GAAO,GACGyC,EAAI,SAAW,QAAU1Q,EAAI1B,WAAWJ,EAAI,CAAA,EAAK,SAAW,OACtE,EAAEA,EACF+P,GAAO,GAEPA,GAAO,EAET/P,GAAK,EAEP,OAAO+P,CACT,CACF,EACIuF,GAAQ,CACV6B,aAAarV,EAAG,CACd,IAAMsV,EAAS,IAAIC,YAAY/B,GAAMgB,cAAcxU,CAAAA,CAAAA,EAC/C9B,EAAI,EACR,KAAOA,EAAI8B,EAAInC,QAAQ,CACrB,IAAI2X,EAAKxV,EAAIyV,YAAYvX,CAAAA,EACrBsX,GAAM,MACRF,EAAOpX,GAAAA,EAAOsX,GAEdA,GAAM,MACNF,EAAOpX,GAAAA,GAAQsX,GAAM,IAAM,MAC3BF,EAAOpX,GAAAA,EAAOsX,EAAK,KAAO,OAG9B,OAAOF,CACT,EACAV,oBAAoB5U,EAAG,CACrB,OAAOZ,MAAME,KAAKkU,GAAM6B,aAAarV,CAAAA,CAAAA,CACvC,EACAkV,oBAAoB5N,EAAG,CACrB,IAAIpJ,EAAI,EACF+P,EAAM3G,EAAIzJ,OACZ+G,EAAI,GACR,KAAO1G,EAAI+P,EAAM,GAAG,CAClB,IAAMyG,EAAKpN,EAAIpJ,CAAAA,EACTyW,EAAKrN,EAAIpJ,EAAI,CAAA,EACnB,GAAIwW,GAAM,OAASA,GAAM,MACvB,GAAIC,GAAM,OAASA,GAAM,MACvB/P,GAAKmQ,OAAOW,eAAehB,EAAK,OAAS,KAAOC,EAAK,MAAQ,KAAA,EAC7DzW,GAAK,MAEL,OAAM,IAAI4B,MAAM,wCAAwC4U,oBAAqBC,GAAI,OAGnF/P,GAAKmQ,OAAOW,cAAchB,CAAAA,EAC1BxW,GAAK,EAGT,OAAIA,EAAI+P,IACNrJ,GAAKmQ,OAAOW,cAAcpO,EAAI2G,EAAM,CAAA,CAAE,GAEjCrJ,CACT,EACA+Q,aAAarO,EAAG,CACd,OAAOkM,GAAM0B,oBAAoB5N,CAAAA,CACnC,EACAkN,cAAcxU,EAAG,CACf,IAAI9B,EAAI,EACR,KAAOA,EAAI8B,EAAInC,QACbK,GAAK8B,EAAIyV,YAAYvX,CAAAA,GAAM,MAAQ,EAAI,EAEzC,OAAOA,CACT,CACF,EACIwV,GAAa,CACfH,UAAAA,EACAE,KAAAA,EACAD,MAAAA,EACF,0UClMaoC,EAEPC,GAMOC,GAwBAC,GAIAC,EAkCAC,GAGAC,GA+CAC,GAUAC,GAIAC,GAIAC,GAYAC,GAcAC,GAIAC,GAIAC,GAIAC,cAhLAf,EAAmB,GAE1BC,GAAmBnR,EAACkS,GAAsC,CAC9D,GAAI,OAAOA,GAAa,SAAU,MAAM,IAAI,MAAM,oCAAoC,EACtF,GAAIA,EAAW,GAAKA,EAAW,GAAI,MAAM,IAAI,MAAM,4CAA4C,EAC/F,MAAO,EACT,EAJyB,oBAMZd,GAAoBpR,EAAA,CAAC7D,EAAwB+V,EAAmBhB,IAA6B,CAIxG,GAHA/U,EAAQA,EAAM,SAAS,EAGnB,CAAC,gBAAgB,KAAKA,CAAK,EAC7B,MAAM,IAAI,MAAM,eAAe,EAEjCgV,GAAiBe,CAAQ,EAGzB,IAAMC,EAAa,KAAO,OAAOD,CAAQ,EAGrC,CAACE,EAAaC,EAAiB,EAAE,EAAIlW,EAAM,MAAM,GAAG,EAGxD,OAAAkW,EAAiBA,EAAe,OAAOH,EAAU,GAAG,EAAE,MAAM,EAAGA,CAAQ,EAGtD,OAAOE,CAAW,EAAID,EAAa,OAAOE,CAAc,CAG3E,EAtBiC,qBAwBpBhB,GAAYrR,EAAA,CAAC7D,EAAwB+V,EAAmBhB,IAC5DE,GAAkBjV,EAAO+V,CAAQ,EAAE,SAAS,EAD5B,aAIZZ,EAAYtR,EAAA,CAACsS,EAA2BJ,EAAmBhB,IAA6B,CACnGC,GAAiBe,CAAQ,EAEzB,IAAMK,EAAY,OAAOD,CAAQ,EAC3BE,EAAU,KAAO,OAAON,CAAQ,EAGhCO,EAAkBF,EAAYC,EAmB9BE,GAlBYH,EAAYC,GAaC,SAAS,EACrC,SAASN,EAAU,GAAG,EAIe,QAAQ,MAAO,EAAE,EAKzD,MAF2B,GAAGO,IAAkBC,EAAmB,OAAS,EAAI,IAAMA,EAAqB,IAG7G,EAhCyB,aAkCZnB,GAA8BvR,EAAA,CAACsS,EAA2BJ,EAAmBhB,IACxF,WAAWI,EAAUgB,EAAUJ,CAAQ,CAAC,EADC,+BAG9BV,GAAaxR,EAAA,CAAC7D,EAAwBwW,EAA8B,MAAoB,CACnG,IAAMC,EAAS,OAAOzW,GAAU,SAAWA,EAAQA,EAAM,SAAS,EAC5D0W,EAAW,WAAWD,CAAM,EAClC,GAAI,MAAMC,CAAQ,EAAG,MAAM,IAAI,MAAM,gCAAgCD,GAAQ,EAE7E,GAAID,IAAwB,GAC1B,OAAOC,EAGT,GAAM,CAACR,EAAaC,EAAiB,EAAE,EAAIO,EAAO,MAAM,GAAG,EACrDE,EAAa,SAASV,CAAW,EAEvC,GAAIU,EAAaH,EAAqB,CACpC,GAAI,CAACN,EAAgB,OAAOO,EAE5B,IAAMG,EAAiB,WAAW,KAAKV,GAAgB,EACnDW,EAAS,EACTD,EAAiB,GAAKC,EAAS,EAC1BF,EAAa,EAAGE,EAAS,EACzBF,EAAa,GAAIE,EAAS,EAC1BF,EAAa,IAAOE,EAAS,EAC7BF,EAAa,MAAQE,EAAS,GAGvC,IAAIC,EAAmBZ,EACpB,UAAU,EAAGW,CAAM,EAKtB,OAJIC,EAAiB,OAAS,GAAKD,GAAU,IAAGC,EAAmBA,EAAiB,OAAO,EAAG,GAAG,GAG7FA,EAAiB,QAAQ,KAAM,EAAE,IAAM,IACvC,CAACA,EAAyBb,EACvB,GAAGA,KAAea,IAG3B,IAAMC,EAAW,CAAC,GAAI,IAAK,IAAK,IAAK,GAAG,EAClC1Z,EAAIsZ,IAAe,EACrB,EAEA,KAAK,IAAI,KAAK,MAAM,KAAK,IAAIA,CAAU,EAAI,iBAAiB,EAAG,CAAC,EAE9D,CAACK,EAAmBC,EAAuB,EAAE,GAAKN,EAAa,KAAK,IAAI,IAAMtZ,CAAC,GAAG,SAAS,EAAE,MAAM,GAAG,EAI5G,MAAO,GAHW2Z,GACfC,EAAqB,OAAS,EAAI,IAAMA,EAAqB,MAAM,EAAG,CAAC,EAAI,MAExDF,EAAS1Z,CAAC,GAClC,EA7C0B,cA+CbiY,GAAczR,EAAA,CAAC7D,EAAwBkX,EAAoB,IAAc,CACpF,IAAMT,EAASzW,EAAM,SAAS,EAC9B,GAAIkX,IAAc,GAAI,OAAOT,EAE7B,GAAM,CAACR,EAAaC,EAAiB,EAAE,EAAIO,EAAO,MAAM,GAAG,EAC3D,OAAKP,EAEE,GAAGD,KAAeC,EAAe,UAAU,EAAGgB,CAAS,EAAE,OAAOA,EAAW,GAAG,IAFzDT,CAG9B,EAR2B,eAUdlB,GAAgB1R,EAAA,CAACsS,EAA2BJ,EAAmBhB,EAAkByB,EAAsB,MAC3GnB,GAAWF,EAAUgB,EAAUJ,CAAQ,EAAGS,CAAmB,EADzC,iBAIhBhB,GAAiB3R,EAAA,CAACsS,EAA2BJ,EAAmBhB,EAAkBmC,EAAoB,IAC1G5B,GAAYH,EAAUgB,EAAUJ,CAAQ,EAAGmB,CAAS,EAD/B,kBAIjBzB,GAAY5R,EAAA,CAACsT,EAAuBpB,EAAmBhB,IAA6B,CAC/F,IAAMqB,EAAY,OAAOe,CAAI,EAC7B,GAAIf,EAAY,GAAI,MAAM,IAAI,MAAM,oBAAoB,EACxD,IAAMC,EAAU,MAAQ,OAAON,CAAQ,EAAI,IACrC,CAACE,EAAaC,EAAiB,EAAE,EAAI,EACxCE,EAAYC,GAAS,SAAS,GAC9BD,EAAYC,GAAS,SAAS,EAAE,SAASN,EAAW,EAAG,GAAG,EAAE,QAAQ,MAAO,EAAE,CAChF,EACA,OAAKG,EACE,GAAGD,KAAeC,IADGD,CAE9B,EAVyB,aAYZP,GAAY7R,EAAA,CAACsT,EAAgCpB,EAAmBhB,IAA6B,CACxG,IAAMiB,EAAa,MAAQ,OAAOD,CAAQ,EAAI,IAExC,CAACE,EAAaC,EAAiB,EAAE,EAAIiB,EAAK,SAAS,EAAE,MAAM,GAAG,EACpE,GAAI,OAAOlB,CAAW,EAAI,GAAI,MAAM,IAAI,MAAM,uCAAuC,EACrF,IAAMmB,EAAuB,OAAOnB,CAAW,EAAID,EACnD,GAAI,CAACE,EAAgB,OAAOkB,EAAqB,SAAS,EAE1D,IAAMC,EAAoBnB,EAAe,OAAOH,EAAW,EAAG,GAAG,EAAE,MAAM,EAAGA,EAAW,CAAC,EAGxF,OADiBqB,EAAuB,OAAOC,CAAiB,GAChD,SAAS,CAC3B,EAZyB,aAcZ1B,GAAa9R,EAAA,CAAC7D,EAAwB+V,EAAmBhB,IAC7DU,GAAUP,GAAUlV,EAAO+V,CAAQ,EAAGA,CAAQ,EAD7B,cAIbH,GAAa/R,EAAA,CAAC7D,EAAwB+V,EAAmBhB,IAC7DI,EAAUO,GAAU1V,EAAO+V,CAAQ,EAAGA,CAAQ,EAD7B,cAIbF,GAAoBhS,EAAC7D,GACzBA,EAAM,SAAS,EAAE,KAAK,EAAE,QAAQ,SAAU,EAAE,EADpB,qBAIpB8V,GAAOjS,EAAA,CAClByT,EACAvB,EAAmBhB,EACnBmC,EAAoB,EACpBV,EAA8B,MAC3B,CACH,GAAI,OAAOc,GAAoB,SAAU,MAAM,IAAI,MAAM,oCAAoC,EAC7FtC,GAAiBe,CAAQ,EACzB,IAAMwB,EAAiBD,EAAS,KAAK,IAAM,GAAK,GAAK,IAAIA,EAAS,KAAK,IAEvE,MAAO,CACL,kBAAoBtX,GAA0BiV,GAAkBjV,EAAO+V,CAAQ,EAC/E,UAAY/V,GAA0BkV,GAAUlV,EAAO+V,CAAQ,EAC/D,UAAY/V,GAAmCmV,EAAUnV,EAAO+V,CAAQ,EAExE,4BAA8B/V,GAAmCoV,GAA4BpV,EAAO+V,CAAQ,EAE5G,WAAa/V,GAA0BqV,GAAWrV,EAAOwW,CAAmB,EAAIe,EAChF,aAAevX,GAA0BqV,GAAWrV,EAAOwW,CAAmB,EAC9E,YAAa,CAACxW,EAAwBwX,EAAaN,IAAsB5B,GAAYtV,EAAOwX,CAAU,EAAID,EAC1G,iBAAkB,CAACvX,EAAwBwX,EAAaN,IAAsB5B,GAAYtV,EAAOwX,CAAU,EAC3G,cAAgBxX,GAAmCuV,GAAcvV,EAAO+V,EAAUS,CAAmB,EAAIe,EACzG,gBAAkBvX,GAAmCuV,GAAcvV,EAAO+V,EAAUS,CAAmB,EACvG,eAAgB,CAACxW,EAAwBwX,EAAaN,IAAsB1B,GAAexV,EAAO+V,EAAUyB,CAAU,EAAID,EAC1H,oBAAqB,CAACvX,EAAwBwX,EAAaN,IAAsB1B,GAAexV,EAAO+V,EAAUyB,CAAU,EAE3H,KAAM,CACJ,UAAYxX,GAA4C0V,GAAU1V,EAAO+V,CAAQ,EACjF,UAAY/V,GAAmCyV,GAAUzV,EAAO+V,CAAQ,EACxE,WAAa/V,GAAmC4V,GAAW5V,EAAO+V,CAAQ,EAC1E,WAAa/V,GAAmC2V,GAAW3V,EAAO+V,CAAQ,CAC5E,EAEA,aAAc,CAAC/V,EAAwBwX,EAAaN,IAA4B,CAC9E,IAAMO,EAAMvC,GAAUlV,EAAO+V,CAAQ,EAC/B2B,EAAQ7B,GAAkB7V,CAAK,EAC/B2X,EAAStC,GAAWrV,EAAOwW,CAAmB,EACpD,MAAO,CACL,MAAOkB,EACP,OAAAC,EACA,KAAMA,EAASJ,EACf,MAAOjC,GAAYtV,EAAOwX,CAAU,EAAID,EACxC,MAAOG,EAAQH,EACf,SAAAD,EACA,IAAAG,CACF,CACF,EAEA,gBAAiB,CAACA,EAAsBD,EAAaN,IAA4B,CAC/E,IAAMQ,EAAQvC,EAAUsC,EAAK1B,CAAQ,EAC/B4B,EAASpC,GAAckC,EAAK1B,EAAUS,CAAmB,EAC/D,MAAO,CACL,MAAOkB,EACP,OAAAC,EACA,KAAMA,EAASJ,EACf,MAAO/B,GAAeiC,EAAK1B,EAAUyB,CAAU,EAAID,EACnD,MAAOG,EAAQH,EACf,SAAAD,EACA,IAAKG,EAAI,SAAS,CACpB,CACF,CACF,CACF,EA9DoB,UChLpB,IAAA1S,GAAApI,EAAA,CAAAC,GAAAC,KAAA,cACA,IAAI+a,GAAW9X,OAAOoB,OAClBsQ,GAAY1R,OAAOC,eACnB0R,GAAmB3R,OAAO4R,yBAC1BC,GAAoB7R,OAAO8R,oBAC3BiG,GAAe/X,OAAOgY,eACtBjG,GAAe/R,OAAOgS,UAAUC,eAChCC,GAAWnO,EAAA,CAACoO,EAAQC,IAAAA,CACtB,QAASpR,KAAQoR,EACfV,GAAUS,EAAQnR,EAAM,CAAEqO,IAAK+C,EAAIpR,CAAAA,EAAOqR,WAAY,EAAK,CAAA,CAC/D,EAHe,YAIXC,GAAcvO,EAAA,CAACiK,EAAIrP,EAAM4T,EAAQC,IAAAA,CACnC,GAAI7T,GAAQ,OAAOA,GAAS,UAAY,OAAOA,GAAS,WACtD,QAAS+P,KAAOmD,GAAkBlT,CAAAA,EAC5B,CAACoT,GAAavI,KAAKwE,EAAIU,CAAAA,GAAQA,IAAQ6D,GACzCb,GAAU1D,EAAIU,EAAK,CAAEW,IAAK,IAAM1Q,EAAK+P,CAAAA,EAAM2D,WAAY,EAAEG,EAAOb,GAAiBhT,EAAM+P,CAAAA,IAAS8D,EAAKH,UAAW,CAAA,EAEtH,OAAOrE,CACT,EAPkB,eAQdiK,GAAalU,EAAA,CAACoO,EAAQO,EAAKwF,KAAkB5F,GAAYH,EAAQO,EAAK,SAAA,EAAYwF,GAAgB5F,GAAY4F,EAAcxF,EAAK,SAAA,GAApH,cACbyF,GAAUpU,EAAA,CAAC2O,EAAK0F,EAAYjG,KAAYA,EAASO,GAAO,KAAOoF,GAASC,GAAarF,CAAAA,CAAAA,EAAQ,CAAC,EAAGJ,GAKnG8F,GAAc,CAAC1F,GAAO,CAACA,EAAI2F,WAAa3G,GAAUS,EAAQ,UAAW,CAAEjS,MAAOwS,EAAKL,WAAY,EAAK,CAAA,EAAKF,EACzGO,CAAAA,GANY,WAQVD,GAAe1O,EAAC2O,GAAQJ,GAAYZ,GAAU,CAAC,EAAG,aAAc,CAAExR,MAAO,EAAK,CAAA,EAAIwS,CAAAA,EAAnE,gBAGf4F,GAAc,CAAC,EACnBpG,GAASoG,GAAa,CACpBC,QAAS,IAAMC,GACfxC,KAAM,IAAMyC,GAAazC,KACzB0C,UAAW,IAAMD,GACjB7F,UAAW,IAAM+F,GACjBC,SAAU,IAAMA,GAChBC,YAAa,IAAMA,GACnBhG,MAAO,IAAMA,GACbC,KAAM,IAAMA,GACZgG,UAAW,IAAMC,EACnB,CAAA,EACAhc,GAAOD,QAAU2V,GAAa6F,EAAAA,EAG9B,IAAIE,GAAkB,CAAC,EACvBtG,GAASsG,GAAiB,CACxBD,QAAS,IAAMA,GACfS,WAAY,IAAMC,GAClBC,WAAY,IAAMA,GAClBC,QAAS,IAAMA,GACfL,UAAW,IAAMC,GACjBK,QAAS,IAAMA,EACfC,GAAI,IAAMA,EACVC,OAAQ,IAAMA,GACdC,QAAS,IAAMA,GACfC,UAAW,IAAMA,GACjBC,UAAW,IAAMA,GACjBC,SAAU,IAAMA,CAClB,CAAA,EAGA,IAAIX,GAAoB,CAAC,EACzB7G,GAAS6G,GAAmB,CAC1BY,0BAA2B,IAAMA,GACjCC,eAAgB,IAAMA,GACtBC,iBAAkB,IAAMA,EAC1B,CAAA,EACA,IAAIA,GAAmB,CACrBC,gBAAiB,6CACjBC,kBAAmB,4CACrB,EACIH,GAAiB,6BACjBD,GAA4B,qCAG5BV,GAAkB,CAAC,EACvB/G,GAAS+G,GAAiB,CACxBe,OAAQ,IAAMA,GACdC,OAAQ,IAAMA,GACdC,MAAO,IAAMC,GAAcrY,QAC3B4N,QAAS,IAAM0K,GAAe1K,QAC9BnF,WAAY,IAAM8P,GAAY9P,UAChC,CAAA,EACA,IAAI4P,GAAgBhC,GAAQ1R,IAAQ,EAChC4T,GAAc5T,KACd2T,GAAiB3T,KACjB6T,GAAkB,6DAClBC,GAAkB,mEAClBP,MAAaG,GAAcrY,SAASwY,EAAAA,EACpCL,MAAaE,GAAcrY,SAASyY,EAAAA,EAGpCC,GAAqB/T,KACrBgU,EAAiB,CACnBC,UAAYC,GAAAA,CACV,GAAI,OAAOA,GAAQ,SACjB,MAAM,IAAIxb,MAAM,kCAAkC,OAAOwb,MAAQA,GAAK,EACxE,GAAIC,MAAMD,CAAAA,EACR,MAAM,IAAIxb,MAAM,yBAAyBwb,GAAK,EAChD,GAAIA,EAAM,EACR,MAAM,IAAIxb,MAAM,iCAAiCwb,GAAK,EACxD,GAAIA,EAAM,WACR,MAAM,IAAIxb,MAAM,qCAAqCwb,GAAK,EAC5D,GAAIA,IAAQ5c,KAAK6I,MAAM+T,CAAAA,EACrB,MAAM,IAAIxb,MAAM,2CAA2Cwb,GAAK,EAClE,OAAOA,CACT,EACAE,WAAana,GACJ+Z,EAAeC,UAAUha,CAAAA,EAAGwG,SAAS,EAAA,EAAIC,SAAS,EAAG,GAAA,EAE9D2T,SAAW7W,GAAAA,CACT,IAAM0W,EAAMlH,SAASxP,EAAG,EAAA,EACxB,GAAI2W,MAAMD,CAAAA,EACR,MAAM,IAAIxb,MAAM,qCAAqC8E,GAAG,EAC1D,OAAOwW,EAAeC,UAAUC,CAAAA,CAClC,CACF,EACII,GAAiChX,EAACiX,GAAAA,CACpC,IAAMC,EAAOD,EAAQE,YAAW,EAAGC,QAAQ,OAAQ,EAAA,EAC7CC,EAAcZ,GAAmB5H,UAAUO,WAAYkH,GAAY9P,YAAY0Q,CAAAA,CAAAA,EAAOE,QAAQ,OAAQ,EAAA,EACxGE,EAAkB,KACtB,QAAS9d,EAAI,EAAGA,EAAI0d,EAAK/d,OAAQK,IAC/B8d,GAAmB5H,SAAS2H,EAAY7d,CAAAA,EAAI,EAAA,EAAM,EAAI0d,EAAK1d,CAAAA,EAAG+d,YAAW,EAAKL,EAAK1d,CAAAA,EAErF,OAAO8d,CACT,EARqC,kCASjCE,GAA2BxX,EAACiX,IAC9BtB,EAAS8B,gBAAgBR,CAAAA,EAClBD,GAA+BC,CAAAA,GAFT,4BAI3BS,GAA2B1X,EAAA,CAAC2X,EAAUC,IAAAA,CACxC,IAAMC,EAAQ,OAAOF,GAAa,SAAWA,EAAWA,EAASG,UAAYH,EAASI,SAChFC,EAAQ,OAAOJ,GAAa,SAAWA,EAAWA,EAASE,UAAYF,EAASG,SACtF,MAAI,CAACF,GAAS,CAACG,GAAS,CAAC1C,EAAGmC,gBAAgBI,CAAAA,GAAU,CAACvC,EAAGmC,gBAAgBO,CAAAA,EACjE,GAEFH,EAAMV,YAAW,IAAOa,EAAMb,YAAW,CAClD,EAP+B,4BAQ3Bc,GAA2BjY,EAACkY,IAC9BvC,EAASuC,aAAaA,CAAAA,EACflB,GACLpB,GAA4Bc,EAAeI,WAAWoB,CAAAA,CAAAA,GAH3B,4BAM3BC,GAA2BnY,EAACiX,IAC9BtB,EAASyC,kBAAkBnB,CAAAA,EACpBP,EAAeK,SAASE,EAAQxL,MAAM,EAAC,CAAA,GAFjB,4BAI3B4M,GAAyCrY,EAAA,CAACkY,EAAcI,KAC1D3C,EAASuC,aAAaA,CAAAA,EACtBvC,EAAS2C,QAAQA,CAAAA,EACVtB,GACLnB,GAAiBa,EAAeI,WAAWoB,CAAAA,EAAgBxB,EAAeI,WAAWwB,CAAAA,CAAAA,GAJ5C,0CAOzCC,GAAyCvY,EAACiX,IAC5CtB,EAAS6C,eAAevB,CAAAA,EACjB,CACLiB,aAAcxB,EAAeK,SAASE,EAAQxL,MAAM,IAAK,EAAC,CAAA,EAC1D6M,QAAS5B,EAAeK,SAASE,EAAQxL,MAAM,EAAC,CAAA,CAClD,GAL2C,0CASzCgN,GAAsB/V,KACtBgW,GAAc1Y,EAAA,CAAC6P,EAAKzF,EAAQ,QACnBiM,GAAe1K,SAASkE,EAAK,CAAEzF,MAAAA,CAAM,CAAA,EADhC,eAGduO,GAAY3Y,EAAC4Y,GAAAA,CACf,IAAI7N,EAAS,EACT5R,EAAS,EACb,QAASK,EAAI,EAAGA,EAAIof,EAAKzf,OAAQK,IAC/BL,GAAUyf,EAAKpf,CAAAA,EAAGL,OAEpB,IAAM0f,EAAS,IAAIvf,WAAWH,CAAAA,EAC9B,QAASK,EAAI,EAAGA,EAAIof,EAAKzf,OAAQK,IAC/Bqf,EAAO1T,IAAIyT,EAAKpf,CAAAA,EAAIuR,CAAAA,EACpBA,GAAU6N,EAAKpf,CAAAA,EAAGL,OAEpB,OAAO0f,CACT,EAZgB,aAaZC,GAAc,IAAIxf,WAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAG,EACzDyf,GAAS/Y,EAAC8E,GACL4T,GAAYC,GAAU,CAACG,GAAahU,EAAK,EAAG,EAAA,EADxC,UAGTkU,GAAuBhZ,EAAA,CAACiZ,EAASC,EAAiB,KAAK,CACzD,IAAMC,EAAaF,EAAQ,CAAA,EAAK,GAAK,EAAI,EACnCG,EAAcD,IAAe,EAAIF,EAAQ,CAAA,GAAMA,EAAQ,CAAA,EAAK,KAAO,EAAIA,EAAQ,CAAA,GAAM,GAAKA,EAAQ,CAAA,EAAK,KAAO,EAC9GI,EAAc,CAAC,GAAKF,EAAY,GAAKA,GAAYhc,SAAS8b,EAAQ9f,MAAM,EACxEA,EAAS8f,EAAQ9f,QAAUkgB,EAAc,EAAI,GAC/CC,EAAU,GACd,GAAI,CAACJ,EAAgB,CACnB,IAAM5c,EAAOyc,GAAOE,EAAQrP,SAAS,EAAGzQ,CAAAA,CAAAA,EACxCmgB,GAAWL,EAAQ,CAAA,EAAK,OAAS,GAAK,CAAC,CAAC,GAAI,IAAI9b,SAAS8b,EAAQ,CAAA,CAAE,IAAMI,EAAcJ,EAAQA,EAAQ9f,OAAS,CAAA,IAAOmD,EAAK,CAAA,GAAM2c,EAAQA,EAAQ9f,OAAS,CAAA,IAAOmD,EAAK,CAAA,EAAK2c,EAAQA,EAAQ9f,OAAS,CAAA,IAAOmD,EAAK,CAAA,GAEnN,MAAO,CAACgd,EAASngB,EAAQggB,EAAYC,EACvC,EAX2B,wBAYvBG,EAA4BvZ,EAAA,CAACiX,EAASuC,EAAS,KAC1CC,GAAuBC,EAAuBzC,CAAAA,EAASpH,IAAK2J,CAAAA,EADrC,6BAGhC,SAASC,GAAuB9O,EAAKgP,EAAa,GAAE,CAClD,IAAM9J,EAAM,OAAOlF,GAAQ,SAAW8N,GAAoB5J,UAAUc,MAAMhF,CAAAA,EAAO,OAAOA,GAAQ,SAAW8N,GAAoB5J,UAAUc,MAAMhF,EAAIxH,SAAS,EAAA,CAAA,EAAOwH,EACnK,GAAIgP,EAAa,GAAKA,EAAa,OAAS,CAAC,GAAI,IAAIxc,SAASwc,CAAAA,EAC5D,MAAM,IAAIve,MAAM,qCAAqC,OAAOue,MAAeA,IAAa,EAE1F,IAAMC,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAC/C,GAAI,CAACA,EAAsBzc,SAAS0S,EAAI1W,MAAM,EAC5C,MAAM,IAAIiC,MAAM,qCAAqCyU,EAAI1W,4BAA4BygB,EAAsBC,KAAK,IAAA,GAAO,EAEzH,IAAMC,EAAYH,EAAa,GAAK,IAAIrgB,WAAW,CAACqgB,EAAW,EAAI,IAAIrgB,WAAW,EAC/EqgB,EAAa,MAAQ,EAAI,GAC1BA,GAAc,GAAKA,EAAa,IAAM,EACvC,EACKI,EAAQpB,GAAU,CAACmB,EAAWjK,EAAI,EACxC,OAAOoG,GAAO9b,OACZwe,GAAU,CACRoB,EACAhB,GAAOgB,CAAAA,EAAOnQ,SAAS,EAAG,CAAC,GAAI,IAAIzM,SAAS0S,EAAI1W,MAAM,EAAI,EAAI,CAAA,EAC/D,CAAA,CAEL,CApBSsgB,EAAAA,GAAAA,0BAqBT,SAASC,EAAuBzC,EAASiC,EAAgBS,EAAa,GAAE,CACtE,IAAIK,EAAY,KAChB,GAAI,CACF,GAAI1E,EAAG2E,mBAAmBhD,CAAAA,EACxB,MAAO,CACLpH,IAAK4I,GAAoB5J,UAAUc,MAAMsH,CAAAA,EACzCiD,OAAQ1a,OAAOyX,CAAAA,EACf5T,IAAK4T,EACLkD,WAAY,EACd,EACK,GAAIlD,EAAQ1H,WAAW,IAAA,EAC5B,MAAM,IAAInU,MAAM,uCAAuC6b,iCAAuC,EAEhG,IAAMgC,EAAUhD,GAAOna,OAAOmb,CAAAA,EACxBmD,EAAwB,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IACxD,GAAI,CAACA,EAAsBjd,SAAS8b,EAAQ9f,MAAM,EAChD6gB,MAAAA,EAAY,IAAI5e,MAAM,kDAAkD6d,EAAQ9f,4BAA4BihB,EAAsBP,KAAK,IAAA,GAAO,EACxIG,EAER,GAAM,CAACV,EAASe,EAAQlB,EAAYC,CAAAA,EAAeJ,GAAqBC,EAASC,CAAAA,EACjF,GAAI,CAACA,GAAkB,CAACI,EACtBU,MAAAA,EAAY,IAAI5e,MAAM,kCAAkC,EAClD4e,EAER,GAAI,CAAC,CAAC,GAAIZ,GAAajc,SAASwc,CAAAA,EAC9BK,MAAAA,EAAY,IAAI5e,MAAM,uBAAuBue,eAAwBP,GAAa,EAC5EY,EAER,IAAMM,EAAYrB,EAAQxN,MAAM0N,EAAYkB,CAAAA,EACtChX,EAAMoV,GAAoB5J,UAAUO,QAAQkL,CAAAA,EAClD,MAAO,CACLzK,IAAKyK,EACLjX,IAAAA,EACA6W,OAAQ1a,OAAO6D,CAAAA,EACf8W,WAAYf,CACd,CACF,OAASmB,EAAP,CACA,MAAMP,GAAwB,IAAI5e,MAAM,YAAY6b,MAAYsD,EAAMC,SAAS,CACjF,CACF,CAvCSd,EAAAA,EAAAA,0BAwCT,IAAIe,GAA4Bza,EAAA,CAAC2X,EAAUC,IAAAA,CACzC,IAAMC,EAAQ,OAAOF,GAAa,SAAWA,EAAWA,EAAS+C,WAAa/C,EAASjC,UACjFsC,EAAQ,OAAOJ,GAAa,SAAWA,EAAWA,EAAS8C,WAAa9C,EAASlC,UACvF,GAAI,CAACmC,GAAS,CAACG,EACb,MAAO,GAET,GAAI,CACF,IAAM2C,EAAWjB,EAAuB7B,CAAAA,EAClC+C,EAAWlB,EAAuB1B,CAAAA,EACxC,OAAO2C,EAAST,SAAWU,EAASV,MACtC,MAAE,CACA,MAAO,EACT,CACF,EAbgC,6BAc5BW,GAAe7a,EAAA,CAACiX,EAASiC,IAAAA,CAC3B,IAAM4B,EAAYpB,EAAuBzC,EAASiC,CAAAA,EAAgBrJ,IAAIjG,SAAS,EAAG,EAAA,EAClF,OAAO4N,GAAyBiB,GAAoB5J,UAAUO,QAAQ0L,CAAAA,CAAAA,CACxE,EAHmB,gBAIfC,GAAiB,IAAIzhB,WAAW,CAAC,IAAK,IAAK,IAAK,GAAG,EACnD0hB,GAAehb,EAAA,CAACib,EAAYtB,EAAa,KAAE,CAC7ChE,EAAS8B,gBAAgBwD,CAAAA,EACzB,IAAMT,EAAU7B,GAAU,CAACoC,GAAgBtC,GAAoB5J,UAAUc,MAAMsL,CAAAA,EAAY,EAC3F,OAAOxB,GAAuBf,GAAY8B,CAAAA,EAAUb,CAAAA,CACtD,EAJmB,gBAOfuB,EAA6Clb,EAAA,CAACmb,EAAYC,EAAa,KAAK,CAC9E,IAAMnE,EAAUkE,EAChB,GAAI,OAAOlE,GAAY,SACrB,GAAIA,EAAQ/I,eAAe,KAAA,GAAU+I,EAAQ/I,eAAe,KAAA,EAAQ,CAClE,IAAMmN,EAAepE,EAAQqE,IAAIpN,eAAe,MAAA,GAAW,OAAO+I,EAAQqE,IAAIC,MAAS,SAAWtE,EAAQqE,IAAIC,KAAOtE,EAAQqE,IAC7H,GAAI,OAAOD,GAAiB,UAAY,CAACA,EAAa9L,WAAW,IAAA,EAC/D,MAAM,IAAInU,MAAM,kDAAkDigB,GAAc,EAElF,IAAMG,EAAYhc,OAAO6b,CAAAA,EACnBI,EAAYjc,OAAOyX,EAAQyE,GAAG,EACpC,GAAI,EAAE9e,EAAO4e,IAAc,IAAM5e,EAAO6e,IAAc,KACpD,MAAM,IAAIrgB,MAAM,2CAA2C6b,EAAQyE,gCAAgCzE,EAAQqE,MAAM,EAEnH,OAAIE,IAAc,GACT,CAAE1D,SAAUN,GAAyBP,EAAQyE,GAAG,CAAE,EAElD,CAAEhB,UAAWnB,EAA0B8B,CAAAA,CAAc,UAErDpE,EAAQ/I,eAAe,WAAA,GAAgB+I,EAAQ/I,eAAe,WAAA,EAAc,CACrF,IAAMyN,EAAmB1E,EAAQ/I,eAAe,WAAA,EAAe+I,EAAQyD,UAAYzD,EAAQvB,UAC3F,GAAIJ,EAAG2E,mBAAmB0B,CAAAA,EACxB,MAAO,CAAEjB,UAAWnB,EAA0BoC,CAAAA,CAAkB,EAC3D,GAAIrG,EAAGqG,iBAAiBA,CAAAA,EAC7B,MAAO,CAAEjB,UAAWU,EAAa7B,EAA0BoC,CAAAA,EAAoBA,CAAiB,EAEhG,MAAM,IAAIvgB,MAAM,WAAWugB,oCAAmD,UAEvE1E,EAAQ/I,eAAe,UAAA,GAAe+I,EAAQ/I,eAAe,UAAA,EAAa,CACnF,IAAMuJ,EAAkBR,EAAQ/I,eAAe,UAAA,EAAc+I,EAAQa,SAAWb,EAAQc,SACxFpC,OAAAA,EAAS8B,gBAAgBA,CAAAA,EAClB,CAAEK,SAAUsD,EAAa5D,GAAyBC,CAAAA,EAAmBA,CAAgB,MAE5F,OAAM,IAAIrc,MAAM,WAAW6b,6KAAmL,EAGlN,GAAI,OAAOA,GAAY,SAAU,CAC/B,GAAI3B,EAAGqG,iBAAiB1E,CAAAA,EACtB,MAAO,CAAEyD,UAAWU,EAAa7B,EAA0BtC,CAAAA,EAAWA,CAAQ,EAC3E,GAAI3B,EAAGmC,gBAAgBR,CAAAA,EAC1B,MAAO,CAAEa,SAAUsD,EAAa5D,GAAyBP,CAAAA,EAAWA,CAAQ,EACzE,GAAI3B,EAAG2E,mBAAmBhD,CAAAA,EAC7B,MAAO,CAAEyD,UAAWnB,EAA0BtC,CAAAA,CAAS,EAEvD,MAAM,IAAI7b,MAAM,WAAW6b,gDAAsD,EAGrF,MAAM,IAAI7b,MAAM,WAAW6b,gCAAsC,OAAOA,GAAS,CACnF,EA/CiD,8CAgD7C2E,GAA2C5b,EAAA,CAACiX,EAASmE,EAAa,KAAK,CACzE,GAAI,CACF,OAAOF,EAA2CjE,EAASmE,CAAAA,CAC7D,MAAE,CACA,OAAO,IACT,CACF,EAN+C,4CAO3CS,GAA8B7b,EAAA,CAACiX,EAASmE,EAAa,KAAK,CAC5D,IAAMU,EAAgBZ,EAA2CjE,EAASmE,CAAAA,EAC1E,OAAOU,EAAcpB,UAAYoB,EAAcpB,UAAYnF,GAAOwG,oBAAoBD,EAAchE,QAAQ,CAC9G,EAHkC,+BAI9BkE,GAA2Chc,EAAA,CAACiX,EAASkD,EAAa,KAAE,CACtE,IAAM8B,EAAiBf,EAA2CjE,CAAAA,EAClE,GAAIgF,EAAenE,SAAU,CAC3B,IAAMoE,EAAa1E,GAAyByE,EAAenE,QAAQ,EACnE,MAAO,CACL,GAAGmE,EACHhF,QAASiF,EACTC,YAAaD,EACbjC,mBAAoBiC,EACpBE,WAAY,GACZC,YAAa,GACbC,KAAM,UACR,MAEA,OAAO,CACL,GAAGL,EACHhF,QAASsC,EAA0B0C,EAAevB,SAAS,EAC3DyB,YAAa5C,EAA0B0C,EAAevB,UAAWP,CAAAA,EACjEF,mBAAoBP,EAAuBuC,EAAevB,SAAS,EAAErX,IACrE+Y,WAAY,GACZC,YAAa,GACbC,KAAM,WACR,CAEJ,EAxB+C,4CA2B3CC,GAAoB,sBACpBC,GAAuB,sBACvB7G,EAAW,CACbgG,iBAAmB1E,IACjByC,EAAuBzC,CAAAA,EAChB,IAETQ,gBAAkBR,GAAAA,CAChB,GAAI,CAAC3B,EAAGmC,gBAAgBR,CAAAA,EACtB,MAAM,IAAI7b,MAAM,YAAY6b,kCAAwC,EAEtE,MAAO,EACT,EACAgD,mBAAqBhD,GAAAA,CACnB,GAAI,CAAC3B,EAAG2E,mBAAmBhD,CAAAA,EACzB,MAAM,IAAI7b,MAAM,YAAY6b,sCAA4C,EAE1E,MAAO,EACT,EACAmB,kBAAoBnB,GAAAA,CAClB,GAAI,CAAC3B,EAAG8C,kBAAkBnB,CAAAA,EACxB,MAAM,IAAI7b,MAAM,WAAW6b,+BAAqC,EAElE,MAAO,EACT,EACAuB,eAAiBvB,GAAAA,CACf,GAAI,CAAC3B,EAAGkD,eAAevB,CAAAA,EACrB,MAAM,IAAI7b,MAAM,WAAW6b,4BAAkC,EAE/D,MAAO,EACT,EACAiB,aAAeA,GAAAA,CACb,GAAI,CAAC5C,EAAG4C,aAAaA,CAAAA,EACnB,MAAM,IAAI9c,MAAM,0DAA0D,EAE5E,MAAO,EACT,EACAkd,QAAUA,GAAAA,CACR,GAAI,CAAChD,EAAGgD,QAAQA,CAAAA,EACd,MAAM,IAAIld,MAAM,0DAA0D,EAE5E,MAAO,EACT,CACF,EACIka,EAAK,CACPqG,iBAAmB1E,GAAAA,CACjB,GAAI,CACFyC,OAAAA,EAAuBzC,CAAAA,EAChB,CAAC3B,EAAG2E,mBAAmBhD,CAAAA,CAChC,MAAE,CACA,MAAO,EACT,CACF,EACAQ,gBAAkBR,GACT,OAAOA,GAAY,UAAYA,EAAQ9d,SAAW,IAAM,CAAC,CAAC8d,EAAQzH,MAAM+M,EAAAA,EAEjFtC,mBAAqBhD,GACZ,OAAOA,GAAY,UAAYA,EAAQ9d,SAAW,IAAM,CAAC,CAAC8d,EAAQzH,MAAMgN,EAAAA,EAEjFpE,kBAAoBnB,GACX3B,EAAGmC,gBAAgBR,CAAAA,GAAYA,EAAQE,YAAW,EAAG5H,WAAWqG,EAAAA,EAEzE4C,eAAiBvB,GACR3B,EAAGmC,gBAAgBR,CAAAA,GAAYA,EAAQE,YAAW,EAAG5H,WAAWsG,EAAAA,EAEzEqC,aAAeA,GACN,EAAE,OAAOA,GAAiB,UAAYrB,MAAMqB,CAAAA,GAAiBA,EAAe,GAAKA,EAAe,YAEzGI,QAAUA,GACD,EAAE,OAAOA,GAAY,UAAYzB,MAAMyB,CAAAA,GAAYA,EAAU,GAAKA,EAAU,YAErF2D,eAAeQ,EAAG,CAChB,OAAOnH,EAAGoH,uBAAuBD,CAAAA,GAAQnH,EAAGqH,sBAAsBF,CAAAA,CACpE,EACAG,4BAA4BH,EAAG,CAC7B,OAAOnH,EAAGuH,oCAAoCJ,CAAAA,GAAQnH,EAAGwH,mCAAmCL,CAAAA,CAC9F,EACAC,uBAAuBD,EAAG,CACxB,OAAO,OAAOA,GAAQ,UAAY,OAAOA,GAAK/B,WAAc,UAAYpF,EAAGqG,iBAAiBc,EAAI/B,SAAS,CAC3G,EACAiC,sBAAsBF,EAAG,CACvB,OAAO,OAAOA,GAAQ,UAAY,OAAOA,GAAK3E,UAAa,UAAYxC,EAAGmC,gBAAgBgF,EAAI3E,QAAQ,CACxG,EACA+E,oCAAoCJ,EAAG,CACrC,OAAO,OAAOA,GAAQ,UAAY,OAAOA,GAAK/G,WAAc,UAAYJ,EAAGqG,iBAAiBc,EAAI/G,SAAS,CAC3G,EACAoH,mCAAmCL,EAAG,CACpC,OAAO,OAAOA,GAAQ,UAAY,OAAOA,GAAK1E,UAAa,UAAYzC,EAAGmC,gBAAgBgF,EAAI1E,QAAQ,CACxG,EACAgF,0BAA0B9F,EAAO,CAC/B,OAAO,OAAOA,GAAY,SAAW3B,EAAGqG,iBAAiB1E,CAAAA,EAAW,OAAOA,GAAY,UAAY,CAAC,CAACA,IAAY3B,EAAGoH,uBAAuBzF,CAAAA,GAAY3B,EAAGuH,oCAAoC5F,CAAAA,EAChM,EACA+F,yBAAyB/F,EAAO,CAC9B,OAAO,OAAOA,GAAY,SAAW3B,EAAGmC,gBAAgBR,CAAAA,EAAW,OAAOA,GAAY,UAAY,CAAC,CAACA,IAAY3B,EAAGqH,sBAAsB1F,CAAAA,GAAY3B,EAAGwH,mCAAmC7F,CAAAA,EAC7L,EACAgG,sBAAsBhG,EAAO,CAC3B,OAAO3B,EAAG0H,yBAAyB/F,CAAAA,GAAY3B,EAAGyH,0BAA0B9F,CAAAA,CAC9E,CACF,EACI9B,GAAa,CACf+H,YAAajF,GACbkF,YAAahF,EACf,EACI3C,GAAU,CACZ4H,aAAc/E,GACdgF,aAAc9E,EAChB,EACIlD,EAAU,CACZ4B,QAAUqG,GAAAA,CACR,IAAMrB,EAAiBf,EAA2CoC,CAAAA,EAClE,OAAOrB,EAAevB,WAAauB,EAAenE,QACpD,EACAyF,YAAcD,GAAAA,CACZ,IAAMrB,EAAiBL,GAAyC0B,CAAAA,EAChE,OAAOrB,EAAiBA,EAAevB,WAAauB,EAAenE,SAAW,IAChF,EACA0F,kBAAoBF,GAAAA,CAClB,IAAMrB,EAAiBf,EAA2CoC,EAAyB,EAAA,EAC3F,OAAOrB,EAAevB,WAAauB,EAAenE,QACpD,EACA2F,sBAAwBH,GAAAA,CACtB,IAAMrB,EAAiBL,GAAyC0B,EAAyB,EAAA,EACzF,OAAOrB,EAAiBA,EAAevB,WAAauB,EAAenE,SAAW,IAChF,EACA4F,yBAA2BJ,GAAAA,CACzB,IAAMrB,EAAiBf,EAA2CoC,EAAyB,EAAA,EAC3F,OAAOrB,EAAevB,WAAauB,EAAenE,SAASX,YAAW,CACxE,EACAwG,6BAA+BL,GAAAA,CAC7B,IAAMrB,EAAiBL,GAAyC0B,EAAyB,EAAA,EACzF,OAAOrB,EAAiBA,EAAevB,WAAauB,EAAenE,SAASX,YAAW,EAAK,IAC9F,EACA8E,eAAiBqB,GACRpC,EAA2CoC,CAAAA,EAEpDM,mBAAqBN,GACZ1B,GAAyC0B,CAAAA,EAElDO,yBAA2BP,GAClBpC,EAA2CoC,EAAyB,EAAA,EAE7EQ,6BAA+BR,GACtB1B,GAAyC0B,EAAyB,EAAA,EAE3EV,4BAA8BU,GAAAA,CAC5B,IAAMrB,EAAiBf,EAA2CoC,CAAAA,EAClE,OAAOrB,EAAevB,UAAY,CAAEhF,UAAWuG,EAAevB,SAAU,EAAI,CAAE3C,SAAUkE,EAAenE,QAAS,CAClH,EACAiG,gCAAkCT,GAAAA,CAChC,GAAI,CACF,OAAOjI,EAAQuH,4BAA4BU,CAAAA,CAC7C,MAAE,CACA,OAAO,IACT,CACF,EACAU,sCAAwCV,GAAAA,CACtC,IAAMrB,EAAiBf,EAA2CoC,EAAyB,EAAA,EAC3F,OAAOrB,EAAevB,UAAY,CAAEhF,UAAWuG,EAAevB,SAAU,EAAI,CAAE3C,SAAUkE,EAAenE,QAAS,CAClH,EACAmG,0CAA4CX,GAAAA,CAC1C,GAAI,CACF,OAAOjI,EAAQ2I,sCAAsCV,CAAAA,CACvD,MAAE,CACA,OAAO,IACT,CACF,EACAzB,4BAA8ByB,GACrBzB,GAA4ByB,CAAAA,EAErCY,gCAAkCZ,GAAAA,CAChC,GAAI,CACF,OAAOzB,GAA4ByB,CAAAA,CACrC,MAAE,CACA,OAAO,IACT,CACF,EACAa,sCAAwCb,GAC/BzB,GAA4ByB,EAAyB,EAAA,EAE9Dc,0CAA4Cd,GAAAA,CAC1C,GAAI,CACF,OAAOzB,GAA4ByB,EAAyB,EAAA,CAC9D,MAAE,CACA,OAAO,IACT,CACF,EACArD,mBAAqBqD,GAAAA,CACnB,IAAMrB,EAAiBf,EAA2CoC,CAAAA,EAClE,GAAI,CAACrB,EAAevB,UAClB,MAAM,IAAItf,MAAM,oCAAA,EAElB,OAAOsa,GAAU5Z,OAAOmgB,EAAevB,SAAS,EAAErX,GACpD,EACAgb,uBAAyBf,GAAAA,CACvB,GAAI,CACF,OAAOjI,EAAQ4E,mBAAmBqD,CAAAA,CACpC,MAAE,CACA,OAAO,IACT,CACF,EACAgB,uBAAwB,CAACC,EAAkBpE,EAAa,KAC/C6B,GAAyCuC,EAAkBpE,CAAAA,EAEpEqE,2BAA4B,CAACD,EAAkBpE,EAAa,KAAE,CAC5D,GAAI,CACF,OAAO6B,GAAyCuC,EAAkBpE,CAAAA,CACpE,MAAE,CACA,OAAO,IACT,CACF,EACAsE,kBAAoBF,GAAAA,CAClB,IAAMG,EAAkB1C,GAAyCuC,CAAAA,EACjE,OAAIG,EAAgBhE,UACX,CACLgB,IAAK,6CACLJ,IAAKoD,EAAgBzE,kBACvB,EAEO,CACLyB,IAAKgD,EAAgBzH,QACrBqE,IAAK,MACP,CAEJ,EACAqD,sBAAwBJ,GAAAA,CACtB,GAAI,CACF,OAAOlJ,EAAQoJ,kBAAkBF,CAAAA,CACnC,MAAE,CACA,OAAO,IACT,CACF,CACF,EACIhJ,GAAS,CACXqJ,oBAAqB/D,GACrBkB,oBAAqBf,EACvB,EACIvF,GAAY,CACdkG,iBAAkBpC,EAClB9B,gBAAiBD,EACnB,EACIpC,GAAU,CACZyJ,mBAAoBpE,GACpBqE,kBAAmBpH,EACrB,EACIhC,GAAY,CACdvb,OAAQsf,GACR3d,OAAQ4d,EACRtE,QAASqF,EACX,EACIjG,GAAU,CACZO,UAAWC,GACXC,WAAYC,GACZI,GAAAA,EACAK,SAAAA,EACAR,WAAAA,GACAK,QAAAA,GACAH,QAAAA,EACAE,OAAAA,GACAE,UAAAA,GACAL,QAAAA,GACAM,UAAAA,GACAqJ,MAAO,CACLrI,eAAAA,CACF,CACF,EAGI5B,GAAcV,GAAQ1R,IAAQ,EAG9BgS,GAAe,CAAC,EACpBR,GAAWQ,GAAchS,aAAQ,EAGjC,GAAI,CACFmM,UAAW+F,GACX7F,KAAAA,GACAD,MAAAA,EAAK,EACHgG,GACAD,GAAWC,GAAYjG,YC9oB3B,IAAAmQ,GAAA,GAAA9K,GAAA8K,GAAc","sourcesContent":["'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = exports.isBytes = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\nexports.bool = bool;\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexports.isBytes = isBytes;\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = { number, bool, bytes, hash, exists, output };\nexports.default = assert;\n//# sourceMappingURL=_assert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.byteSwap32 = exports.byteSwapIfBE = exports.byteSwap = exports.isLE = exports.rotl = exports.rotr = exports.createView = exports.u32 = exports.u8 = exports.isBytes = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\nconst _assert_js_1 = require(\"./_assert.js\");\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexports.isBytes = isBytes;\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexports.rotl = rotl;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nconst byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\nexports.byteSwap = byteSwap;\n// Conditionally byte swap if on a big-endian platform\nexports.byteSwapIfBE = exports.isLE ? (n) => n : (n) => (0, exports.byteSwap)(n);\n// In place byte swap for Uint32Array\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = (0, exports.byteSwap)(arr[i]);\n    }\n}\nexports.byteSwap32 = byteSwap32;\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0, _assert_js_1.bytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0, _assert_js_1.bytes)(data);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0, _assert_js_1.bytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = exports.keccakP = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0, _u64_js_1.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexports.keccakP = keccakP;\nclass Keccak extends utils_js_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0, _assert_js_1.number)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_js_1.u32)(this.state);\n    }\n    keccak() {\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { blockLen, state } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0, _assert_js_1.exists)(this, false);\n        (0, _assert_js_1.bytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, _assert_js_1.number)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0, _assert_js_1.output)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BLAKE = exports.SIGMA = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Blake is based on ChaCha permutation.\n// For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n// prettier-ignore\nexports.SIGMA = new Uint8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n]);\nclass BLAKE extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.length = 0;\n        this.pos = 0;\n        this.finished = false;\n        this.destroyed = false;\n        (0, _assert_js_1.number)(blockLen);\n        (0, _assert_js_1.number)(outputLen);\n        (0, _assert_js_1.number)(keyLen);\n        if (outputLen < 0 || outputLen > keyLen)\n            throw new Error('outputLen bigger than keyLen');\n        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))\n            throw new Error(`key must be up 1..${keyLen} byte long or undefined`);\n        if (opts.salt !== undefined && opts.salt.length !== saltLen)\n            throw new Error(`salt must be ${saltLen} byte long or undefined`);\n        if (opts.personalization !== undefined && opts.personalization.length !== persLen)\n            throw new Error(`personalization must be ${persLen} byte long or undefined`);\n        this.buffer32 = (0, utils_js_1.u32)((this.buffer = new Uint8Array(blockLen)));\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { blockLen, buffer, buffer32 } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        const offset = data.byteOffset;\n        const buf = data.buffer;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                if (!utils_js_1.isLE)\n                    (0, utils_js_1.byteSwap32)(buffer32);\n                this.compress(buffer32, 0, false);\n                if (!utils_js_1.isLE)\n                    (0, utils_js_1.byteSwap32)(buffer32);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = offset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(buf, dataOffset, Math.floor((len - pos) / 4));\n                if (!utils_js_1.isLE)\n                    (0, utils_js_1.byteSwap32)(data32);\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                if (!utils_js_1.isLE)\n                    (0, utils_js_1.byteSwap32)(data32);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        const { pos, buffer32 } = this;\n        this.finished = true;\n        // Padding\n        this.buffer.subarray(pos).fill(0);\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(buffer32);\n        this.compress(buffer32, 0, true);\n        if (!utils_js_1.isLE)\n            (0, utils_js_1.byteSwap32)(buffer32);\n        const out32 = (0, utils_js_1.u32)(out);\n        this.get().forEach((v, i) => (out32[i] = (0, utils_js_1.byteSwapIfBE)(v)));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.length = length;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.outputLen = outputLen;\n        to.buffer.set(buffer);\n        to.pos = pos;\n        return to;\n    }\n}\nexports.BLAKE = BLAKE;\n//# sourceMappingURL=_blake.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.blake2b = void 0;\nconst _blake_js_1 = require(\"./_blake.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Same as SHA-512 but LE\n// prettier-ignore\nconst B2B_IV = /* @__PURE__ */ new Uint32Array([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n// Temporary buffer\nconst BBUF = /* @__PURE__ */ new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = _u64_js_1.default.add3L(Al, Bl, Xl);\n    Ah = _u64_js_1.default.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: _u64_js_1.default.rotr32H(Dh, Dl), Dl: _u64_js_1.default.rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = _u64_js_1.default.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: _u64_js_1.default.rotrSH(Bh, Bl, 24), Bl: _u64_js_1.default.rotrSL(Bh, Bl, 24) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nfunction G2b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = _u64_js_1.default.add3L(Al, Bl, Xl);\n    Ah = _u64_js_1.default.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: _u64_js_1.default.rotrSH(Dh, Dl, 16), Dl: _u64_js_1.default.rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = _u64_js_1.default.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: _u64_js_1.default.rotrBH(Bh, Bl, 63), Bl: _u64_js_1.default.rotrBL(Bh, Bl, 63) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nclass BLAKE2b extends _blake_js_1.BLAKE {\n    constructor(opts = {}) {\n        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);\n        // Same as SHA-512, but LE\n        this.v0l = B2B_IV[0] | 0;\n        this.v0h = B2B_IV[1] | 0;\n        this.v1l = B2B_IV[2] | 0;\n        this.v1h = B2B_IV[3] | 0;\n        this.v2l = B2B_IV[4] | 0;\n        this.v2h = B2B_IV[5] | 0;\n        this.v3l = B2B_IV[6] | 0;\n        this.v3h = B2B_IV[7] | 0;\n        this.v4l = B2B_IV[8] | 0;\n        this.v4h = B2B_IV[9] | 0;\n        this.v5l = B2B_IV[10] | 0;\n        this.v5h = B2B_IV[11] | 0;\n        this.v6l = B2B_IV[12] | 0;\n        this.v6h = B2B_IV[13] | 0;\n        this.v7l = B2B_IV[14] | 0;\n        this.v7h = B2B_IV[15] | 0;\n        const keyLength = opts.key ? opts.key.length : 0;\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (opts.salt) {\n            const salt = (0, utils_js_1.u32)((0, utils_js_1.toBytes)(opts.salt));\n            this.v4l ^= (0, utils_js_1.byteSwapIfBE)(salt[0]);\n            this.v4h ^= (0, utils_js_1.byteSwapIfBE)(salt[1]);\n            this.v5l ^= (0, utils_js_1.byteSwapIfBE)(salt[2]);\n            this.v5h ^= (0, utils_js_1.byteSwapIfBE)(salt[3]);\n        }\n        if (opts.personalization) {\n            const pers = (0, utils_js_1.u32)((0, utils_js_1.toBytes)(opts.personalization));\n            this.v6l ^= (0, utils_js_1.byteSwapIfBE)(pers[0]);\n            this.v6h ^= (0, utils_js_1.byteSwapIfBE)(pers[1]);\n            this.v7l ^= (0, utils_js_1.byteSwapIfBE)(pers[2]);\n            this.v7h ^= (0, utils_js_1.byteSwapIfBE)(pers[3]);\n        }\n        if (opts.key) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set((0, utils_js_1.toBytes)(opts.key));\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BBUF[i] = v)); // First half from state.\n        BBUF.set(B2B_IV, 16); // Second half from IV.\n        let { h, l } = _u64_js_1.default.fromBig(BigInt(this.length));\n        BBUF[24] = B2B_IV[8] ^ l; // Low word of the offset.\n        BBUF[25] = B2B_IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BBUF[28] = ~BBUF[28];\n            BBUF[29] = ~BBUF[29];\n        }\n        let j = 0;\n        const s = _blake_js_1.SIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BBUF[0] ^ BBUF[16];\n        this.v0h ^= BBUF[1] ^ BBUF[17];\n        this.v1l ^= BBUF[2] ^ BBUF[18];\n        this.v1h ^= BBUF[3] ^ BBUF[19];\n        this.v2l ^= BBUF[4] ^ BBUF[20];\n        this.v2h ^= BBUF[5] ^ BBUF[21];\n        this.v3l ^= BBUF[6] ^ BBUF[22];\n        this.v3h ^= BBUF[7] ^ BBUF[23];\n        this.v4l ^= BBUF[8] ^ BBUF[24];\n        this.v4h ^= BBUF[9] ^ BBUF[25];\n        this.v5l ^= BBUF[10] ^ BBUF[26];\n        this.v5h ^= BBUF[11] ^ BBUF[27];\n        this.v6l ^= BBUF[12] ^ BBUF[28];\n        this.v6h ^= BBUF[13] ^ BBUF[29];\n        this.v7l ^= BBUF[14] ^ BBUF[30];\n        this.v7h ^= BBUF[15] ^ BBUF[31];\n        BBUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer32.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * BLAKE2b - optimized for 64-bit platforms. JS doesn't have uint64, so it's slower than BLAKE2s.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, salt, personalization\n */\nexports.blake2b = (0, utils_js_1.wrapConstructorWithOpts)((opts) => new BLAKE2b(opts));\n//# sourceMappingURL=blake2b.js.map","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// index.ts\nvar utf_helpers_exports = {};\n__export(utf_helpers_exports, {\n  HexString: () => HexString,\n  Utf16: () => Utf16,\n  Utf8: () => Utf8,\n  UtfHelpers: () => UtfHelpers\n});\nmodule.exports = __toCommonJS(utf_helpers_exports);\nvar HexString = {\n  fromArray: (bytes) => {\n    if (!(bytes instanceof Uint8Array) && !Array.isArray(bytes)) {\n      throw new Error(`HexString.fromArray: passed bytes obj is not an Array or Uint8Array: ${typeof bytes}, ${bytes}`);\n    }\n    const arr = bytes instanceof Uint8Array ? Array.from(bytes) : bytes;\n    return \"0x\" + arr.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n  },\n  fromU8a: (bytes) => HexString.fromArray(bytes),\n  toArray(hexString) {\n    if (typeof hexString !== \"string\") {\n      throw new Error(`HexString.toArray: passed string is not a string: ${typeof hexString}`);\n    }\n    const str = hexString.startsWith(\"0x\") ? hexString.slice(2) : hexString;\n    const pairs = str.match(/.{1,2}/g) || [];\n    return pairs.map((byte) => parseInt(byte, 16));\n  },\n  toU8a: (hexString) => Uint8Array.from(HexString.toArray(hexString))\n};\nvar Utf8 = {\n  stringToU8a(str) {\n    const u8a = new Uint8Array(Utf8.lengthInBytes(str));\n    let offset = 0;\n    const start = offset;\n    let c1 = 0;\n    let c2 = 0;\n    let i = 0;\n    while (i < str.length) {\n      c1 = str.charCodeAt(i);\n      if (c1 < 128) {\n        u8a[offset++] = c1;\n      } else if (c1 < 2048) {\n        u8a[offset++] = c1 >> 6 | 192;\n        u8a[offset++] = c1 & 63 | 128;\n      } else if ((c1 & 64512) === 55296 && ((c2 = str.charCodeAt(i + 1)) & 64512) === 56320) {\n        c1 = 65536 + ((c1 & 1023) << 10) + (c2 & 1023);\n        ++i;\n        u8a[offset++] = c1 >> 18 | 240;\n        u8a[offset++] = c1 >> 12 & 63 | 128;\n        u8a[offset++] = c1 >> 6 & 63 | 128;\n        u8a[offset++] = c1 & 63 | 128;\n      } else {\n        u8a[offset++] = c1 >> 12 | 224;\n        u8a[offset++] = c1 >> 6 & 63 | 128;\n        u8a[offset++] = c1 & 63 | 128;\n      }\n      i += 1;\n    }\n    const diff = offset - start;\n    return u8a;\n  },\n  stringToNumberArray(str) {\n    return Array.from(Utf8.stringToU8a(str));\n  },\n  u8aToString(u8a) {\n    let start = 0;\n    let end = u8a.length;\n    if (end - start < 1) {\n      return \"\";\n    }\n    let str = \"\";\n    let i = start;\n    while (i < end) {\n      const t = u8a[i++];\n      if (t <= 127) {\n        str += String.fromCharCode(t);\n      } else if (t >= 192 && t < 224) {\n        str += String.fromCharCode((t & 31) << 6 | u8a[i++] & 63);\n      } else if (t >= 224 && t < 240) {\n        str += String.fromCharCode((t & 15) << 12 | (u8a[i++] & 63) << 6 | u8a[i++] & 63);\n      } else if (t >= 240) {\n        const t2 = ((t & 7) << 18 | (u8a[i++] & 63) << 12 | (u8a[i++] & 63) << 6 | u8a[i++] & 63) - 65536;\n        str += String.fromCharCode(55296 + (t2 >> 10));\n        str += String.fromCharCode(56320 + (t2 & 1023));\n      }\n    }\n    return str;\n  },\n  numberArrayToString(arr) {\n    return Utf8.u8aToString(Uint8Array.from(arr));\n  },\n  stringToHexString(str) {\n    return HexString.fromU8a(Utf8.stringToU8a(str));\n  },\n  hexStringToString(hexString) {\n    return Utf8.u8aToString(HexString.toU8a(hexString));\n  },\n  lengthInBytes(str) {\n    let len = 0;\n    let c = 0;\n    let i = 0;\n    while (i < str.length) {\n      c = str.charCodeAt(i);\n      if (c < 128) {\n        len += 1;\n      } else if (c < 2048) {\n        len += 2;\n      } else if ((c & 64512) === 55296 && (str.charCodeAt(i + 1) & 64512) === 56320) {\n        ++i;\n        len += 4;\n      } else {\n        len += 3;\n      }\n      i += 1;\n    }\n    return len;\n  }\n};\nvar Utf16 = {\n  stringToU16a(str) {\n    const u16arr = new Uint16Array(Utf16.lengthInBytes(str));\n    let i = 0;\n    while (i < str.length) {\n      let cp = str.codePointAt(i);\n      if (cp <= 65535) {\n        u16arr[i++] = cp;\n      } else {\n        cp -= 65536;\n        u16arr[i++] = (cp >> 10) + 55296;\n        u16arr[i++] = cp % 1024 + 56320;\n      }\n    }\n    return u16arr;\n  },\n  stringToNumberArray(str) {\n    return Array.from(Utf16.stringToU16a(str));\n  },\n  numberArrayToString(arr) {\n    let i = 0;\n    const len = arr.length;\n    let s = \"\";\n    while (i < len - 1) {\n      const c1 = arr[i];\n      const c2 = arr[i + 1];\n      if (c1 >= 55296 && c1 <= 57343) {\n        if (c2 >= 56320 && c2 <= 57343) {\n          s += String.fromCodePoint((c1 - 55296) * 1024 + c2 - 56320 + 65536);\n          i += 2;\n        } else {\n          throw new Error(`invalid UTF16 sequence: first u16 is ${c1}, second u16 is ${c2}`);\n        }\n      } else {\n        s += String.fromCodePoint(c1);\n        i += 1;\n      }\n    }\n    if (i < len) {\n      s += String.fromCodePoint(arr[len - 1]);\n    }\n    return s;\n  },\n  u16aToString(arr) {\n    return Utf16.numberArrayToString(arr);\n  },\n  lengthInBytes(str) {\n    let i = 0;\n    while (i < str.length) {\n      i += str.codePointAt(i) <= 65535 ? 1 : 2;\n    }\n    return i;\n  }\n};\nvar UtfHelpers = {\n  HexString,\n  Utf8,\n  Utf16\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  HexString,\n  Utf16,\n  Utf8,\n  UtfHelpers\n});\n//# sourceMappingURL=index.js.map","export const DEFAULT_DECIMALS = 18\n\nconst validateDecimals = (decimals: any): decimals is number => {\n  if (typeof decimals !== 'number') throw new Error('Invalid decimals, must be a number')\n  if (decimals < 1 || decimals > 18) throw new Error('Invalid decimals, must be between 0 and 18')\n  return true\n}\n\nexport const coinToWeiInBigInt = (value: string | number, decimals: number = DEFAULT_DECIMALS): bigint => {\n  value = value.toString()\n\n  //test that value is string of positive number\n  if (!/^\\d+(\\.\\d+)?$/.test(value)) {\n    throw new Error('Invalid value')\n  }\n  validateDecimals(decimals)\n\n  // Define the multiplier as a BigInt\n  const multiplier = 10n ** BigInt(decimals)\n\n  // Convert the integer part and fractional part separately\n  let [integerPart, fractionalPart = ''] = value.split('.')\n\n  // Ensure the fractional part is not longer than decimals digits\n  fractionalPart = fractionalPart.padEnd(decimals, '0').slice(0, decimals)\n\n  // Combine the integer and fractional parts\n  const weiValue = BigInt(integerPart) * multiplier + BigInt(fractionalPart)\n\n  return weiValue\n}\n\nexport const coinToWei = (value: string | number, decimals: number = DEFAULT_DECIMALS): string => {\n  return coinToWeiInBigInt(value, decimals).toString()\n}\n\nexport const weiToCoin = (weiValue: string | bigint, decimals: number = DEFAULT_DECIMALS): string => {\n  validateDecimals(decimals)\n\n  const weiBigInt = BigInt(weiValue)\n  const divisor = 10n ** BigInt(decimals)\n\n  // Divide the Wei amount by the divisor to get the Ether amount\n  const ethAmountBigInt = weiBigInt / divisor\n  const remainder = weiBigInt % divisor\n\n  // Determine how many digits to keep based on the Ether amount\n  // let digits = 0\n  // const ethAmount = Number(ethAmountBigInt) + (remainder > 0 ? Number(remainder) / 10 ** decimals : 0)\n  // if (ethAmount < 0.1) digits = 6\n  // else if (ethAmount < 1) digits = 4\n  // else if (ethAmount < 10) digits = 3\n  // else if (ethAmount < 100) digits = 2\n  // else if (ethAmount < 100000) digits = 1\n  // For amounts >= 100000, digits remain 0 for integer values\n\n  // Format the fractional part based on the determined digits\n  const remainderStr = remainder.toString()\n    .padStart(decimals, '0')\n  // .substring(0, digits)\n\n  // Remove trailing zeros from the remainder\n  const formattedRemainder = remainderStr.replace(/0+$/, '')\n\n  // Combine the integer part and the fractional part\n  const formattedEthAmount = `${ethAmountBigInt}${formattedRemainder.length > 0 ? '.' + formattedRemainder : ''}`\n\n  return formattedEthAmount\n}\n\nexport const dangerouslyWeiToCoinInFloat = (weiValue: string | bigint, decimals: number = DEFAULT_DECIMALS): number =>\n  parseFloat(weiToCoin(weiValue, decimals))\n\nexport const formatNice = (value: string | number, formattingThreshold: number = 100_000): string => {\n  const numStr = typeof value === 'string' ? value : value.toString()\n  const roughNum = parseFloat(numStr)\n  if (isNaN(roughNum)) throw new Error(`Coin.format: Invalid number: ${numStr}`)\n\n  if (formattingThreshold === -1) {\n    return numStr\n  }\n\n  const [integerPart, fractionalPart = ''] = numStr.split('.')\n  const integerNum = parseInt(integerPart)\n\n  if (integerNum < formattingThreshold) {\n    if (!fractionalPart) return numStr\n\n    const roughRemainder = parseFloat(`0.${fractionalPart}`)\n    let digits = 0\n    if (roughRemainder < 0.1) digits = 6\n    else if (integerNum < 1) digits = 4\n    else if (integerNum < 10) digits = 3\n    else if (integerNum < 10000) digits = 2\n    else if (integerNum < 100000) digits = 1\n    // For amounts >= 100000, digits remain 0 for integer values\n\n    let fractionalPadded = fractionalPart\n      .substring(0, digits)\n    if (fractionalPadded.length < 2 && digits >= 2) fractionalPadded = fractionalPadded.padEnd(2, '0')\n\n    // if fractional part contains only zeroes, remove it\n    if (fractionalPadded.replace(/0/g, '') === '') return integerPart\n    if (!fractionalPadded) return integerPart\n    return `${integerPart}.${fractionalPadded}`\n  }\n\n  const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"]\n  const i = integerNum === 0\n    ? 0\n    // 6.907... is Math.log(1000), 4 is max index of suffixes\n    : Math.min(Math.floor(Math.log(integerNum) / 6.907755278982137), 4)\n\n  const [integerPartOfNice, fractionalPartOfNice = ''] = (integerNum / Math.pow(1000, i)).toString().split('.')\n  const formatted = integerPartOfNice +\n    (fractionalPartOfNice.length > 0 ? '.' + fractionalPartOfNice.slice(0, 3) : '')\n\n  return `${formatted}${suffixes[i]}`\n}\n\nexport const formatFixed = (value: string | number, precision: number = 3): string => {\n  const numStr = value.toString()\n  if (precision === -1) return numStr\n\n  const [integerPart, fractionalPart = ''] = numStr.split('.')\n  if (!fractionalPart) return numStr\n\n  return `${integerPart}.${fractionalPart.substring(0, precision).padEnd(precision, '0')}`\n}\n\nexport const weiFormatNice = (weiValue: string | bigint, decimals: number = DEFAULT_DECIMALS, formattingThreshold = 100_000): string => {\n  return formatNice(weiToCoin(weiValue, decimals), formattingThreshold)\n}\n\nexport const weiFormatFixed = (weiValue: string | bigint, decimals: number = DEFAULT_DECIMALS, precision: number = 3): string => {\n  return formatFixed(weiToCoin(weiValue, decimals), precision)\n}\n\nexport const weiToGwei = (gwei: string | bigint, decimals: number = DEFAULT_DECIMALS): string => {\n  const weiBigInt = BigInt(gwei)\n  if (weiBigInt < 0n) throw new Error('Invalid gwei value')\n  const divisor = 10n ** (BigInt(decimals) / 2n)\n  const [integerPart, fractionalPart = ''] = [\n    (weiBigInt / divisor).toString(),\n    (weiBigInt % divisor).toString().padStart(decimals / 2, '0').replace(/0+$/, '')\n  ]\n  if (!fractionalPart) return integerPart\n  return `${integerPart}.${fractionalPart}`\n}\n\nexport const gweiToWei = (gwei: string | number | bigint, decimals: number = DEFAULT_DECIMALS): string => {\n  const multiplier = 10n ** (BigInt(decimals) / 2n)\n\n  const [integerPart, fractionalPart = ''] = gwei.toString().split('.')\n  if (BigInt(integerPart) < 0n) throw new Error('Invalid gwei value - must be positive')\n  const gweiIntegerPartInWei = BigInt(integerPart) * multiplier\n  if (!fractionalPart) return gweiIntegerPartInWei.toString()\n\n  const fractionalPartStr = fractionalPart.padEnd(decimals / 2, '0').slice(0, decimals / 2)\n\n  const weiValue = gweiIntegerPartInWei + BigInt(fractionalPartStr)\n  return weiValue.toString()\n}\n\nexport const coinToGwei = (value: string | number, decimals: number = DEFAULT_DECIMALS): string => {\n  return weiToGwei(coinToWei(value, decimals), decimals)\n}\n\nexport const gweiToCoin = (value: string | number, decimals: number = DEFAULT_DECIMALS): string => {\n  return weiToCoin(gweiToWei(value, decimals), decimals)\n}\n\nexport const cleanUpCoinsValue = (value: string | number): string => {\n  return value.toString().trim().replace(/\\.?0+$/, '')\n}\n\nexport const Coin = (\n  currency: string,\n  decimals: number = DEFAULT_DECIMALS,\n  precision: number = 3,\n  formattingThreshold: number = 100_000\n) => {\n  if (typeof currency as any !== 'string') throw new Error('Invalid currency, must be a string')\n  validateDecimals(decimals)\n  const paddedCurrency = currency.trim() === '' ? '' : ` ${currency.trim()}`\n\n  return {\n    coinToWeiInBigInt: (value: string): bigint => coinToWeiInBigInt(value, decimals),\n    coinToWei: (value: string): string => coinToWei(value, decimals),\n    weiToCoin: (value: string | bigint): string => weiToCoin(value, decimals),\n\n    dangerouslyWeiToCoinInFloat: (value: string | bigint): number => dangerouslyWeiToCoinInFloat(value, decimals),\n\n    formatNice: (value: string): string => formatNice(value, formattingThreshold) + paddedCurrency,\n    formatMetric: (value: string): string => formatNice(value, formattingThreshold),\n    formatFixed: (value: string | number, _precision = precision): string => formatFixed(value, _precision) + paddedCurrency,\n    formatFixedClean: (value: string | number, _precision = precision): string => formatFixed(value, _precision),\n    weiFormatNice: (value: string | bigint): string => weiFormatNice(value, decimals, formattingThreshold) + paddedCurrency,\n    weiFormatMetric: (value: string | bigint): string => weiFormatNice(value, decimals, formattingThreshold),\n    weiFormatFixed: (value: string | bigint, _precision = precision): string => weiFormatFixed(value, decimals, _precision) + paddedCurrency,\n    weiFormatFixedClean: (value: string | bigint, _precision = precision): string => weiFormatFixed(value, decimals, _precision),\n\n    gwei: {\n      gweiToWei: (value: string | number | bigint): string => gweiToWei(value, decimals),\n      weiToGwei: (value: string | bigint): string => weiToGwei(value, decimals),\n      gweiToCoin: (value: string | number): string => gweiToCoin(value, decimals),\n      coinToGwei: (value: string | number): string => coinToGwei(value, decimals),\n    },\n\n    inAllFormats: (value: string | number, _precision = precision): ICoinFormats => {\n      const wei = coinToWei(value, decimals)\n      const coins = cleanUpCoinsValue(value)\n      const metric = formatNice(value, formattingThreshold)\n      return {\n        value: coins,\n        metric,\n        nice: metric + paddedCurrency,\n        fixed: formatFixed(value, _precision) + paddedCurrency,\n        exact: coins + paddedCurrency,\n        currency,\n        wei,\n      }\n    },\n\n    weiInAllFormats: (wei: string | bigint, _precision = precision): ICoinFormats => {\n      const coins = weiToCoin(wei, decimals)\n      const metric = weiFormatNice(wei, decimals, formattingThreshold)\n      return {\n        value: coins,\n        metric,\n        nice: metric + paddedCurrency,\n        fixed: weiFormatFixed(wei, decimals, _precision) + paddedCurrency,\n        exact: coins + paddedCurrency,\n        currency,\n        wei: wei.toString(),\n      }\n    }\n  }\n}\n\nexport type ICoinFormats = {\n  value: string\n  metric: string\n  nice: string\n  fixed: string\n  exact: string\n  currency: string\n  wei: string\n}\n\nexport type ICoin = ReturnType<typeof Coin>\n","\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Address: () => Address_exports,\n  Coin: () => coin_exports.Coin,\n  CoinUtils: () => coin_exports,\n  HexString: () => HexString4,\n  HexUtils: () => HexUtils,\n  StringUtils: () => StringUtils,\n  Utf16: () => Utf16,\n  Utf8: () => Utf8,\n  constants: () => constants_exports\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/Address/index.ts\nvar Address_exports = {};\n__export(Address_exports, {\n  Address: () => Address,\n  algorithms: () => imports_exports,\n  collection: () => collection,\n  compare: () => compare,\n  constants: () => constants_exports,\n  extract: () => extract,\n  is: () => is,\n  mirror: () => mirror,\n  nesting: () => nesting,\n  normalize: () => normalize,\n  substrate: () => substrate,\n  validate: () => validate\n});\n\n// src/Address/constants.ts\nvar constants_exports = {};\n__export(constants_exports, {\n  COLLECTION_ADDRESS_PREFIX: () => COLLECTION_ADDRESS_PREFIX,\n  NESTING_PREFIX: () => NESTING_PREFIX,\n  STATIC_ADDRESSES: () => STATIC_ADDRESSES\n});\nvar STATIC_ADDRESSES = {\n  contractHelpers: \"0x842899ECF380553E8a4de75bF534cdf6fBF64049\",\n  collectionHelpers: \"0x6C4E9fE1AE37a41E93CEE429e8E1881aBdcbb54F\"\n};\nvar NESTING_PREFIX = \"0xf8238ccfff8ed887463fd5e0\";\nvar COLLECTION_ADDRESS_PREFIX = \"0x17c4e6453cc49aaaaeaca894e6d9683e\";\n\n// src/Address/imports.ts\nvar imports_exports = {};\n__export(imports_exports, {\n  base58: () => base58,\n  base64: () => base64,\n  basex: () => import_base_x.default,\n  blake2b: () => import_blake2b.blake2b,\n  keccak_256: () => import_sha3.keccak_256\n});\nvar import_base_x = __toESM(require(\"base-x\"));\nvar import_sha3 = require(\"@noble/hashes/sha3\");\nvar import_blake2b = require(\"@noble/hashes/blake2b\");\nvar BASE58_ALPHABET = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nvar BASE64_ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar base58 = (0, import_base_x.default)(BASE58_ALPHABET);\nvar base64 = (0, import_base_x.default)(BASE64_ALPHABET);\n\n// src/Address/ethereum.ts\nvar import_utf_helpers = require(\"utf-helpers\");\nvar DWORDHexString = {\n  _checkU32: (num) => {\n    if (typeof num !== \"number\")\n      throw new Error(`Passed number is not a number: ${typeof num}, ${num}`);\n    if (isNaN(num))\n      throw new Error(`Passed number is NaN: ${num}`);\n    if (num < 0)\n      throw new Error(`Passed number is less than 0: ${num}`);\n    if (num > 4294967295)\n      throw new Error(`Passed number is more than 2**32: ${num}`);\n    if (num !== Math.floor(num))\n      throw new Error(`Passed number is not an integer number: ${num}`);\n    return num;\n  },\n  fromNumber: (n) => {\n    return DWORDHexString._checkU32(n).toString(16).padStart(8, \"0\");\n  },\n  toNumber: (s) => {\n    const num = parseInt(s, 16);\n    if (isNaN(num))\n      throw new Error(`Passed string is not hexadecimal: ${s}`);\n    return DWORDHexString._checkU32(num);\n  }\n};\nvar unsafeNormalizeEthereumAddress = (address) => {\n  const addr = address.toLowerCase().replace(/^0x/i, \"\");\n  const addressHash = import_utf_helpers.HexString.fromU8a((0, import_sha3.keccak_256)(addr)).replace(/^0x/i, \"\");\n  let checksumAddress = \"0x\";\n  for (let i = 0; i < addr.length; i++) {\n    checksumAddress += parseInt(addressHash[i], 16) > 7 ? addr[i].toUpperCase() : addr[i];\n  }\n  return checksumAddress;\n};\nvar normalizeEthereumAddress = (address) => {\n  validate.ethereumAddress(address);\n  return unsafeNormalizeEthereumAddress(address);\n};\nvar compareEthereumAddresses = (address1, address2) => {\n  const addr1 = typeof address1 === \"string\" ? address1 : address1.Ethereum || address1.ethereum;\n  const addr2 = typeof address2 === \"string\" ? address2 : address2.Ethereum || address2.ethereum;\n  if (!addr1 || !addr2 || !is.ethereumAddress(addr1) || !is.ethereumAddress(addr2)) {\n    return false;\n  }\n  return addr1.toLowerCase() === addr2.toLowerCase();\n};\nvar collectionIdToEthAddress = (collectionId) => {\n  validate.collectionId(collectionId);\n  return unsafeNormalizeEthereumAddress(\n    COLLECTION_ADDRESS_PREFIX + DWORDHexString.fromNumber(collectionId)\n  );\n};\nvar ethAddressToCollectionId = (address) => {\n  validate.collectionAddress(address);\n  return DWORDHexString.toNumber(address.slice(-8));\n};\nvar collectionIdAndTokenIdToNestingAddress = (collectionId, tokenId) => {\n  validate.collectionId(collectionId);\n  validate.tokenId(tokenId);\n  return unsafeNormalizeEthereumAddress(\n    NESTING_PREFIX + DWORDHexString.fromNumber(collectionId) + DWORDHexString.fromNumber(tokenId)\n  );\n};\nvar nestingAddressToCollectionIdAndTokenId = (address) => {\n  validate.nestingAddress(address);\n  return {\n    collectionId: DWORDHexString.toNumber(address.slice(-16, -8)),\n    tokenId: DWORDHexString.toNumber(address.slice(-8))\n  };\n};\n\n// src/Address/substrate.ts\nvar import_utf_helpers2 = require(\"utf-helpers\");\nvar blake2AsU8a = (u8a, dkLen = 32) => {\n  return (0, import_blake2b.blake2b)(u8a, { dkLen });\n};\nvar u8aConcat = (u8as) => {\n  let offset = 0;\n  let length = 0;\n  for (let i = 0; i < u8as.length; i++) {\n    length += u8as[i].length;\n  }\n  const result = new Uint8Array(length);\n  for (let i = 0; i < u8as.length; i++) {\n    result.set(u8as[i], offset);\n    offset += u8as[i].length;\n  }\n  return result;\n};\nvar SS58_PREFIX = new Uint8Array([83, 83, 53, 56, 80, 82, 69]);\nvar sshash = (data) => {\n  return blake2AsU8a(u8aConcat([SS58_PREFIX, data]), 64);\n};\nvar checkAddressChecksum = (decoded, ignoreChecksum = false) => {\n  const ss58Length = decoded[0] & 64 ? 2 : 1;\n  const ss58Decoded = ss58Length === 1 ? decoded[0] : (decoded[0] & 63) << 2 | decoded[1] >> 6 | (decoded[1] & 63) << 8;\n  const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);\n  const length = decoded.length - (isPublicKey ? 2 : 1);\n  let isValid = false;\n  if (!ignoreChecksum) {\n    const hash = sshash(decoded.subarray(0, length));\n    isValid = (decoded[0] & 128) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0]);\n  }\n  return [isValid, length, ss58Length, ss58Decoded];\n};\nvar normalizeSubstrateAddress = (address, prefix = 42) => {\n  return encodeSubstrateAddress(decodeSubstrateAddress(address).u8a, prefix);\n};\nfunction encodeSubstrateAddress(key, ss58Format = 42) {\n  const u8a = typeof key === \"string\" ? import_utf_helpers2.HexString.toU8a(key) : typeof key === \"bigint\" ? import_utf_helpers2.HexString.toU8a(key.toString(16)) : key;\n  if (ss58Format < 0 || ss58Format > 16383 || [46, 47].includes(ss58Format)) {\n    throw new Error(`ss58Format is not valid, received ${typeof ss58Format} \"${ss58Format}\"`);\n  }\n  const allowedDecodedLengths = [1, 2, 4, 8, 32, 33];\n  if (!allowedDecodedLengths.includes(u8a.length)) {\n    throw new Error(`key length is not valid, received ${u8a.length}, valid values are ${allowedDecodedLengths.join(\", \")}`);\n  }\n  const u8aPrefix = ss58Format < 64 ? new Uint8Array([ss58Format]) : new Uint8Array([\n    (ss58Format & 252) >> 2 | 64,\n    ss58Format >> 8 | (ss58Format & 3) << 6\n  ]);\n  const input = u8aConcat([u8aPrefix, u8a]);\n  return base58.encode(\n    u8aConcat([\n      input,\n      sshash(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)\n    ])\n  );\n}\nfunction decodeSubstrateAddress(address, ignoreChecksum, ss58Format = -1) {\n  let realError = null;\n  try {\n    if (is.substratePublicKey(address)) {\n      return {\n        u8a: import_utf_helpers2.HexString.toU8a(address),\n        bigint: BigInt(address),\n        hex: address,\n        ss58Prefix: 42\n      };\n    } else if (address.startsWith(\"0x\")) {\n      throw new Error(`Invalid substrate address, received ${address}. Wrong or mangled public key?`);\n    }\n    const decoded = base58.decode(address);\n    const allowedEncodedLengths = [3, 4, 6, 10, 35, 36, 37, 38];\n    if (!allowedEncodedLengths.includes(decoded.length)) {\n      realError = new Error(`key length is not valid, decoded key length is ${decoded.length}, valid values are ${allowedEncodedLengths.join(\", \")}`);\n      throw realError;\n    }\n    const [isValid, endPos, ss58Length, ss58Decoded] = checkAddressChecksum(decoded, ignoreChecksum);\n    if (!ignoreChecksum && !isValid) {\n      realError = new Error(`Invalid decoded address checksum`);\n      throw realError;\n    }\n    if (![-1, ss58Decoded].includes(ss58Format)) {\n      realError = new Error(`Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);\n      throw realError;\n    }\n    const publicKey = decoded.slice(ss58Length, endPos);\n    const hex = import_utf_helpers2.HexString.fromU8a(publicKey);\n    return {\n      u8a: publicKey,\n      hex,\n      bigint: BigInt(hex),\n      ss58Prefix: ss58Decoded\n    };\n  } catch (error) {\n    throw realError ? realError : new Error(`Decoding ${address}: ${error.message}`);\n  }\n}\nvar compareSubstrateAddresses = (address1, address2) => {\n  const addr1 = typeof address1 === \"string\" ? address1 : address1.Substrate || address1.substrate;\n  const addr2 = typeof address2 === \"string\" ? address2 : address2.Substrate || address2.substrate;\n  if (!addr1 || !addr2) {\n    return false;\n  }\n  try {\n    const decoded1 = decodeSubstrateAddress(addr1);\n    const decoded2 = decodeSubstrateAddress(addr2);\n    return decoded1.bigint === decoded2.bigint;\n  } catch (e) {\n    return false;\n  }\n};\nvar addressToEvm = (address, ignoreChecksum) => {\n  const truncated = decodeSubstrateAddress(address, ignoreChecksum).u8a.subarray(0, 20);\n  return normalizeEthereumAddress(import_utf_helpers2.HexString.fromU8a(truncated));\n};\nvar EVM_PREFIX_U8A = new Uint8Array([101, 118, 109, 58]);\nvar evmToAddress = (evmAddress, ss58Format = 42) => {\n  validate.ethereumAddress(evmAddress);\n  const message = u8aConcat([EVM_PREFIX_U8A, import_utf_helpers2.HexString.toU8a(evmAddress)]);\n  return encodeSubstrateAddress(blake2AsU8a(message), ss58Format);\n};\n\n// src/Address/crossAccountId.ts\nvar guessAddressAndExtractCrossAccountIdUnsafe = (rawAddress, normalize2 = false) => {\n  const address = rawAddress;\n  if (typeof address === \"object\") {\n    if (address.hasOwnProperty(\"eth\") && address.hasOwnProperty(\"sub\")) {\n      const subPublicKey = address.sub.hasOwnProperty(\"_hex\") && typeof address.sub._hex === \"string\" ? address.sub._hex : address.sub;\n      if (typeof subPublicKey !== \"string\" || !subPublicKey.startsWith(\"0x\")) {\n        throw new Error(`Substrate public key must be a hex string, got ${subPublicKey}`);\n      }\n      const subBigInt = BigInt(subPublicKey);\n      const ethBigInt = BigInt(address.eth);\n      if (!(Number(subBigInt === 0n) ^ Number(ethBigInt === 0n))) {\n        throw new Error(`One of the addresses must be 0, got eth ${address.eth} and substrate public key ${address.sub}.`);\n      }\n      if (subBigInt === 0n) {\n        return { Ethereum: normalizeEthereumAddress(address.eth) };\n      } else {\n        return { Substrate: normalizeSubstrateAddress(subPublicKey) };\n      }\n    } else if (address.hasOwnProperty(\"Substrate\") || address.hasOwnProperty(\"substrate\")) {\n      const substrateAddress = address.hasOwnProperty(\"Substrate\") ? address.Substrate : address.substrate;\n      if (is.substratePublicKey(substrateAddress)) {\n        return { Substrate: normalizeSubstrateAddress(substrateAddress) };\n      } else if (is.substrateAddress(substrateAddress)) {\n        return { Substrate: normalize2 ? normalizeSubstrateAddress(substrateAddress) : substrateAddress };\n      } else {\n        throw new Error(`Address ${substrateAddress} is not a valid Substrate address`);\n      }\n    } else if (address.hasOwnProperty(\"Ethereum\") || address.hasOwnProperty(\"ethereum\")) {\n      const ethereumAddress = address.hasOwnProperty(\"Ethereum\") ? address.Ethereum : address.ethereum;\n      validate.ethereumAddress(ethereumAddress);\n      return { Ethereum: normalize2 ? normalizeEthereumAddress(ethereumAddress) : ethereumAddress };\n    } else {\n      throw new Error(`Address ${address} is not a valid crossAccountId object (should contain \"Substrate\"/\"substrate\" or \"Ethereum\"/\"ethereum\" field) or EthCrossAccountId (should contain \"eth\" and \"sub\" fields)`);\n    }\n  }\n  if (typeof address === \"string\") {\n    if (is.substrateAddress(address))\n      return { Substrate: normalize2 ? normalizeSubstrateAddress(address) : address };\n    else if (is.ethereumAddress(address))\n      return { Ethereum: normalize2 ? normalizeEthereumAddress(address) : address };\n    else if (is.substratePublicKey(address))\n      return { Substrate: normalizeSubstrateAddress(address) };\n    else {\n      throw new Error(`Address ${address} is not a valid Substrate or Ethereum address`);\n    }\n  }\n  throw new Error(`Address ${address} is not a string or object: ${typeof address}`);\n};\nvar guessAddressAndExtractCrossAccountIdSafe = (address, normalize2 = false) => {\n  try {\n    return guessAddressAndExtractCrossAccountIdUnsafe(address, normalize2);\n  } catch {\n    return null;\n  }\n};\nvar substrateOrMirrorIfEthereum = (address, normalize2 = false) => {\n  const addressObject = guessAddressAndExtractCrossAccountIdUnsafe(address, normalize2);\n  return addressObject.Substrate ? addressObject.Substrate : mirror.ethereumToSubstrate(addressObject.Ethereum);\n};\nvar addressInAnyFormToEnhancedCrossAccountId = (address, ss58Prefix = 42) => {\n  const crossAccountId = guessAddressAndExtractCrossAccountIdUnsafe(address);\n  if (crossAccountId.Ethereum) {\n    const normalized = normalizeEthereumAddress(crossAccountId.Ethereum);\n    return {\n      ...crossAccountId,\n      address: normalized,\n      addressSS58: normalized,\n      substratePublicKey: normalized,\n      isEthereum: true,\n      isSubstrate: false,\n      type: \"Ethereum\"\n    };\n  } else {\n    return {\n      ...crossAccountId,\n      address: normalizeSubstrateAddress(crossAccountId.Substrate),\n      addressSS58: normalizeSubstrateAddress(crossAccountId.Substrate, ss58Prefix),\n      substratePublicKey: decodeSubstrateAddress(crossAccountId.Substrate).hex,\n      isEthereum: false,\n      isSubstrate: true,\n      type: \"Substrate\"\n    };\n  }\n};\n\n// src/Address/index.ts\nvar ETH_ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\nvar SUB_PUBLIC_KEY_REGEX = /^0x[a-fA-F0-9]{64}$/;\nvar validate = {\n  substrateAddress: (address) => {\n    decodeSubstrateAddress(address);\n    return true;\n  },\n  ethereumAddress: (address) => {\n    if (!is.ethereumAddress(address)) {\n      throw new Error(`address \"${address}\" is not valid ethereum address`);\n    }\n    return true;\n  },\n  substratePublicKey: (address) => {\n    if (!is.substratePublicKey(address)) {\n      throw new Error(`address \"${address}\" is not valid substrate public key`);\n    }\n    return true;\n  },\n  collectionAddress: (address) => {\n    if (!is.collectionAddress(address)) {\n      throw new Error(`address ${address} is not a collection address`);\n    }\n    return true;\n  },\n  nestingAddress: (address) => {\n    if (!is.nestingAddress(address)) {\n      throw new Error(`address ${address} is not a nesting address`);\n    }\n    return true;\n  },\n  collectionId: (collectionId) => {\n    if (!is.collectionId(collectionId)) {\n      throw new Error(`collectionId should be a number between 0 and 0xffffffff`);\n    }\n    return true;\n  },\n  tokenId: (tokenId) => {\n    if (!is.tokenId(tokenId)) {\n      throw new Error(`collectionId should be a number between 0 and 0xffffffff`);\n    }\n    return true;\n  }\n};\nvar is = {\n  substrateAddress: (address) => {\n    try {\n      decodeSubstrateAddress(address);\n      return !is.substratePublicKey(address);\n    } catch {\n      return false;\n    }\n  },\n  ethereumAddress: (address) => {\n    return typeof address === \"string\" && address.length === 42 && !!address.match(ETH_ADDRESS_REGEX);\n  },\n  substratePublicKey: (address) => {\n    return typeof address === \"string\" && address.length === 66 && !!address.match(SUB_PUBLIC_KEY_REGEX);\n  },\n  collectionAddress: (address) => {\n    return is.ethereumAddress(address) && address.toLowerCase().startsWith(COLLECTION_ADDRESS_PREFIX);\n  },\n  nestingAddress: (address) => {\n    return is.ethereumAddress(address) && address.toLowerCase().startsWith(NESTING_PREFIX);\n  },\n  collectionId: (collectionId) => {\n    return !(typeof collectionId !== \"number\" || isNaN(collectionId) || collectionId < 0 || collectionId > 4294967295);\n  },\n  tokenId: (tokenId) => {\n    return !(typeof tokenId !== \"number\" || isNaN(tokenId) || tokenId < 0 || tokenId > 4294967295);\n  },\n  crossAccountId(obj) {\n    return is.substrateAddressObject(obj) || is.ethereumAddressObject(obj);\n  },\n  crossAccountIdUncapitalized(obj) {\n    return is.substrateAddressObjectUncapitalized(obj) || is.ethereumAddressObjectUncapitalized(obj);\n  },\n  substrateAddressObject(obj) {\n    return typeof obj === \"object\" && typeof obj?.Substrate === \"string\" && is.substrateAddress(obj.Substrate);\n  },\n  ethereumAddressObject(obj) {\n    return typeof obj === \"object\" && typeof obj?.Ethereum === \"string\" && is.ethereumAddress(obj.Ethereum);\n  },\n  substrateAddressObjectUncapitalized(obj) {\n    return typeof obj === \"object\" && typeof obj?.substrate === \"string\" && is.substrateAddress(obj.substrate);\n  },\n  ethereumAddressObjectUncapitalized(obj) {\n    return typeof obj === \"object\" && typeof obj?.ethereum === \"string\" && is.ethereumAddress(obj.ethereum);\n  },\n  substrateAddressInAnyForm(address) {\n    return typeof address === \"string\" ? is.substrateAddress(address) : typeof address === \"object\" && !!address && (is.substrateAddressObject(address) || is.substrateAddressObjectUncapitalized(address));\n  },\n  ethereumAddressInAnyForm(address) {\n    return typeof address === \"string\" ? is.ethereumAddress(address) : typeof address === \"object\" && !!address && (is.ethereumAddressObject(address) || is.ethereumAddressObjectUncapitalized(address));\n  },\n  validAddressInAnyForm(address) {\n    return is.ethereumAddressInAnyForm(address) || is.substrateAddressInAnyForm(address);\n  }\n};\nvar collection = {\n  idToAddress: collectionIdToEthAddress,\n  addressToId: ethAddressToCollectionId\n};\nvar nesting = {\n  idsToAddress: collectionIdAndTokenIdToNestingAddress,\n  addressToIds: nestingAddressToCollectionIdAndTokenId\n};\nvar extract = {\n  address: (addressOrCrossAccountId) => {\n    const crossAccountId = guessAddressAndExtractCrossAccountIdUnsafe(addressOrCrossAccountId);\n    return crossAccountId.Substrate || crossAccountId.Ethereum;\n  },\n  addressSafe: (addressOrCrossAccountId) => {\n    const crossAccountId = guessAddressAndExtractCrossAccountIdSafe(addressOrCrossAccountId);\n    return crossAccountId ? crossAccountId.Substrate || crossAccountId.Ethereum : null;\n  },\n  addressNormalized: (addressOrCrossAccountId) => {\n    const crossAccountId = guessAddressAndExtractCrossAccountIdUnsafe(addressOrCrossAccountId, true);\n    return crossAccountId.Substrate || crossAccountId.Ethereum;\n  },\n  addressNormalizedSafe: (addressOrCrossAccountId) => {\n    const crossAccountId = guessAddressAndExtractCrossAccountIdSafe(addressOrCrossAccountId, true);\n    return crossAccountId ? crossAccountId.Substrate || crossAccountId.Ethereum : null;\n  },\n  addressForScanNormalized: (addressOrCrossAccountId) => {\n    const crossAccountId = guessAddressAndExtractCrossAccountIdUnsafe(addressOrCrossAccountId, true);\n    return crossAccountId.Substrate || crossAccountId.Ethereum.toLowerCase();\n  },\n  addressForScanNormalizedSafe: (addressOrCrossAccountId) => {\n    const crossAccountId = guessAddressAndExtractCrossAccountIdSafe(addressOrCrossAccountId, true);\n    return crossAccountId ? crossAccountId.Substrate || crossAccountId.Ethereum.toLowerCase() : null;\n  },\n  crossAccountId: (addressOrCrossAccountId) => {\n    return guessAddressAndExtractCrossAccountIdUnsafe(addressOrCrossAccountId);\n  },\n  crossAccountIdSafe: (addressOrCrossAccountId) => {\n    return guessAddressAndExtractCrossAccountIdSafe(addressOrCrossAccountId);\n  },\n  crossAccountIdNormalized: (addressOrCrossAccountId) => {\n    return guessAddressAndExtractCrossAccountIdUnsafe(addressOrCrossAccountId, true);\n  },\n  crossAccountIdNormalizedSafe: (addressOrCrossAccountId) => {\n    return guessAddressAndExtractCrossAccountIdSafe(addressOrCrossAccountId, true);\n  },\n  crossAccountIdUncapitalized: (addressOrCrossAccountId) => {\n    const crossAccountId = guessAddressAndExtractCrossAccountIdUnsafe(addressOrCrossAccountId);\n    return crossAccountId.Substrate ? { substrate: crossAccountId.Substrate } : { ethereum: crossAccountId.Ethereum };\n  },\n  crossAccountIdUncapitalizedSafe: (addressOrCrossAccountId) => {\n    try {\n      return extract.crossAccountIdUncapitalized(addressOrCrossAccountId);\n    } catch {\n      return null;\n    }\n  },\n  crossAccountIdUncapitalizedNormalized: (addressOrCrossAccountId) => {\n    const crossAccountId = guessAddressAndExtractCrossAccountIdUnsafe(addressOrCrossAccountId, true);\n    return crossAccountId.Substrate ? { substrate: crossAccountId.Substrate } : { ethereum: crossAccountId.Ethereum };\n  },\n  crossAccountIdUncapitalizedNormalizedSafe: (addressOrCrossAccountId) => {\n    try {\n      return extract.crossAccountIdUncapitalizedNormalized(addressOrCrossAccountId);\n    } catch {\n      return null;\n    }\n  },\n  substrateOrMirrorIfEthereum: (addressOrCrossAccountId) => {\n    return substrateOrMirrorIfEthereum(addressOrCrossAccountId);\n  },\n  substrateOrMirrorIfEthereumSafe: (addressOrCrossAccountId) => {\n    try {\n      return substrateOrMirrorIfEthereum(addressOrCrossAccountId);\n    } catch {\n      return null;\n    }\n  },\n  substrateOrMirrorIfEthereumNormalized: (addressOrCrossAccountId) => {\n    return substrateOrMirrorIfEthereum(addressOrCrossAccountId, true);\n  },\n  substrateOrMirrorIfEthereumNormalizedSafe: (addressOrCrossAccountId) => {\n    try {\n      return substrateOrMirrorIfEthereum(addressOrCrossAccountId, true);\n    } catch {\n      return null;\n    }\n  },\n  substratePublicKey: (addressOrCrossAccountId) => {\n    const crossAccountId = guessAddressAndExtractCrossAccountIdUnsafe(addressOrCrossAccountId);\n    if (!crossAccountId.Substrate) {\n      throw new Error(\"Address is not a substrate address\");\n    }\n    return substrate.decode(crossAccountId.Substrate).hex;\n  },\n  substratePublicKeySafe: (addressOrCrossAccountId) => {\n    try {\n      return extract.substratePublicKey(addressOrCrossAccountId);\n    } catch {\n      return null;\n    }\n  },\n  enhancedCrossAccountId: (addressInAnyForm, ss58Prefix = 42) => {\n    return addressInAnyFormToEnhancedCrossAccountId(addressInAnyForm, ss58Prefix);\n  },\n  enhancedCrossAccountIdSafe: (addressInAnyForm, ss58Prefix = 42) => {\n    try {\n      return addressInAnyFormToEnhancedCrossAccountId(addressInAnyForm, ss58Prefix);\n    } catch {\n      return null;\n    }\n  },\n  ethCrossAccountId: (addressInAnyForm) => {\n    const addressEnhanced = addressInAnyFormToEnhancedCrossAccountId(addressInAnyForm);\n    if (addressEnhanced.Substrate) {\n      return {\n        eth: \"0x0000000000000000000000000000000000000000\",\n        sub: addressEnhanced.substratePublicKey\n      };\n    } else {\n      return {\n        eth: addressEnhanced.address,\n        sub: \"0x00\"\n      };\n    }\n  },\n  ethCrossAccountIdSafe: (addressInAnyForm) => {\n    try {\n      return extract.ethCrossAccountId(addressInAnyForm);\n    } catch {\n      return null;\n    }\n  }\n};\nvar mirror = {\n  substrateToEthereum: addressToEvm,\n  ethereumToSubstrate: evmToAddress\n};\nvar normalize = {\n  substrateAddress: normalizeSubstrateAddress,\n  ethereumAddress: normalizeEthereumAddress\n};\nvar compare = {\n  substrateAddresses: compareSubstrateAddresses,\n  ethereumAddresses: compareEthereumAddresses\n};\nvar substrate = {\n  encode: encodeSubstrateAddress,\n  decode: decodeSubstrateAddress,\n  compare: compareSubstrateAddresses\n};\nvar Address = {\n  constants: constants_exports,\n  algorithms: imports_exports,\n  is,\n  validate,\n  collection,\n  nesting,\n  extract,\n  mirror,\n  normalize,\n  compare,\n  substrate,\n  utils: {\n    DWORDHexString\n  }\n};\n\n// src/index.ts\nvar StringUtils = __toESM(require(\"utf-helpers\"));\n\n// src/Utils/coin.ts\nvar coin_exports = {};\n__reExport(coin_exports, require(\"coin-format\"));\n\n// src/index.ts\nvar {\n  HexString: HexString4,\n  Utf8,\n  Utf16\n} = StringUtils;\nvar HexUtils = StringUtils.HexString;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Address,\n  Coin,\n  CoinUtils,\n  HexString,\n  HexUtils,\n  StringUtils,\n  Utf16,\n  Utf8,\n  constants\n});\n//# sourceMappingURL=index.js.map","export * from '@unique-nft/utils';\n"]}