{"version":3,"sources":["../../../../node_modules/engine.io-parser/build/esm/commons.js","../../../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../../../node_modules/engine.io-parser/build/esm/index.js","../../../../node_modules/@socket.io/component-emitter/index.mjs","../../../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../../../node_modules/engine.io-client/build/esm/util.js","../../../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../../../node_modules/engine.io-client/build/esm/transport.js","../../../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../../../node_modules/engine.io-client/build/esm/transports/polling.js","../../../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../../../node_modules/engine.io-client/build/esm/transports/webtransport.js","../../../../node_modules/engine.io-client/build/esm/transports/index.js","../../../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../../../node_modules/engine.io-client/build/esm/socket.js","../../../../node_modules/engine.io-client/build/esm/index.js","../../../../node_modules/socket.io-client/build/esm/url.js","../../../../node_modules/socket.io-parser/build/esm/index.js","../../../../node_modules/socket.io-parser/build/esm/is-binary.js","../../../../node_modules/socket.io-parser/build/esm/binary.js","../../../../node_modules/socket.io-client/build/esm/on.js","../../../../node_modules/socket.io-client/build/esm/socket.js","../../../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../../../node_modules/socket.io-client/build/esm/manager.js","../../../../node_modules/socket.io-client/build/esm/index.js","../../../../packages/common/types/subscriptions.ts","../../../../packages/sdk/src/sections/subscriptions/socket-client.ts","../../../../packages/sdk/src/sections/subscriptions/subscription.ts","../../../../packages/sdk/src/bundles/subscriptions.ts"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","__name","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decode","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","event","fn","on","callbacks","cb","args","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","TransportError","Error","constructor","reason","description","context","Transport","writable","query","socket","onError","emitReserved","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","alphabet","map","seed","prev","num","floor","yeast","now","Date","value","XMLHttpRequest","hasCORS","XHR","xdomain","concat","empty","hasXHR2","responseType","Polling","polling","location","isSSL","xd","forceBase64","withCredentials","cookieJar","createCookieJar","name","poll","total","once","doPoll","doWrite","uri","timestampRequests","timestampParam","sid","b64","request","assign","Request","req","method","xhrStatus","pollXhr","undefined","_a","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","e","document","index","requestsCount","requests","err","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent","nextTick","Promise","resolve","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","WT","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","splice","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","removeAllListeners","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","removeListener","off","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","cleanupAndClose","waitForUpgrade","removeEventListener","filteredUpgrades","url","loc","test","href","esm_exports","__export","Decoder","Encoder","PacketType","withNativeFile","File","hasBinary","toJSON","isArray","arguments","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","replacer","EVENT","ACK","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","encodeAsString","stringify","deconstruction","unshift","isObject","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","subDestroy","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","emit","apply","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listeners","listener","sent","emitBuffered","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","sameNamespace","newConnection","forceNew","multiplex","Rooms","SubscriptionEvents","BalanceMethods","SocketClient","subscribeBlocks","filter","unsubscribeBlocks","subscribeExtrinsics","unsubscribeExtrinsics","subscribeEvents","unsubscribeEvents","subscribeCollection","unsubscribeCollection","subscribeContract","unsubscribeContract","subscribeBalances","unsubscribeBalances","subscribeAccountCurrentBalance","unsubscribeAccountCurrentBalance","Subscription","namespace","getDefaultSocketOptions","URL","baseUrl","origin","pathname","restOptions","subscriptions_default","SubscriptionClient"],"mappings":"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","sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","export enum Rooms {\n  SYSTEM = 'system',\n  BLOCKS = 'blocks',\n  EXTRINSICS = 'extrinsics',\n  COLLECTION = 'collection',\n  CONTRACT = 'contract',\n  EVENTS = 'events',\n  BALANCE = 'balance',\n  ACCOUNT_CURRENT_BALANCE = 'account-current-balance',\n}\n\nexport enum SubscriptionEvents {\n  SYSTEM = 'system',\n  BLOCKS = 'blocks',\n  EXTRINSICS = 'extrinsics',\n  EVENTS = 'events',\n  CONTRACT_LOGS = 'contract-logs',\n  COLLECTIONS = 'collections',\n  HAS_NEXT = 'has-next',\n  BALANCES = 'balances',\n  ACCOUNT_CURRENT_BALANCE = 'account-current-balance',\n  SUBSCRIBE_STATE = 'subscribe-state',\n}\n\nexport interface Room {\n  name: Rooms;\n  data: {\n    [key: string]: string;\n  };\n}\n\nexport interface BlockFilter {\n  fromBlock?: number;\n}\n\nexport interface ExtrinsicFilter extends BlockFilter {\n  signer?: string | '*';\n}\n\nexport interface CollectionFilter extends ExtrinsicFilter {\n  collectionId?: number | '*';\n}\n\nexport interface BalancesFilter extends ExtrinsicFilter {\n  address?: string | '*';\n}\n\nexport interface AccountCurrentBalanceFilter {\n  address?: string | '*';\n}\n\nexport interface ContractFilter extends ExtrinsicFilter {\n  address?: string | '*';\n}\n\nexport interface EventsFilter extends ExtrinsicFilter {\n  section?: string | '*';\n  method?: string | '*';\n}\n\nexport interface ContractLog {\n  address: string;\n  topics: Array<any>;\n  data: string;\n}\n\nexport enum BalanceMethods {\n  WITHDRAW = 'Withdraw',\n  TRANSFER = 'Transfer',\n  DEPOSIT = 'Deposit',\n\n  DUST_LOST = 'DustLost',\n  ENDOWED = 'Endowed',\n  LOCKED = 'Locked',\n  UNLOCKED = 'Unlocked',\n  RESERVED = 'Reserved',\n}\n\nexport interface BalancesParsedData {\n  method: BalanceMethods;\n  from?: string;\n  to?: string;\n  amount: string;\n}\n","import type { Socket } from 'socket.io-client';\nimport {\n  BalancesFilter,\n  BlockFilter,\n  CollectionFilter,\n  ContractFilter,\n  SubscriptionEvents,\n  EventsFilter,\n  ExtrinsicFilter,\n  Room,\n  AccountCurrentBalanceFilter,\n} from '@unique-nft/common/types/subscriptions';\nimport {\n  AccountCurrentBalanceData,\n  BalancesData,\n  BlockData,\n  CollectionData,\n  ContractLogData,\n  EventData,\n  ExtrinsicData,\n  HasNextData,\n  SubscribeStateData,\n} from '../../types';\n\nexport { SubscriptionEvents } from '@unique-nft/common/types/subscriptions';\n\nexport class SocketClient {\n  constructor(public readonly socket: Socket) {}\n\n  on(\n    event: SubscriptionEvents.SYSTEM,\n    listener: (room: Room, data: any) => void,\n  );\n  on(\n    event: SubscriptionEvents.BLOCKS,\n    listener: (room: Room, data: BlockData) => void,\n  );\n  on(\n    event: SubscriptionEvents.EXTRINSICS,\n    listener: (room: Room, data: ExtrinsicData) => void,\n  );\n  on(\n    event: SubscriptionEvents.EVENTS,\n    listener: (room: Room, data: EventData) => void,\n  );\n  on(\n    event: SubscriptionEvents.COLLECTIONS,\n    listener: (room: Room, data: CollectionData) => void,\n  );\n  on(\n    event: SubscriptionEvents.CONTRACT_LOGS,\n    listener: (room: Room, data: ContractLogData) => void,\n  );\n  on(\n    event: SubscriptionEvents.BALANCES,\n    listener: (room: Room, data: BalancesData) => void,\n  );\n  on(\n    event: SubscriptionEvents.ACCOUNT_CURRENT_BALANCE,\n    listener: (room: Room, data: AccountCurrentBalanceData) => void,\n  );\n  on(\n    event: SubscriptionEvents.SUBSCRIBE_STATE,\n    listener: (room: Room, data: SubscribeStateData) => void,\n  );\n  on(\n    event: SubscriptionEvents.HAS_NEXT,\n    listener: (room: Room, data: HasNextData) => void,\n  );\n  on(event: string, listener) {\n    this.socket.on(event, listener);\n  }\n\n  subscribeBlocks(filter?: BlockFilter) {\n    this.socket.emit('subscribe:blocks', filter);\n    return this;\n  }\n\n  unsubscribeBlocks(filter?: BlockFilter) {\n    this.socket.emit('unsubscribe:blocks', filter);\n    return this;\n  }\n\n  subscribeExtrinsics(filter?: ExtrinsicFilter) {\n    this.socket.emit('subscribe:extrinsics', filter);\n    return this;\n  }\n\n  unsubscribeExtrinsics(filter?: ExtrinsicFilter) {\n    this.socket.emit('unsubscribe:extrinsics', filter);\n    return this;\n  }\n\n  subscribeEvents(filter?: EventsFilter) {\n    this.socket.emit('subscribe:events', filter);\n    return this;\n  }\n\n  unsubscribeEvents(filter?: EventsFilter) {\n    this.socket.emit('unsubscribe:events', filter);\n    return this;\n  }\n\n  subscribeCollection(filter?: CollectionFilter) {\n    this.socket.emit('subscribe:collections', filter);\n    return this;\n  }\n\n  unsubscribeCollection(filter?: CollectionFilter) {\n    this.socket.emit('unsubscribe:collections', filter);\n    return this;\n  }\n\n  subscribeContract(filter?: ContractFilter) {\n    this.socket.emit('subscribe:contracts', filter);\n    return this;\n  }\n\n  unsubscribeContract(filter?: ContractFilter) {\n    this.socket.emit('unsubscribe:contracts', filter);\n    return this;\n  }\n\n  subscribeBalances(filter?: BalancesFilter) {\n    this.socket.emit('subscribe:balances', filter);\n    return this;\n  }\n\n  unsubscribeBalances(filter?: BalancesFilter) {\n    this.socket.emit('unsubscribe:balances', filter);\n    return this;\n  }\n\n  subscribeAccountCurrentBalance(filter?: AccountCurrentBalanceFilter) {\n    this.socket.emit('subscribe:account:current:balance', filter);\n    return this;\n  }\n\n  unsubscribeAccountCurrentBalance(filter?: AccountCurrentBalanceFilter) {\n    this.socket.emit('unsubscribe:account:current:balance', filter);\n    return this;\n  }\n}\n","import { io } from 'socket.io-client';\nimport { Options, SubscriptionConnectOptions } from '../../types';\nimport { SocketClient } from './socket-client';\n\nexport class Subscription {\n  readonly options: Options;\n\n  readonly namespace = '/v1';\n\n  constructor({ options }: { options: Options }) {\n    this.options = options;\n  }\n\n  getDefaultSocketOptions(): SubscriptionConnectOptions {\n    const url = new URL(this.options.baseUrl);\n\n    const uri = `${url.origin}${this.namespace}`;\n    const path = url.pathname.replace('/v1', '/socket.io');\n\n    return {\n      uri,\n      path,\n      reconnection: true,\n      autoConnect: true,\n      transports: ['websocket'],\n    };\n  }\n\n  public connect(options?: SubscriptionConnectOptions): SocketClient {\n    const { uri, ...restOptions } = {\n      ...options,\n      ...this.getDefaultSocketOptions(),\n    };\n\n    const socket = io(uri, restOptions);\n\n    return new SocketClient(socket);\n  }\n}\n","import { Subscription as SubscriptionClient } from '../sections/subscriptions/subscription';\n\nexport default SubscriptionClient;\n"]}