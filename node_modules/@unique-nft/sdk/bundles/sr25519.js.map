{"version":3,"sources":["../../../../node_modules/base-x/src/index.js","../../../../node_modules/@noble/hashes/esm/_assert.js","../../../../node_modules/@noble/hashes/esm/_u64.js","../../../../node_modules/@noble/hashes/esm/crypto.js","../../../../node_modules/@noble/hashes/esm/utils.js","../../../../node_modules/@noble/hashes/esm/sha3.js","../../../../node_modules/@noble/hashes/esm/_md.js","../../../../node_modules/@noble/hashes/esm/sha512.js","../../../../node_modules/@noble/hashes/esm/_blake.js","../../../../node_modules/@noble/hashes/esm/blake2b.js","../../../../node_modules/@noble/hashes/esm/sha256.js","../../../../node_modules/@noble/hashes/esm/hmac.js","../../../../node_modules/@noble/hashes/esm/pbkdf2.js","../../../../node_modules/@unique-nft/sr25519/src/address.ts","../../../../node_modules/@unique-nft/sr25519/src/external/strobe.ts","../../../../node_modules/@unique-nft/sr25519/src/external/merlin.ts","../../../../node_modules/@unique-nft/sr25519/src/scalar.ts","../../../../node_modules/@unique-nft/sr25519/src/fieldElement.ts","../../../../node_modules/@unique-nft/sr25519/src/projectivePoint.ts","../../../../node_modules/@unique-nft/sr25519/src/completedPoint.ts","../../../../node_modules/@unique-nft/sr25519/src/affineNielsPoint.ts","../../../../node_modules/@unique-nft/sr25519/src/projectiveNielsPoint.ts","../../../../node_modules/@unique-nft/sr25519/src/edwardsPoint.ts","../../../../node_modules/@unique-nft/sr25519/src/nafLookupTable.ts","../../../../node_modules/@unique-nft/sr25519/src/edwardsBasepointTable.ts","../../../../node_modules/@unique-nft/sr25519/src/tables.ts","../../../../node_modules/@unique-nft/sr25519/src/ristretto.ts","../../../../node_modules/@unique-nft/sr25519/src/signingContext.ts","../../../../node_modules/@unique-nft/sr25519/translated/mnemonic/bytes.ts","../../../../node_modules/@unique-nft/sr25519/translated/mnemonic/mnemonic.ts","../../../../node_modules/@unique-nft/sr25519/translated/templateLiteralFunctions.ts","../../../../node_modules/@unique-nft/sr25519/translated/merlin/strobe128.ts","../../../../node_modules/@unique-nft/sr25519/translated/merlin/constants.ts","../../../../node_modules/@unique-nft/sr25519/translated/merlin/transcript.ts","../../../../node_modules/@unique-nft/sr25519/translated/mnemonic/uri.ts","../../../../node_modules/@unique-nft/sr25519/src/keypair.ts","../../../../node_modules/@unique-nft/sr25519/src/index.ts"],"names":["require_src","__commonJSMin","exports","module","base","ALPHABET","length","TypeError","BASE_MAP","Uint8Array","j","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","encode","source","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray","from","zeroes","pbegin","pend","size","b58","carry","it1","Error","it2","str","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","string","number","n","Number","isSafeInteger","isBytes","a","constructor","name","bytes","b","lengths","includes","hash","h","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","U32_MASK64","BigInt","_32n","fromBig","le","l","split","lst","Ah","Uint32Array","Al","toBig","__name","shrSH","_l","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","u64_default","crypto","globalThis","undefined","u32","arr","floor","createView","DataView","rotr","word","shift","isLE","byteSwap","byteSwapIfBE","byteSwap32","nextTick","asyncLoop","iters","tick","cb","ts","Date","now","diff","utf8ToBytes","TextEncoder","toBytes","data","abytes","Hash","clone","_cloneInto","toStr","toString","checkOpts","defaults","opts","call","Object","assign","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","wrapConstructorWithOpts","wrapXOFConstructorWithOpts","randomBytes","bytesLength","getRandomValues","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","y","push","t","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","fill","Keccak","suffix","enableXOF","pos","posOut","state","state32","keccak","len","take","finish","writeInto","bufferOut","set","subarray","xofInto","xof","digestInto","destroy","to","gen","sha3_224","sha3_256","sha3_384","sha3_512","keccak_224","keccak_256","keccak_384","keccak_512","genShake","dkLen","shake128","shake256","setBigUint64","view","value","_u32_max","wh","wl","setUint32","Chi","c","Maj","HashMD","padOffset","dataView","process","roundClean","oview","outLen","get","res","slice","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","offset","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","SIGMA","BLAKE","keyLen","saltLen","persLen","key","salt","personalization","buffer32","buf","compress","dataOffset","data32","pos32","out32","forEach","v","B2B_IV","BBUF","G1b","d","Xl","Xh","ll","G2b","BLAKE2b","v0l","v0h","v1l","v1h","v2l","v2h","v3l","v3h","v4l","v4h","v5l","v5h","v6l","v6h","v7l","v7h","keyLength","pers","isLast","blake2b","SHA256_K","SHA256_IV","SHA256_W","SHA256","A","C","D","E","F","G","H","W15","W2","s0","s1","sigma1","T1","T2","sha256","HMAC","_key","assertHash","iHash","pad","oHash","assertExists","assertBytes","getPrototypeOf","hmac","message","pbkdf2Init","_password","_salt","_opts","asyncTick","assertNumber","password","DK","PRF","PRFSalt","pbkdf2Output","prfW","u","pbkdf2","ti","Ti","setInt32","ui","pbkdf2Async","import_base_x","keccakF1600","operationToFlagMap","textEncoder","Strobe","_Strobe","__publicField","description","duplexRate","f","first","operateBytes","pptr","flags","startIndex","count","cbefore","cafter","forceF","newData","meta","dataConst","starIndex","more","cAfter","cBefore","processed","failures","oldBegin","additionalData","cleartext","startIdex","outputLength","mac","r","plaintext","getBytesU32","num","TranscriptRngBuilder","strobe","label","witness","rng","newStrobe","Transcript","_Transcript","error","expectedOutput","ed","result","sz","nonceSeeds","ns","nonce_seeds","br","dest_len","dest","RandomGenerator","data_len","LFACTOR","L","RR","U64size","Tuple2","AsU8bn","ScalarBigintToBytesForm","scalar","ScalarBytesToBigintForm","dt","mask","topMask","WrappingSub","ScalarSub","difference","borrow","underflowMask","ScalarAdd","sum","ScalarMul","ab","MontgomeryReduce","MulInternal","_m","_part1","p","_part2","w","limbs","n0","n1","n2","n3","n4","r0","r1","r2","r3","r4","z","MontgomeryMul","FromBytesWide","words","lo","hi","readUint8ArrayIntoBigIntArray","bigInts","Scalar","_Scalar","tt1","high","naf","decoded_xU64","xU64","width","windowMask","u64_idx","bit_idx","bit_buf","window","LOW_51_BIT_MASK","uint8ArrayToBigIntLE","input","WrappedRes","pow22501","fe","t0","t1","t2","t3","t4","t5","t7","t9","t13","t15","t19","pr","powP58","e","t20","FieldElement","_FieldElement","b1","b2","v3","v7","check","SQRT_M1","correct_sign_sqrt","flipped_sign_sqrt","flipped_sign_sqrt_i","r_prime","was_nonzero_square","choice","nself","other","k","a3_19","a4_19","c0","c1","c2","c3","c4","second","b1_19","b2_19","b3_19","b4_19","element","square","q","low_51_bit_mask","ProjectivePoint","_ProjectivePoint","XX","YY","ZZ2","X_plus_Y_sq","YY_plus_XX","YY_minus_XX","CompletedPoint","EdwardsPoint","AffineNielsPoint","_AffineNielsPoint","Y_plus_X","Y_minus_X","XY2d","array","param","ProjectiveNielsPoint","_ProjectiveNielsPoint","aa","EDWARDS_D2","EDWARDS_D","_EdwardsPoint","ep","one","ss","u1","u2","u2_sqr","I","Dx","Dy","x_neg","point","PP","MM","TT2d","ZZ","cp","Txy2d","Z2","PM","MP","xy2d","NafLookupTable5PNP","NafLookupTable","lookupTable","points","Ai","A2","nlt","EdwardsBasepointTable","lt","sclr","P","_LookupTable","table","xmask","xabs","neg_mask","LookupTable","oddMultiplesAffinePointsInStringRadix36Form","ed25519BasepointLookupTablesInStringRadix36Form","AFFINE_ODD_MULTIPLES_OF_BASEPOINT","ED25519_BASEPOINT_TABLE_INNER","INVSQRT_A_MINUS_D","CompressedRistretto","_CompressedRistretto","compressedRistretto","RistrettoBasepointTable","RistrettoPoint","_RistrettoPoint","compressed","aNaf","bNaf","ind","tableA","tableB","i1","X","Y","Z","T","inv","i2","zInv","denInv","iX","iY","ristretto_magic","enchanted_denominator","rotate","s_is_negative","isUint8ArrayEqual","SecretKey","_SecretKey","secretKey","nonce","miniSecret","publicKey","PublicKey","signingContext","SigningContext085","st","SigningTranscript","sc","Signature","_PublicKey","signatureBytes","signingTranscript","signature","negA","_Signature","lower","upper","S","compressedRistrettoBytes","scalarBytes","mergedArray","context","dst","toTwos","DEFAULT_OPTS","bigIntToUint8Array","options","bitLength","isLe","isNegative","REGEX_HEX_PREFIXED","isHex","ignoreLength","uInt8ArrayToHex","byte","hexStringToUint8Array","pairs","u8aConcatStrict","u8as","maxU8","maxU16","maxU32","bl16","bl32","compactToU8a","bn","u8a","compactAddLength","INVALID_MNEMONIC","INVALID_ENTROPY","INVALID_CHECKSUM","DEFAULT_WORDLIST","WORDS_MAP","acc","elem","index","sha256FirstNBits","entropy","mnemonicToEntropy","mnemonic","bits","dividerIndex","entropyBits","checksumBits","entropyBytes","bin","entropyToMnemonic","wordNumbers","binary","WORDLIST","wordNumber","generateMnemonic","strengthInBits","validateMnemonic","mnemonicToEntropyAndSalt","validationResult","mnemonicToMiniSecretAsync","mnemonicToMiniSecret","tmpl","values","STROBE_R","FLAG_I","FLAG_A","FLAG_C","FLAG_T","FLAG_M","FLAG_K","Strobe128","_Strobe128","protocol_label","initial_state","old_begin","MERLIN_PROTOCOL_LABEL","encode_u64","encode_usize_as_u32","scalar_bytes","witness_len","generateRandomBytes32","TranscriptRng","DEFAULT_MNEMONIC","REGEX_DIGITS_ONLY","parseUri","uri","derivations","beforePassword","hardSeparatedParts","mnemonicParts","getChainCode","part","softSeparatedParts","hard","chainCode","deriveHard","keypair","transcript","msk","chaincode_2","Keypair","deriveSoft","derivedSecretKeyKey","derivedSecretKey","processDerivations","cc","parseUriAndDerive","parseUriAndDeriveAsync","_Keypair","secretKeyBytes","BASE58_ALPHABET","BASE64_ALPHABET","base58","basex","base64","SS58_PREFIX","sshash","encodeSubstrateAddress","ss58Format","allowedDecodedLengths","u8aPrefix","checkAddressChecksum","decoded","ignoreChecksum","ss58Length","ss58Decoded","isPublicKey","isValid","decodeSubstrateAddress","address","realError","allowedEncodedLengths","endPos","anyToU8a","u8aOrHexToU8a","getAccountFromKeypair","prefix","payload","verifySignature","signerAddressOrPublicKey","publicKeyBytes","dangerouslyParseUriAndGetFullKeypair","Sr25519Account","Account"],"mappings":"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","sourcesContent":["'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, isLE, byteSwap32, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","import { number, exists, output } from './_assert.js';\nimport { Hash, toBytes, u32, isLE, byteSwap32, byteSwapIfBE } from './utils.js';\n// Blake is based on ChaCha permutation.\n// For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n// prettier-ignore\nexport const SIGMA = /* @__PURE__ */ new Uint8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n]);\nexport class BLAKE extends Hash {\n    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.length = 0;\n        this.pos = 0;\n        this.finished = false;\n        this.destroyed = false;\n        number(blockLen);\n        number(outputLen);\n        number(keyLen);\n        if (outputLen < 0 || outputLen > keyLen)\n            throw new Error('outputLen bigger than keyLen');\n        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))\n            throw new Error(`key must be up 1..${keyLen} byte long or undefined`);\n        if (opts.salt !== undefined && opts.salt.length !== saltLen)\n            throw new Error(`salt must be ${saltLen} byte long or undefined`);\n        if (opts.personalization !== undefined && opts.personalization.length !== persLen)\n            throw new Error(`personalization must be ${persLen} byte long or undefined`);\n        this.buffer32 = u32((this.buffer = new Uint8Array(blockLen)));\n    }\n    update(data) {\n        exists(this);\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { blockLen, buffer, buffer32 } = this;\n        data = toBytes(data);\n        const len = data.length;\n        const offset = data.byteOffset;\n        const buf = data.buffer;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                if (!isLE)\n                    byteSwap32(buffer32);\n                this.compress(buffer32, 0, false);\n                if (!isLE)\n                    byteSwap32(buffer32);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = offset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(buf, dataOffset, Math.floor((len - pos) / 4));\n                if (!isLE)\n                    byteSwap32(data32);\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                if (!isLE)\n                    byteSwap32(data32);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        const { pos, buffer32 } = this;\n        this.finished = true;\n        // Padding\n        this.buffer.subarray(pos).fill(0);\n        if (!isLE)\n            byteSwap32(buffer32);\n        this.compress(buffer32, 0, true);\n        if (!isLE)\n            byteSwap32(buffer32);\n        const out32 = u32(out);\n        this.get().forEach((v, i) => (out32[i] = byteSwapIfBE(v)));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.length = length;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.outputLen = outputLen;\n        to.buffer.set(buffer);\n        to.pos = pos;\n        return to;\n    }\n}\n//# sourceMappingURL=_blake.js.map","import { BLAKE, SIGMA } from './_blake.js';\nimport u64 from './_u64.js';\nimport { toBytes, u32, wrapConstructorWithOpts, byteSwapIfBE } from './utils.js';\n// Same as SHA-512 but LE\n// prettier-ignore\nconst B2B_IV = /* @__PURE__ */ new Uint32Array([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n// Temporary buffer\nconst BBUF = /* @__PURE__ */ new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotr32H(Dh, Dl), Dl: u64.rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrSH(Bh, Bl, 24), Bl: u64.rotrSL(Bh, Bl, 24) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nfunction G2b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotrSH(Dh, Dl, 16), Dl: u64.rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrBH(Bh, Bl, 63), Bl: u64.rotrBL(Bh, Bl, 63) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nclass BLAKE2b extends BLAKE {\n    constructor(opts = {}) {\n        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);\n        // Same as SHA-512, but LE\n        this.v0l = B2B_IV[0] | 0;\n        this.v0h = B2B_IV[1] | 0;\n        this.v1l = B2B_IV[2] | 0;\n        this.v1h = B2B_IV[3] | 0;\n        this.v2l = B2B_IV[4] | 0;\n        this.v2h = B2B_IV[5] | 0;\n        this.v3l = B2B_IV[6] | 0;\n        this.v3h = B2B_IV[7] | 0;\n        this.v4l = B2B_IV[8] | 0;\n        this.v4h = B2B_IV[9] | 0;\n        this.v5l = B2B_IV[10] | 0;\n        this.v5h = B2B_IV[11] | 0;\n        this.v6l = B2B_IV[12] | 0;\n        this.v6h = B2B_IV[13] | 0;\n        this.v7l = B2B_IV[14] | 0;\n        this.v7h = B2B_IV[15] | 0;\n        const keyLength = opts.key ? opts.key.length : 0;\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (opts.salt) {\n            const salt = u32(toBytes(opts.salt));\n            this.v4l ^= byteSwapIfBE(salt[0]);\n            this.v4h ^= byteSwapIfBE(salt[1]);\n            this.v5l ^= byteSwapIfBE(salt[2]);\n            this.v5h ^= byteSwapIfBE(salt[3]);\n        }\n        if (opts.personalization) {\n            const pers = u32(toBytes(opts.personalization));\n            this.v6l ^= byteSwapIfBE(pers[0]);\n            this.v6h ^= byteSwapIfBE(pers[1]);\n            this.v7l ^= byteSwapIfBE(pers[2]);\n            this.v7h ^= byteSwapIfBE(pers[3]);\n        }\n        if (opts.key) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(toBytes(opts.key));\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BBUF[i] = v)); // First half from state.\n        BBUF.set(B2B_IV, 16); // Second half from IV.\n        let { h, l } = u64.fromBig(BigInt(this.length));\n        BBUF[24] = B2B_IV[8] ^ l; // Low word of the offset.\n        BBUF[25] = B2B_IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BBUF[28] = ~BBUF[28];\n            BBUF[29] = ~BBUF[29];\n        }\n        let j = 0;\n        const s = SIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BBUF[0] ^ BBUF[16];\n        this.v0h ^= BBUF[1] ^ BBUF[17];\n        this.v1l ^= BBUF[2] ^ BBUF[18];\n        this.v1h ^= BBUF[3] ^ BBUF[19];\n        this.v2l ^= BBUF[4] ^ BBUF[20];\n        this.v2h ^= BBUF[5] ^ BBUF[21];\n        this.v3l ^= BBUF[6] ^ BBUF[22];\n        this.v3h ^= BBUF[7] ^ BBUF[23];\n        this.v4l ^= BBUF[8] ^ BBUF[24];\n        this.v4h ^= BBUF[9] ^ BBUF[25];\n        this.v5l ^= BBUF[10] ^ BBUF[26];\n        this.v5h ^= BBUF[11] ^ BBUF[27];\n        this.v6l ^= BBUF[12] ^ BBUF[28];\n        this.v6h ^= BBUF[13] ^ BBUF[29];\n        this.v7l ^= BBUF[14] ^ BBUF[30];\n        this.v7h ^= BBUF[15] ^ BBUF[31];\n        BBUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer32.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * BLAKE2b - optimized for 64-bit platforms. JS doesn't have uint64, so it's slower than BLAKE2s.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, salt, personalization\n */\nexport const blake2b = /* @__PURE__ */ wrapConstructorWithOpts((opts) => new BLAKE2b(opts));\n//# sourceMappingURL=blake2b.js.map","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    assertHash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    assertNumber(c);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = toBytes(_password);\n    const salt = toBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map","import {hexStringToUint8Array, isHex, u8aConcatStrict} from '../translated/mnemonic/bytes'\nimport {blake2b} from '@noble/hashes/blake2b'\n\nimport basex from 'base-x'\n\nconst BASE58_ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\nconst BASE64_ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\nexport const base58 = basex(BASE58_ALPHABET)\nexport const base64 = basex(BASE64_ALPHABET)\n\n// strToU8a('SS58PRE')\nconst SS58_PREFIX = new Uint8Array([83, 83, 53, 56, 80, 82, 69])\n\nconst sshash = (data: Uint8Array): Uint8Array => {\n  return blake2b(u8aConcatStrict([SS58_PREFIX, data]), {dkLen: 64})\n}\n\nexport const encodeSubstrateAddress = (key: Uint8Array, ss58Format: number = 42): string => {\n  if (ss58Format < 0 || ss58Format > 16383 || [46, 47].includes(ss58Format)) {\n    throw new Error(`ss58Format is not valid, received ${typeof ss58Format} \"${ss58Format}\"`)\n  }\n\n  const allowedDecodedLengths = [1, 2, 4, 8, 32, 33]\n  if (!allowedDecodedLengths.includes(key.length)) {\n    throw new Error(`key length is not valid, received ${key.length}, valid values are ${allowedDecodedLengths.join(', ')}`)\n  }\n\n  const u8aPrefix = ss58Format < 64\n    ? new Uint8Array([ss58Format])\n    : new Uint8Array([\n      ((ss58Format & 0xfc) >> 2) | 0x40,\n      (ss58Format >> 8) | ((ss58Format & 0x03) << 6),\n    ])\n\n  const input = u8aConcatStrict([u8aPrefix, key])\n\n  return base58.encode(\n    u8aConcatStrict([\n      input,\n      sshash(input).subarray(0, [32, 33].includes(key.length) ? 2 : 1),\n    ]),\n  )\n}\n\nconst checkAddressChecksum = (decoded: Uint8Array, ignoreChecksum: boolean = false): [boolean, number, number, number] => {\n  const ss58Length = ((decoded[0] & 0b0100_0000) !== 0) ? 2 : 1\n  const ss58Decoded = ss58Length === 1\n    ? decoded[0]\n    : ((decoded[0] & 0x3f) << 2) | (decoded[1] >> 6) | ((decoded[1] & 0x3f) << 8)\n\n  // 32/33 bytes public + 2 bytes checksum + prefix\n  const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length)\n  const length = decoded.length - (isPublicKey ? 2 : 1)\n\n  let isValid = false\n\n  if (!ignoreChecksum) {\n    // calculate the hash and do the checksum byte checks\n    const hash = sshash(decoded.subarray(0, length))\n    isValid = (decoded[0] & 0x80) === 0 && ![46, 47].includes(decoded[0]) && (\n      isPublicKey\n        ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1]\n        : decoded[decoded.length - 1] === hash[0]\n    )\n  }\n\n  return [isValid, length, ss58Length, ss58Decoded]\n}\n\nexport function decodeSubstrateAddress(address: string, ignoreChecksum?: boolean, ss58Format: number = -1): Uint8Array {\n  let realError: Error | null = null\n\n  try {\n    if (isHex(address)) {\n      return hexStringToUint8Array(address)\n    }\n\n    const decoded = base58.decode(address)\n\n    const allowedEncodedLengths = [3, 4, 6, 10, 35, 36, 37, 38]\n\n    if (!allowedEncodedLengths.includes(decoded.length)) {\n      realError = new Error(`key length is not valid, decoded key length is ${decoded.length}, valid values are ${allowedEncodedLengths.join(', ')}`)\n      throw realError\n    }\n\n    const [isValid, endPos, ss58Length, ss58Decoded] = checkAddressChecksum(decoded, ignoreChecksum)\n\n    if (!ignoreChecksum && !isValid) {\n      realError = new Error('Invalid decoded address checksum')\n      throw realError\n    }\n    if (![-1, ss58Decoded].includes(ss58Format)) {\n      realError = new Error(`Expected ss58Format ${ss58Format}, received ${ss58Decoded}`)\n      throw realError\n    }\n\n    return decoded.slice(ss58Length, endPos)\n  } catch (error) {\n    throw (realError != null)\n      ? realError\n      : new Error(`Decoding ${address}: ${(error as Error).message}`)\n  }\n}\n","// import * as sha3 from '@noble/hashes/sha3'\n// import * as sha3Addons from '@noble/hashes/sha3-addons'\n// import * as keccak_f1800 from './keccak'\nimport {keccakP} from '@noble/hashes/sha3'\nconst keccakF1600 = (state: Uint8Array) => {\n  keccakP(new Uint32Array(state.buffer, state.byteOffset, Math.floor(state.byteLength / 4)), 24)\n}\n\n/// <summary>\n/// Srobe operation\n/// </summary>\nexport enum Operation {\n  /// <summary>\n  /// AD operation\n  /// </summary>\n  Ad,\n\n  /// <summary>\n  /// Key operation\n  /// </summary>\n  Key,\n\n  /// <summary>\n  /// PRF operation\n  /// </summary>\n  Prf,\n\n  /// <summary>\n  /// Send cleartext operation\n  /// </summary>\n  SendClr,\n\n  /// <summary>\n  /// Receive cleartext operation\n  /// </summary>\n  RecvClr,\n\n  /// <summary>\n  /// Send encrypted operation\n  /// </summary>\n  SendEnc,\n\n  /// <summary>\n  /// Receive encrepted operation\n  /// </summary>\n  RecvEnc,\n\n  /// <summary>\n  /// Send MAC operation\n  /// </summary>\n  SendMac,\n\n  /// <summary>\n  /// Receive MAC operation\n  /// </summary>\n  RecvMac,\n\n  /// <summary>\n  /// Ratchet (rekey) operation\n  /// </summary>\n  Ratchet,\n}\n\nexport enum Flag {\n  FlagI = 1,\n\n  FlagA = 2,\n\n  FlagC = 4,\n\n  FlagT = 8,\n\n  FlagM = 16,\n\n  FlagK = 32,\n}\n\nenum Role {\n  /// <summary>\n  /// Set if we send the first transport message\n  /// </summary>\n  Initiator = 0,\n\n  /// <summary>\n  /// Set if we receive the first transport message\n  /// </summary>\n  Responder = 1,\n\n  /// <summary>\n  /// starting value\n  /// </summary>\n  None = 2,\n}\n\n// export const operationMap = new Map<Operation, Flag>()\n\nexport const operationToFlagMap: Record<Operation, Flag> = {\n  [Operation.Ad]: Flag.FlagA,\n  [Operation.Key]: Flag.FlagA | Flag.FlagC,\n  [Operation.Prf]: Flag.FlagI | Flag.FlagA | Flag.FlagC,\n  [Operation.SendClr]: Flag.FlagA | Flag.FlagT,\n  [Operation.RecvClr]: Flag.FlagI | Flag.FlagA | Flag.FlagT,\n  [Operation.SendEnc]: Flag.FlagA | Flag.FlagC | Flag.FlagT,\n  [Operation.RecvEnc]: Flag.FlagI | Flag.FlagA | Flag.FlagC | Flag.FlagT,\n  [Operation.SendMac]: Flag.FlagC | Flag.FlagT,\n  [Operation.RecvMac]: Flag.FlagI | Flag.FlagC | Flag.FlagT,\n  [Operation.Ratchet]: Flag.FlagC,\n}\n\n// const CAPACITY_BITS = 128\n// const PAD_BYTES = 2\n// const RATE_INNER = 25 * 32 - CAPACITY_BITS / 8\n// const RATE = RATE_INNER - PAD_BYTES\n\nconst textEncoder = new TextEncoder()\n\nexport class Strobe {\n  public state: Uint8Array\n  public initialized: boolean\n  public pos: number\n  public posBegin: number\n  public strobeR: number\n  public curFlags: Flag\n  public i0: Role\n\n  /// <summary>\n  /// The size of the authentication tag used in AEAD functions\n  /// </summary>\n  private readonly MacLen = 16\n\n  strobe_init(\n    description: string,\n    // desclen: number\n  ): void {\n    // operationMap.set(Operation.Ad, Flag.FlagA)\n    // operationMap.set(Operation.Key, Flag.FlagA | Flag.FlagC)\n    // operationMap.set(Operation.Prf, Flag.FlagI | Flag.FlagA | Flag.FlagC)\n    // operationMap.set(Operation.SendClr, Flag.FlagA | Flag.FlagT)\n    // operationMap.set(Operation.RecvClr, Flag.FlagI | Flag.FlagA | Flag.FlagT)\n    // operationMap.set(Operation.SendEnc, Flag.FlagA | Flag.FlagC | Flag.FlagT)\n    // operationMap.set(\n    //   Operation.RecvEnc,\n    //   Flag.FlagI | Flag.FlagA | Flag.FlagC | Flag.FlagT\n    // )\n    // operationMap.set(Operation.SendMac, Flag.FlagC | Flag.FlagT)\n    // operationMap.set(Operation.RecvMac, Flag.FlagI | Flag.FlagC | Flag.FlagT)\n    // operationMap.set(Operation.Ratchet, Flag.FlagC)\n\n    // /// <summary>\n    // /// Operation - flag map\n    // /// </summary>\n    // enum operationMap\n    // {\n    //     { Operation.RecvMac, Flag.FlagI | Flag.FlagC | Flag.FlagT },\n    //     { Operation.Ratchet, Flag.FlagC }\n    // };\n\n    this.initialized = false\n    const duplexRate = 1600 / 8 - 128 / 4\n    this.strobeR = duplexRate - 2\n\n    const f: Uint8Array = Uint8Array.from([\n      1,\n      this.strobeR + 2,\n      1,\n      0 /* Empty NIST perso string */,\n      1,\n      12 * 8, /* 12 = strlen(\"STROBEvX.Y.Z\") */\n    ])\n\n    const s = new TextEncoder().encode('STROBEv1.0.2')\n    const first = new Uint8Array(f.length + s.length)\n\n    first.set(f)\n    first.set(s, f.length)\n\n    this.posBegin = 0\n    this.pos = 0\n    this.state = new Uint8Array(200)\n\n    this.strobe_duplex(first, 0, first.byteLength, false, false, true)\n    this.initialized = true\n    const operateBytes = textEncoder.encode(description)\n    this.operate(\n      true,\n      operationToFlagMap[Operation.Ad],\n      operateBytes,\n      0,\n      operateBytes.length,\n      0,\n      false,\n    )\n  }\n\n  clone(): Strobe {\n    const s = new Strobe()\n    s.state = Uint8Array.from(this.state)\n    s.initialized = this.initialized\n    s.pos = this.pos\n    s.posBegin = this.posBegin\n    s.strobeR = this.strobeR\n    s.curFlags = this.curFlags\n    s.i0 = this.i0\n\n    return s\n  }\n\n  /* Mark current position and state, and run F.\n   * Should be compatible with CSHAKE.\n   */\n  run_f(): void {\n    if (this.initialized) {\n      this.state[this.pos] ^= this.posBegin\n      this.state[this.pos + 1] ^= 4\n      this.state[this.strobeR + 1] ^= 128\n    }\n\n    keccakF1600(this.state)\n\n    // Keccak.KeccakF1600(ref state, 24);\n    this.posBegin = 0\n    this.pos = 0 // (posBegin = 0);\n  }\n\n  /* Place a \"mark\" in the hash, which is distinct from the effect of writing any byte\n   * into the hash.  Then write the new mode into the hash.\n   */\n  strobe_mark(pptr: Uint8Array, flags: any) {}\n\n  /* The core duplex mode */\n  strobe_duplex(\n    data: Uint8Array,\n    startIndex: number,\n    count: number,\n    cbefore: boolean,\n    cafter: boolean,\n    forceF: boolean,\n  ) {\n    // Copy data\n    const newData = data.slice(startIndex, count)\n\n    for (let i = 0; i < newData.byteLength; i++) {\n      // Process data block by block\n      if (cbefore) {\n        newData[i] ^= this.state[this.pos]\n      }\n\n      this.state[this.pos] ^= newData[i]\n      if (cafter) {\n        newData[i] = this.state[this.pos]\n      }\n\n      this.pos += 1\n      if (this.pos === this.strobeR) {\n        this.run_f()\n      }\n    }\n\n    // sometimes we the next operation to start on a new block\n    if (forceF && this.pos !== 0) {\n      this.run_f()\n    }\n\n    return newData\n  }\n\n  /// <summary>\n  /// Operate runs an operation\n  /// For operations that only require a length, provide the length via the\n  /// length argument. For other operations provide a zero length.\n  /// Result is always retrieved through the return value. For boolean results,\n  /// check that the first index is 0 for true, 1 for false.\n  /// </summary>\n  operate(\n    meta: boolean,\n    flags: Flag,\n    dataConst: Uint8Array,\n    starIndex: number,\n    count: number,\n    length: number,\n    more: boolean,\n  ): Uint8Array | null {\n    // operation is valid?\n    // if (!this.operationMap.TryGetValue(operation, out let flags))\n    // {\n    //     throw new Exception($\"Not a valid operation: [{operation}]\");\n    // }\n\n    // operation is meta?\n    if (meta) {\n      flags |= Flag.FlagM\n    }\n\n    // does the operation requires a length?\n    let data: Uint8Array\n\n    if (\n      (flags & (Flag.FlagI | Flag.FlagT)) !== (Flag.FlagI | Flag.FlagT) &&\n      (flags & (Flag.FlagI | Flag.FlagA)) !== Flag.FlagA\n    ) {\n      if (length === 0) {\n        // throw new Exception(\"A length should be set for this operation\");\n      }\n\n      data = new Uint8Array(length)\n    } else {\n      if (length !== 0) {\n        // throw new Exception(\"Output length must be zero except for PRF, SendMac and RATCHET operations\");\n      }\n\n      data = dataConst\n    }\n\n    if (more) {\n      if (flags !== this.curFlags) {\n        // throw new Exception(\"Flag should be the same when streaming operations\");\n      }\n    } else {\n      this.begin_op(flags)\n      this.curFlags = flags\n    }\n\n    // Operation\n\n    const cAfter =\n      (flags & (Flag.FlagC | Flag.FlagI | Flag.FlagT)) ===\n      (Flag.FlagC | Flag.FlagT)\n    const cBefore = (flags & Flag.FlagC) !== 0 && !cAfter\n\n    // length should be zero for prf only, already checked this before\n    // if len!==0 then just use input count\n    const processed = this.duplex(\n      data,\n      starIndex,\n      length === 0 ? count : length,\n      cBefore,\n      cAfter,\n      false,\n    )\n\n    if ((flags & (Flag.FlagI | Flag.FlagA)) === (Flag.FlagI | Flag.FlagA)) {\n      return processed\n    }\n\n    if ((flags & (Flag.FlagI | Flag.FlagT)) === Flag.FlagT) {\n      // Return data for the transport.\n      return processed\n    }\n\n    if (\n      (flags & (Flag.FlagI | Flag.FlagA | Flag.FlagT)) ===\n      (Flag.FlagI | Flag.FlagT)\n    ) {\n      // Check MAC: all output bytes must be 0\n      if (more) {\n        // throw new Exception(\"not supposed to check a MAC with the 'more' streaming option\");\n      }\n\n      let failures = 0\n      processed.forEach((d) => {\n        failures |= d\n      })\n      // foreach (let dataByte in processed) failures |= dataByte;\n\n      return Uint8Array.from([failures]) // 0 if correct, 1 if not\n    }\n\n    // Operation has no output\n    return null\n  }\n\n  // beginOp: starts an operation\n  begin_op(flags: Flag) {\n    if ((flags & Flag.FlagT) !== 0) {\n      if (this.i0 === Role.None) {\n        this.i0 = flags & Flag.FlagI\n      }\n\n      flags ^= this.i0\n    }\n\n    const oldBegin = this.posBegin\n    this.posBegin = this.pos + 1\n    const forceF = (flags & (Flag.FlagC | Flag.FlagK)) !== 0\n    // let data = new[] { oldBegin, (byte)flags };\n\n    const data: Uint8Array = new Uint8Array(2)\n    data[0] = oldBegin % 255\n    data[1] = flags\n\n    this.duplex(data, 0, data.length, false, false, forceF)\n  }\n\n  duplex(\n    data: Uint8Array,\n    startIndex: number,\n    count: number,\n    cbefore: boolean,\n    cafter: boolean,\n    forceF: boolean,\n  ): Uint8Array {\n    if (cbefore && cafter) {\n      // throw new Exception($\"either {nameof(cbefore)} or {nameof(cafter)} should be set to false\");\n    }\n\n    // Copy data\n    const newData = data.slice()\n\n    for (let i = 0; i < newData.length; i++) {\n      // Process data block by block\n      if (cbefore) {\n        newData[i] ^= this.state[this.pos]\n      }\n\n      this.state[this.pos] ^= newData[i]\n      if (cafter) {\n        newData[i] = this.state[this.pos]\n      }\n\n      this.pos += 1\n      if (this.pos === this.strobeR) {\n        this.run_f()\n      }\n    }\n\n    // sometimes we the next operation to start on a new block\n    if (forceF && this.pos !== 0) {\n      this.run_f()\n    }\n\n    return newData\n  }\n\n  /// <summary>\n  /// Authenticate Additional Data.\n  /// Should be followed by a SendMAc or RecvMac in order to truly work\n  /// </summary>\n  /// <param name=\"meta\">\n  /// Framing data.\n  /// </param>\n  /// <param name=\"additionalData\">\n  /// Data to authenticate\n  /// </param>\n  ad(meta: boolean, additionalData: Uint8Array) {\n    this.ad_f(meta, additionalData, 0, additionalData.length)\n  }\n\n  /// <summary>\n  /// Authenticate Additional Data.\n  /// Should be followed by a SendMAc or RecvMac in order to truly work\n  /// </summary>\n  /// <param name=\"meta\">\n  /// Framing data.\n  /// </param>\n  /// <param name=\"additionalData\">\n  /// Data to authenticate\n  /// </param>\n  /// <param name=\"startIndex\">\n  /// Start index for reading from buffer\n  /// </param>\n  /// <param name=\"count\">\n  /// Number of bytes to read\n  /// </param>\n  ad_f(\n    meta: boolean,\n    additionalData: Uint8Array,\n    startIndex: number,\n    count: number,\n  ) {\n    this.operate(\n      meta,\n      operationToFlagMap[Operation.Ad],\n      additionalData,\n      startIndex,\n      count,\n      0,\n      false,\n    )\n  }\n\n  /// <summary>\n  /// Send data in cleartext\n  /// </summary>\n  /// <param name=\"meta\">\n  /// Framing data.\n  /// </param>\n  /// <param name=\"cleartext\">\n  /// Cleartext to send\n  /// </param>\n  send_clr(meta: boolean, cleartext: Uint8Array): Uint8Array | null {\n    return this.send_clr_f(meta, cleartext, 0, cleartext.length)\n  }\n\n  /// <summary>\n  /// Send data in cleartext\n  /// </summary>\n  /// <param name=\"meta\">\n  /// Framing data.\n  /// </param>\n  /// <param name=\"cleartext\">\n  /// Cleartext to send\n  /// </param>\n  /// <param name=\"startIndex\">\n  /// Start index for reading from buffer\n  /// </param>\n  /// <param name=\"count\">\n  /// Number of bytes to read\n  /// </param>\n  send_clr_f(\n    meta: boolean,\n    cleartext: Uint8Array,\n    startIndex: number,\n    count: number,\n  ): Uint8Array | null {\n    return this.operate(\n      meta,\n      operationToFlagMap[Operation.SendClr],\n      cleartext,\n      startIndex,\n      count,\n      0,\n      false,\n    )\n  }\n\n  /// <summary>\n  /// Receive data in cleartext\n  /// </summary>\n  /// <param name=\"meta\">\n  /// Framing data.\n  /// </param>\n  /// <param name=\"cleartext\">\n  /// Cleartext to send\n  /// </param>\n  recv_clr(meta: boolean, cleartext: Uint8Array): Uint8Array | null {\n    return this.recv_clr_f(meta, cleartext, 0, cleartext.length)\n  }\n\n  /// <summary>\n  /// Receive data in cleartext\n  /// </summary>\n  /// <param name=\"meta\">\n  /// Framing data.\n  /// </param>\n  /// <param name=\"cleartext\">\n  /// Cleartext to send\n  /// </param>\n  /// <param name=\"startIdex\">\n  /// Start index for reading from buffer\n  /// </param>\n  /// <param name=\"count\">\n  /// Number of bytes to read\n  /// </param>\n  recv_clr_f(\n    meta: boolean,\n    cleartext: Uint8Array,\n    startIdex: number,\n    count: number,\n  ): Uint8Array | null {\n    return this.operate(\n      meta,\n      operationToFlagMap[Operation.RecvClr],\n      cleartext,\n      startIdex,\n      count,\n      0,\n      false,\n    )\n  }\n\n  /// <summary>\n  /// Produce an authentication tag.\n  /// </summary>\n  /// <param name=\"meta\">\n  /// Framing data.\n  /// </param>\n  /// <param name=\"outputLength\">\n  /// Expected tag length\n  /// </param>\n  send_mac(meta: boolean, outputLength: number): Uint8Array | null {\n    return this.operate(\n      meta,\n      operationToFlagMap[Operation.SendMac],\n      new Uint8Array(0),\n      0,\n      0,\n      outputLength,\n      false,\n    )\n  }\n\n  /// <summary>\n  /// Verify a received authentication tag.\n  /// </summary>\n  /// <param name=\"meta\">\n  /// Framing data.\n  /// </param>\n  /// <param name=\"mac\">\n  /// Tag to verify\n  /// </param>\n  recv_mac(meta: boolean, mac: Uint8Array): boolean {\n    return this.recv_mac_f(meta, mac, 0, mac.length)\n  }\n\n  /// <summary>\n  /// Verify a received authentication tag.\n  /// </summary>\n  /// <param name=\"meta\">\n  /// Framing data.\n  /// </param>\n  /// <param name=\"mac\">\n  /// Tag to verify\n  /// </param>\n  /// <param name=\"startIndex\">\n  /// Start index for reading from buffer\n  /// </param>\n  /// <param name=\"count\">\n  /// Number of bytes to read\n  /// </param>\n  recv_mac_f(\n    meta: boolean,\n    mac: Uint8Array,\n    startIndex: number,\n    count: number,\n  ): boolean {\n    const r = this.operate(\n      meta,\n      operationToFlagMap[Operation.RecvMac],\n      mac,\n      startIndex,\n      count,\n      0,\n      false,\n    )\n\n    if (r === null) {\n      return false\n    }\n\n    return r[0] === 0\n  }\n\n  /// <summary>\n  /// Introduce forward secrecy in a protocol.\n  /// </summary>\n  /// <param name=\"length\">\n  /// Expected length\n  /// </param>\n  ratchet(length: number) {\n    this.operate(\n      false,\n      operationToFlagMap[Operation.Ratchet],\n      new Uint8Array(0),\n      0,\n      0,\n      length,\n      false,\n    )\n  }\n\n  /// <summary>\n  /// Encrypt plaintext.\n  /// Should be followed by SendMac in order to protect its integrity\n  /// </summary>\n  /// <param name=\"meta\">\n  /// Framing data.\n  /// </param>\n  /// <param name=\"plaintext\">\n  /// Plaintext to be encrypted\n  /// </param>\n  send_enc_unauthenticated(\n    meta: boolean,\n    plaintext: Uint8Array,\n  ): Uint8Array | null {\n    return this.send_enc_unauthenticated_f(meta, plaintext, 0, plaintext.length)\n  }\n\n  /// <summary>\n  /// Encrypt plaintext.\n  /// Should be followed by SendMac in order to protect its integrity\n  /// </summary>\n  /// <param name=\"meta\">\n  /// Framing data.\n  /// </param>\n  /// <param name=\"plaintext\">\n  /// Plaintext to be encrypted\n  /// </param>\n  /// <param name=\"startIndex\">\n  /// Start index for reading from buffer\n  /// </param>\n  /// <param name=\"count\">\n  /// Number of bytes to read\n  /// </param>\n  send_enc_unauthenticated_f(\n    meta: boolean,\n    plaintext: Uint8Array,\n    startIndex: number,\n    count: number,\n  ) {\n    return this.operate(\n      meta,\n      operationToFlagMap[Operation.SendEnc],\n      plaintext,\n      startIndex,\n      count,\n      0,\n      false,\n    )\n  }\n}\n","import {Strobe, Operation, operationToFlagMap} from './strobe'\nimport {RandomGenerator} from '../signingContext'\n\nconst textEncoder = new TextEncoder()\n\nexport function getBytesU32(num: number): Uint8Array {\n  const r = new Uint8Array(4)\n  r[0] = num % 256\n  r[1] = num << 8 % 256\n  r[2] = num << 16 % 256\n  r[3] = num << 24 % 256\n  return r\n}\n\nclass TranscriptRngBuilder {\n  strobe: Transcript\n\n  constructor(strobe: Transcript) {\n    this.strobe = strobe\n  }\n\n  RekeyWithWitnessBytes(\n    label: Uint8Array,\n    witness: Uint8Array,\n  ): TranscriptRngBuilder {\n    this.strobe.MetaAd(label, false)\n    this.strobe.MetaAd(getBytesU32(witness.length), true)\n    this.strobe.Key(witness, false)\n\n    return this\n  }\n\n  Finalize(rng: RandomGenerator): Transcript {\n    // TranscriptRngBuilder\n    const bytes = rng.GetRandomArrayU8_32()\n\n    const newStrobe = this.strobe.Clone()\n    newStrobe.MetaAd(textEncoder.encode('rng'), false)\n    newStrobe.Key(bytes, false)\n\n    return newStrobe\n  }\n}\n\nexport class Transcript {\n  obj: Strobe\n  MERLIN_PROTOCOL_LABEL = 'Merlin v1.0'\n\n  Init(label: string) {\n    // strobe_init();\n    this.obj = new Strobe()\n    this.obj.strobe_init(this.MERLIN_PROTOCOL_LABEL)\n\n    this.AppendMessage(\n      textEncoder.encode('dom-sep'),\n      textEncoder.encode(label),\n    )\n  }\n\n  GetStrobe(): Strobe {\n    return this.obj.clone()\n  }\n\n  Clone(): Transcript {\n    const c = new Transcript()\n    c.obj = this.obj.clone()\n    return c\n  }\n\n  AppendMessage(label: Uint8Array, message: Uint8Array) {\n    this.MetaAd(label, false)\n    this.MetaAd(getBytesU32(message.length), true)\n    this.Ad(message, false)\n  }\n\n  MetaAd(data: Uint8Array, more: boolean) {\n    const error = this.obj.operate(\n      true,\n      operationToFlagMap[Operation.Ad],\n      data,\n      0,\n      data.length,\n      0,\n      more,\n    )\n    if (error !== null) {\n      // throw new ApplicationException($\"{error}\");\n    }\n  }\n\n  Ad(data: Uint8Array, more: boolean) {\n    const error = this.obj.operate(\n      false,\n      operationToFlagMap[Operation.Ad],\n      data,\n      0,\n      data.length,\n      0,\n      more,\n    )\n    if (error !== null) {\n      // throw new ApplicationException($\"{error}\");\n    }\n  }\n\n  Prf(expectedOutput: number, more: boolean): Uint8Array {\n    const ed = new Uint8Array(0)\n    const result = this.obj.operate(\n      false,\n      operationToFlagMap[Operation.Prf],\n      ed,\n      0,\n      0,\n      expectedOutput,\n      more,\n    )\n    if (result === null) {\n      throw new Error('Error in Prf: result is null')\n    }\n\n    return result\n  }\n\n  Key(data: Uint8Array, more: boolean) {\n    const error = this.obj.operate(\n      false,\n      operationToFlagMap[Operation.Key],\n      data,\n      0,\n      data.length,\n      0,\n      more,\n    )\n    if (error !== null) {\n      // throw new Exception($\"{error}\");\n    }\n  }\n\n  AppendU64(label: Uint8Array, message: Uint8Array) {\n    this.AppendMessage(label, message)\n  }\n\n  ChallengeBytes(label: Uint8Array, size: number): Uint8Array {\n    const sz = getBytesU32(size)\n    this.MetaAd(label, false)\n    this.MetaAd(sz, true)\n\n    return this.Prf(size, false)\n  }\n\n  WitnessBytes(\n    label: Uint8Array,\n    nonceSeeds: Uint8Array,\n    rng: RandomGenerator,\n  ): Transcript {\n    const ns = new Array<Uint8Array>(1)\n    ns[0] = nonceSeeds\n    return this.WitnessBytesRngL(label, ns, rng)\n  }\n\n  WitnessBytesRngL(\n    label: Uint8Array,\n    nonce_seeds: Uint8Array[],\n    rng: RandomGenerator,\n  ): Transcript {\n    let br = this.BuildRng()\n    nonce_seeds.forEach((ns) => {\n      br = br.RekeyWithWitnessBytes(label, ns)\n    })\n\n    return br.Finalize(rng)\n  }\n\n  WitnessBytesHdkd(\n    label: Uint8Array, dest_len: number, nonce_seeds: Uint8Array[],\n  ): Uint8Array {\n    const dest = new Uint8Array(dest_len)\n\n    let br = this.BuildRng()\n    for (const ns of nonce_seeds) {\n      br = br.RekeyWithWitnessBytes(label, ns)\n    }\n    const r = br.Finalize(new RandomGenerator())\n    r.FillBytes(dest)\n\n    return dest\n  }\n\n  BuildRng(): TranscriptRngBuilder {\n    return new TranscriptRngBuilder(this.Clone())\n  }\n\n  FillBytes(dest: Uint8Array) {\n    const data_len = getBytesU32(dest.length)\n    this.MetaAd(data_len, false)\n    this.Prf(dest.length, false)\n  }\n}\n","export const LFACTOR = 0x51da312547e1b\nexport const L = BigUint64Array.from([\n  0x0002631a5cf5d3edn,\n  0x000dea2f79cd6581n,\n  0x000000000014def9n,\n  0x0000000000000000n,\n  0x0000100000000000n,\n])\nexport const R = BigUint64Array.from([\n  0x000f48bd6721e6edn,\n  0x0003bab5ac67e45an,\n  0x000fffffeb35e51bn,\n  0x000fffffffffffffn,\n  0x00000fffffffffffn,\n])\nexport const RR = BigUint64Array.from([\n  0x0009d265e952d13bn,\n  0x000d63c715bea69fn,\n  0x0005be65cb687604n,\n  0x0003dceec73d217fn,\n  0x000009411b7c309an,\n])\nexport const U64size = BigInt(2 ** 64)\n\nclass Tuple2<T = any> {\n  public i0: T\n  public i1: T\n\n  constructor(a: T, b: T) {\n    this.i0 = a\n    this.i1 = b\n  }\n}\n\nexport function AsU8(a: number) {\n  return a % 256\n}\n\nexport function AsU8bn(a: bigint): number {\n  return Number(a % 256n)\n}\n\nexport function AsU64Bn(val: any): number {\n  return Number(BigInt(val) % BigInt(U64size))\n}\n\nexport function ScalarBigintToBytesForm(scalar: BigUint64Array): Uint8Array {\n  const s = new Uint8Array(32)\n\n  s[0] = AsU8bn(scalar[0] >> 0n)\n  s[1] = AsU8bn(scalar[0] >> 8n)\n  s[2] = AsU8bn(scalar[0] >> 16n)\n  s[3] = AsU8bn(scalar[0] >> 24n)\n  s[4] = AsU8bn(scalar[0] >> 32n)\n  s[5] = AsU8bn(scalar[0] >> 40n)\n  s[6] = AsU8bn((scalar[0] >> 48n) | (scalar[1] << 4n))\n  s[7] = AsU8bn(scalar[1] >> 4n)\n  s[8] = AsU8bn(scalar[1] >> 12n)\n  s[9] = AsU8bn(scalar[1] >> 20n)\n  s[10] = AsU8bn(scalar[1] >> 28n)\n  s[11] = AsU8bn(scalar[1] >> 36n)\n  s[12] = AsU8bn(scalar[1] >> 44n)\n  s[13] = AsU8bn(scalar[2] >> 0n)\n  s[14] = AsU8bn(scalar[2] >> 8n)\n  s[15] = AsU8bn(scalar[2] >> 16n)\n  s[16] = AsU8bn(scalar[2] >> 24n)\n  s[17] = AsU8bn(scalar[2] >> 32n)\n  s[18] = AsU8bn(scalar[2] >> 40n)\n  s[19] = AsU8bn((scalar[2] >> 48n) | (scalar[3] << 4n))\n  s[20] = AsU8bn(scalar[3] >> 4n)\n  s[21] = AsU8bn(scalar[3] >> 12n)\n  s[22] = AsU8bn(scalar[3] >> 20n)\n  s[23] = AsU8bn(scalar[3] >> 28n)\n  s[24] = AsU8bn(scalar[3] >> 36n)\n  s[25] = AsU8bn(scalar[3] >> 44n)\n  s[26] = AsU8bn(scalar[4] >> 0n)\n  s[27] = AsU8bn(scalar[4] >> 8n)\n  s[28] = AsU8bn(scalar[4] >> 16n)\n  s[29] = AsU8bn(scalar[4] >> 24n)\n  s[30] = AsU8bn(scalar[4] >> 32n)\n  s[31] = AsU8bn(scalar[4] >> 40n)\n\n  return s\n}\n\nexport function FloatArrayToBytes(scalar: Float64Array): Uint8Array {\n  const s = new Uint8Array(32)\n\n  s[0] = AsU8(scalar[0] >> 0)\n  s[1] = AsU8(scalar[0] >> 8)\n  s[2] = AsU8(scalar[0] >> 16)\n  s[3] = AsU8(scalar[0] >> 24)\n  s[4] = AsU8(scalar[0] >> 32)\n  s[5] = AsU8(scalar[0] >> 40)\n  s[6] = AsU8((scalar[0] >> 48) | (scalar[1] << 4))\n  s[7] = AsU8(scalar[1] >> 4)\n  s[8] = AsU8(scalar[1] >> 12)\n  s[9] = AsU8(scalar[1] >> 20)\n  s[10] = AsU8(scalar[1] >> 28)\n  s[11] = AsU8(scalar[1] >> 36)\n  s[12] = AsU8(scalar[1] >> 44)\n  s[13] = AsU8(scalar[2] >> 0)\n  s[14] = AsU8(scalar[2] >> 8)\n  s[15] = AsU8(scalar[2] >> 16)\n  s[16] = AsU8(scalar[2] >> 24)\n  s[17] = AsU8(scalar[2] >> 32)\n  s[18] = AsU8(scalar[2] >> 40)\n  s[19] = AsU8((scalar[2] >> 48) | (scalar[3] << 4))\n  s[20] = AsU8(scalar[3] >> 4)\n  s[21] = AsU8(scalar[3] >> 12)\n  s[22] = AsU8(scalar[3] >> 20)\n  s[23] = AsU8(scalar[3] >> 28)\n  s[24] = AsU8(scalar[3] >> 36)\n  s[25] = AsU8(scalar[3] >> 44)\n  s[26] = AsU8(scalar[4] >> 0)\n  s[27] = AsU8(scalar[4] >> 8)\n  s[28] = AsU8(scalar[4] >> 16)\n  s[29] = AsU8(scalar[4] >> 24)\n  s[30] = AsU8(scalar[4] >> 32)\n  s[31] = AsU8(scalar[4] >> 40)\n\n  return s\n}\n\nexport function ScalarBytesToBigintForm(scalar: Uint8Array): BigUint64Array {\n  // let dt = new Float64Array(5);\n  const dt = new BigUint64Array(5)\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 8; j++) {\n      dt[i] |= (BigInt(scalar[i * 8 + j]) << BigInt(j * 8)) % U64size\n    }\n  }\n\n  const mask = (1n << 52n) - 1n\n  const topMask = (1n << 48n) - 1n\n  const s = new BigUint64Array(5)\n\n  s[0] = dt[0] & mask\n  s[1] = ((dt[0] >> 52n) | (dt[1] << 12n)) & mask\n  s[2] = ((dt[1] >> 40n) | (dt[2] << 24n)) & mask\n  s[3] = ((dt[2] >> 28n) | (dt[3] << 36n)) & mask\n  s[4] = (dt[3] >> 16n) & topMask\n\n  return s\n}\n\nfunction WrappingSub(a: bigint, b: bigint): bigint {\n  // convert from signed to unsigned 64 bits integer\n  const r = (a - b) % U64size\n  return r > 0 ? r : U64size + r\n}\n\nexport function ScalarSub(\n  a: BigUint64Array,\n  b: BigUint64Array,\n): BigUint64Array {\n  const difference = new BigUint64Array(5)\n  const mask: bigint = (1n << 52n) - 1n\n\n  // a - b\n  let borrow: bigint = 0n\n  for (let i = 0; i < 5; i++) {\n    borrow = WrappingSub(a[i], b[i] + (borrow >> 63n))\n    difference[i] = (borrow & mask) % U64size\n  }\n\n  // conditionally add l if the difference is negative\n  const underflowMask = WrappingSub((borrow >> 63n) ^ 1n, 1n)\n  let carry: bigint = 0n\n  for (let i = 0; i < 5; i++) {\n    carry = BigInt((carry >> 52n) + difference[i] + (L[i] & underflowMask))\n    difference[i] = carry & mask\n  }\n\n  return difference\n}\n\nexport function ScalarAdd(\n  a: BigUint64Array,\n  b: BigUint64Array,\n): BigUint64Array {\n  const sum = new BigUint64Array(5)\n  const mask: bigint = (1n << 52n) - 1n\n\n  let carry: bigint = 0n\n  for (let i = 0; i < 5; i++) {\n    carry = BigInt(a[i]) + BigInt(b[i]) + (carry >> 52n)\n    sum[i] = carry & mask\n  }\n\n  // subtract l if the sum is >= l\n  return ScalarSub(sum, L)\n}\n\nexport function ScalarMul(\n  a: BigUint64Array,\n  b: BigUint64Array,\n): BigUint64Array {\n  const ab = MontgomeryReduce(MulInternal(a, b))\n  return MontgomeryReduce(MulInternal(ab, RR))\n}\n\nexport function _m(x: bigint, y: bigint): bigint {\n  return BigInt(x) * BigInt(y)\n}\n\n// function WrappingMul (a: number, b: number): bigint {\n//   return (BigInt(a) * BigInt(b)) % U64size\n// }\n\nfunction _part1(sum: bigint): Tuple2<bigint> {\n  const p = (sum * BigInt(LFACTOR)) & ((1n << 52n) - 1n)\n\n  return new Tuple2(p, (sum + _m(p, BigInt(L[0]))) >> 52n)\n}\n\nfunction _part2(sum: bigint): Tuple2<bigint> {\n  const w = sum % U64size & ((1n << 52n) - 1n)\n  return new Tuple2(w, sum >> 52n)\n}\n\nfunction MontgomeryReduce(limbs: bigint[]) {\n  const l = L\n\n  // the first half computes the Montgomery adjustment factor n, and begins adding n*l to make limbs divisible by R\n  const n0 = _part1(limbs[0])\n  const n1 = _part1(n0.i1 + limbs[1] + _m(n0.i0, BigInt(l[1])))\n  const n2 = _part1(\n    n1.i1 + limbs[2] + _m(n0.i0, BigInt(l[2])) + _m(n1.i0, BigInt(l[1])),\n  )\n  const n3 = _part1(\n    n2.i1 + limbs[3] + _m(n1.i0, BigInt(l[2])) + _m(n2.i0, BigInt(l[1])),\n  )\n  const n4 = _part1(\n    n3.i1 +\n    limbs[4] +\n    _m(n0.i0, BigInt(l[4])) +\n    _m(n2.i0, BigInt(l[2])) +\n    _m(n3.i0, BigInt(l[1])),\n  )\n\n  // limbs is divisible by R now, so we can divide by R by simply storing the upper half as the result\n  const r0 = _part2(\n    n4.i1 +\n    limbs[5] +\n    _m(n1.i0, BigInt(l[4])) +\n    _m(n3.i0, BigInt(l[2])) +\n    _m(n4.i0, BigInt(l[1])),\n  )\n  const r1 = _part2(\n    r0.i1 + limbs[6] + _m(n2.i0, BigInt(l[4])) + _m(n4.i0, BigInt(l[2])),\n  )\n  const r2 = _part2(r1.i1 + limbs[7] + _m(n3.i0, BigInt(l[4])))\n  const r3 = _part2(r2.i1 + limbs[8] + _m(n4.i0, BigInt(l[4])))\n  const r4 = r3.i1\n\n  return ScalarSub(BigUint64Array.from([r0.i0, r1.i0, r2.i0, r3.i0, r4]), l)\n}\n\nfunction MulInternal(a: BigUint64Array, b: BigUint64Array): bigint[] {\n  const z = Array(9)\n\n  z[0] = _m(a[0], b[0])\n  z[1] = _m(a[0], b[1]) + _m(a[1], b[0])\n  z[2] = _m(a[0], b[2]) + _m(a[1], b[1]) + _m(a[2], b[0])\n  z[3] = _m(a[0], b[3]) + _m(a[1], b[2]) + _m(a[2], b[1]) + _m(a[3], b[0])\n  z[4] =\n    _m(a[0], b[4]) +\n    _m(a[1], b[3]) +\n    _m(a[2], b[2]) +\n    _m(a[3], b[1]) +\n    _m(a[4], b[0])\n  z[5] = _m(a[1], b[4]) + _m(a[2], b[3]) + _m(a[3], b[2]) + _m(a[4], b[1])\n  z[6] = _m(a[2], b[4]) + _m(a[3], b[3]) + _m(a[4], b[2])\n  z[7] = _m(a[3], b[4]) + _m(a[4], b[3])\n  z[8] = _m(a[4], b[4])\n\n  return z\n}\n\nfunction MontgomeryMul(a: BigUint64Array, b: BigUint64Array): BigUint64Array {\n  return MontgomeryReduce(MulInternal(a, b))\n}\n\n// function ToBigIntArray (a: Float64Array): BigUint64Array {\n//   const r = new BigUint64Array(a.length)\n//   for (let i = 0; i < a.length; i++) {\n//     r[i] = BigInt(a[i])\n//   }\n//\n//   return r\n// }\n\n// function ToU64Array (a: BigUint64Array): Float64Array {\n//   const r = new Float64Array(a.length)\n//   for (let i = 0; i < a.length; i++) {\n//     r[i] = Number(a[i])\n//   }\n//\n//   return r\n// }\n\nexport function FromBytesWide(data: Uint8Array): BigUint64Array {\n  const words = new BigUint64Array(8)\n\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      // const s1 = BigInt(data[i * 8 + j])\n      // const s2 = BigInt(j * 8)\n      // const s3 = s1 << s2\n      // const s4 = AsU64Bn(s3)\n      words[i] |= (BigInt(data[i * 8 + j]) << BigInt(j * 8)) % U64size\n    }\n  }\n\n  const mask = (1n << 52n) - 1n\n  let lo = new BigUint64Array(5)\n  let hi = new BigUint64Array(5)\n\n  lo[0] = words[0] & mask\n  lo[1] = ((words[0] >> 52n) | (words[1] << 12n)) & mask\n  lo[2] = ((words[1] >> 40n) | (words[2] << 24n)) & mask\n  lo[3] = ((words[2] >> 28n) | (words[3] << 36n)) & mask\n  lo[4] = ((words[3] >> 16n) | (words[4] << 48n)) & mask\n  hi[0] = (words[4] >> 4n) & mask\n  hi[1] = ((words[4] >> 56n) | (words[5] << 8n)) & mask\n  hi[2] = ((words[5] >> 44n) | (words[6] << 20n)) & mask\n  hi[3] = ((words[6] >> 32n) | (words[7] << 32n)) & mask\n  hi[4] = words[7] >> 20n\n\n  lo = MontgomeryMul(lo, R) // (lo * R) / R = lo\n  hi = MontgomeryMul(hi, RR) // (hi * R^2) / R = hi * R\n\n  return ScalarAdd(hi, lo)\n}\n\nexport function readUint8ArrayIntoBigIntArray(bytes: Uint8Array): bigint[] {\n  const bigInts: bigint[] = []\n  for (let i = 0; i < bytes.length; i += 8) {\n    let num: bigint = 0n\n    for (let j = i + 7; j >= i; j--) {\n      num = (num << 8n) | BigInt(bytes[j])\n    }\n    bigInts.push(num)\n  }\n  return bigInts\n}\n\nexport class Scalar {\n  public bytes: Uint8Array\n\n  static FromBytes(data: Uint8Array): Scalar {\n    if (data.length !== 32) {\n      throw new Error(`Invalid size of data: should be 32, got ${data.length}`)\n    }\n    const s = new Scalar()\n    s.bytes = data\n    return s\n  }\n\n  static FromBits(bytes: Uint8Array): Scalar {\n    if (bytes.length !== 32) {\n      throw new Error(`Invalid size of data: should be 32, got ${bytes.length}`)\n    }\n    const s = new Scalar()\n    s.bytes = bytes\n    s.bytes[31] &= 0b0111_1111\n    return s\n  }\n\n  ToBytes(): Uint8Array {\n    return this.bytes.slice()\n  }\n\n  static FromBytesModOrderWide(data: Uint8Array): Uint8Array {\n    const tt1 = FromBytesWide(data)\n    // todo: replace return type with Scalar\n    return ScalarBigintToBytesForm(tt1)\n  }\n\n  static ToRadix16(bytes: Uint8Array): number[] {\n    const output: number[] = []\n\n    // Step 1: change radix.\n    // Convert from radix 256 (bytes) to radix 16 (nibbles)\n    for (let i = 0; i < 32; i++) {\n      output[2 * i] = bytes[i] & 15            // bottom 4 bits\n      output[2 * i + 1] = (bytes[i] >> 4) & 15 // top 4 bits\n    }\n\n    // Step 2: recenter coefficients from [0,16) to [-8,8)\n    for (let i = 0; i < 63; i++) {\n      const carry = (output[i] + 8) >> 4  // if output[i] >= 8, carry = 1, else carry = 0\n      output[i] -= carry << 4             // if output[i] >= 8, output[i] -= 16\n      output[i + 1] += carry              // if output[i] >= 8, output[i + 1] += 1\n    }\n    // Precondition note:\n    // since self[31] <= 127 (01111111), output[63] <= 7 (0111)\n    // output[63] is not recentered\n    // It increases by carry <= 1. Thus output[63] <= 8\n\n    return output\n  }\n\n  static DivideScalarBytesByCofactor(bytes: Uint8Array): Uint8Array {\n    const res = new Uint8Array(bytes.length)\n    let low = 0\n\n    for (let i = bytes.length - 1; i >= 0; i--) {\n      const r = bytes[i] & 0b00000111 // save remainder\n      bytes[i] >>= 3 // divide by 8\n      bytes[i] += low\n      res[i] = bytes[i]\n      low = (r << 5) % 256\n    }\n\n    return res\n  }\n\n  static MultiplyScalarBytesByCofactor(bytes: Uint8Array): Uint8Array {\n    const res = new Uint8Array(bytes.length)\n    let high = 0\n\n    for (let i = 0; i < bytes.length; i++) {\n      const r = bytes[i] & 0b11100000 // carry bits\n      bytes[i] = bytes[i] << 3 // multiply by 8\n      bytes[i] += high\n      res[i] = bytes[i]\n      high = r >> 5\n    }\n\n    return res\n  }\n\n  // sbyte[]\n  NonAdjacentForm(size: number): number[] {\n    // sbyte[] naf = new sbyte[256];\n    const naf: number[] = new Array(256).fill(0)\n\n    const decoded_xU64 = readUint8ArrayIntoBigIntArray(this.ToBytes())\n    const xU64: bigint[] = [...decoded_xU64, ...new Array(5 - decoded_xU64.length).fill(0n)]\n\n    const width = 1n << BigInt(size)\n    const windowMask = width - 1n\n\n    let pos = 0\n    let carry = 0n\n    while (pos < 256) {\n      // Construct a buffer of bits of the scalar, starting at bit `pos`\n      const u64_idx = Math.floor(pos / 64)\n      const bit_idx = pos % 64\n      let bit_buf: bigint\n      if (bit_idx < 64 - size) {\n        // This window's bits are contained in a single u64\n        bit_buf = xU64[Number(u64_idx)] >> BigInt(bit_idx)\n      } else {\n        // Combine the current u64's bits with the bits from the next u64\n        bit_buf = (xU64[u64_idx] >> BigInt(bit_idx)) | (xU64[u64_idx + 1] << BigInt(64 - bit_idx))\n      }\n\n      // Add the carry into the current window\n      const window: bigint = carry + (bit_buf & windowMask)\n\n      if ((window & 1n) === 0n) {\n        // If the window value is even, preserve the carry and continue.\n        // Why is the carry preserved?\n        // If carry === 0 and window & 1 === 0, then the next carry should be 0\n        // If carry === 1 and window & 1 === 0, then bit_buf & 1 === 1 so the next carry should be 1\n        pos += 1\n        continue\n      }\n\n      if (window < width / 2n) {\n        carry = 0n\n        naf[pos] = Number(window)\n      } else {\n        carry = 1n\n        // naf[pos] = (window as i8).wrapping_sub(width as i8);\n        naf[pos] = Number(window - width)\n      }\n\n      pos += size\n    }\n\n    return naf\n  }\n}\n","import {U64size, _m as m} from './scalar'\n\nconst LOW_51_BIT_MASK = (1n << 51n) - 1n\n\n/**\n  * Converts Uint8Array[8] to a BigInt in little endian\n  * @param input Uint8Array[8]\n  * @returns {bigint\n */\nfunction uint8ArrayToBigIntLE(input: Uint8Array): bigint {\n  return (\n    BigInt(input[0]) |\n    (BigInt(input[1]) << 8n) |\n    (BigInt(input[2]) << 16n) |\n    (BigInt(input[3]) << 24n) |\n    (BigInt(input[4]) << 32n) |\n    (BigInt(input[5]) << 40n) |\n    (BigInt(input[6]) << 48n) |\n    (BigInt(input[7]) << 56n)\n  )\n}\n\nclass WrappedRes {\n  public i0: boolean\n  public i1: FieldElement\n}\n\nfunction pow22501(fe: FieldElement): FieldElement[] {\n  // Instead of managing which temporary letiables are used\n  // for what, we define as many as we need and leave stack\n  // allocation to the compiler\n  //\n  // Each temporary letiable t_i is of the form (self)^e_i.\n  // Squaring t_i corresponds to multiplying e_i by 2,\n  // so the pow2k function shifts e_i left by k places.\n  // Multiplying t_i and t_j corresponds to adding e_i + e_j.\n  //\n  // Temporary t_i                      Nonzero bits of e_i\n  //\n  const t0 = fe.Square() // 1         e_0 = 2^1\n  const t1 = t0.Square().Square() // 3         e_1 = 2^3\n  const t2 = fe.Mul(t1) // 3,0       e_2 = 2^3 + 2^0\n  const t3 = t0.Mul(t2) // 3,1,0\n  const t4 = t3.Square() // 4,2,1\n  const t5 = t2.Mul(t4) // 4,3,2,1,0\n  const t6 = t5.Pow2k(5) // 9,8,7,6,5\n  const t7 = t6.Mul(t5) // 9,8,7,6,5,4,3,2,1,0\n  const t8 = t7.Pow2k(10) // 19..10\n  const t9 = t8.Mul(t7) // 19..0\n  const t10 = t9.Pow2k(20) // 39..20\n  const t11 = t10.Mul(t9) // 39..0\n  const t12 = t11.Pow2k(10) // 49..10\n  const t13 = t12.Mul(t7) // 49..0\n  const t14 = t13.Pow2k(50) // 99..50\n  const t15 = t14.Mul(t13) // 99..0\n  const t16 = t15.Pow2k(100) // 199..100\n  const t17 = t16.Mul(t15) // 199..0\n  const t18 = t17.Pow2k(50) // 249..50\n  const t19 = t18.Mul(t13) // 249..0\n\n  const pr: FieldElement[] = Array(2)\n  pr[0] = t19\n  pr[1] = t3\n\n  return pr\n}\n\nfunction powP58(e: FieldElement): FieldElement {\n  // The bits of (p-5)/8 are 101111.....11.\n  //\n  //                                 nonzero bits of exponen\n  const t19 = pow22501(e)\n  const t20 = t19[0].Pow2k(2)\n  const t21 = e.Mul(t20)\n\n  return t21\n}\n\nexport class FieldElement {\n  public data: bigint[] = Array(5)\n\n  constructor(data: bigint[]) {\n    this.data[0] = data[0]\n    this.data[1] = data[1]\n    this.data[2] = data[2]\n    this.data[3] = data[3]\n    this.data[4] = data[4]\n  }\n\n  static FromBytes(bytes: Uint8Array): FieldElement {\n    const res = this.Zero()\n    // load bits [  0, 64), no shift\n    res.data[0] = uint8ArrayToBigIntLE(bytes.slice(0, 8)) & LOW_51_BIT_MASK\n    // // load bits [ 48,112), shift to [ 51,112)\n    res.data[1] = (uint8ArrayToBigIntLE(bytes.slice(6, 6 + 8)) >> 3n) & LOW_51_BIT_MASK\n    // // load bits [ 96,160), shift to [102,160)\n    res.data[2] = (uint8ArrayToBigIntLE(bytes.slice(12, 12 + 8)) >> 6n) & LOW_51_BIT_MASK\n    // // load bits [152,216), shift to [153,216)\n    res.data[3] = (uint8ArrayToBigIntLE(bytes.slice(19, 19 + 8)) >> 1n) & LOW_51_BIT_MASK\n    // // load bits [192,256), shift to [204,112)\n    res.data[4] = (uint8ArrayToBigIntLE(bytes.slice(24, 24 + 8)) >> 12n) & LOW_51_BIT_MASK\n    return res\n  }\n\n  Clone(): FieldElement {\n    return new FieldElement(this.data.slice())\n  }\n\n  CtEq(a: FieldElement) {\n    const b1 = this.ToBytes()\n    const b2 = a.ToBytes()\n\n    // Short-circuit on the *lengths* of the slices, not their\n    // contents.\n    if (b1.length !== b2.length) {\n      return false\n    }\n\n    for (let i = 0; i < b1.length; i++) {\n      if (b1[i] !== b2[i]) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  Negate(): FieldElement {\n    return this.Reduce([\n      36028797018963664n - this.data[0],\n      36028797018963952n - this.data[1],\n      36028797018963952n - this.data[2],\n      36028797018963952n - this.data[3],\n      36028797018963952n - this.data[4],\n    ])\n  }\n\n  static SqrtRatioI(u: FieldElement, v: FieldElement): WrappedRes {\n    // Using the same trick as in ed25519 decoding, we merge the\n    // inversion, the square root, and the square test as follows.\n    //\n    // To compute sqrt(α), we can compute β = α^((p+3)/8).\n    // Then β^2 = ±α, so multiplying β by sqrt(-1) if necessary\n    // gives sqrt(α).\n    //\n    // To compute 1/sqrt(α), we observe that\n    //    1/β = α^(p-1 - (p+3)/8) = α^((7p-11)/8)\n    //                            = α^3 * (α^7)^((p-5)/8).\n    //\n    // We can therefore compute sqrt(u/v) = sqrt(u)/sqrt(v)\n    // by first computing\n    //    r = u^((p+3)/8) v^(p-1-(p+3)/8)\n    //      = u u^((p-5)/8) v^3 (v^7)^((p-5)/8)\n    //      = (uv^3) (uv^7)^((p-5)/8).\n    //\n    // If v is nonzero and u/v is square, then r^2 = ±u/v,\n    //                                     so vr^2 = ±u.\n    // If vr^2 =  u, then sqrt(u/v) = r.\n    // If vr^2 = -u, then sqrt(u/v) = r*sqrt(-1).\n    //\n    // If v is zero, r is also zero.\n\n    // const vsq = v.Square()\n\n    const v3 = v.Square().Mul(v)\n    const v7 = v3.Square().Mul(v)\n    let r = u.Mul(v3).Mul(powP58(u.Mul(v7)))\n    const check = v.Mul(r.Square())\n\n    const i = SQRT_M1\n\n    const correct_sign_sqrt = check.CtEq(u)\n    const flipped_sign_sqrt = check.CtEq(u.Negate())\n    const flipped_sign_sqrt_i = check.CtEq(u.Negate().Mul(i))\n\n    const r_prime = r.Mul(SQRT_M1)\n    r.ConditionalAssign(r_prime, flipped_sign_sqrt || flipped_sign_sqrt_i)\n\n    // Choose the nonnegative square root.\n    const r_is_negative = r.IsNegative()\n    if (r_is_negative) {\n      r = r.Negate()\n    }\n    const was_nonzero_square = correct_sign_sqrt || flipped_sign_sqrt\n\n    const res = new WrappedRes()\n    res.i0 = was_nonzero_square\n    res.i1 = r\n\n    return res\n  }\n\n  ConditionalNegate(choice: boolean): void {\n    const nself = this.Negate()\n    this.ConditionalAssign(nself, choice)\n  }\n\n  IsNegative(): boolean {\n    const dt = this.data[0] % 256n\n    const dti = Number(dt) & 1\n    return dti > 0\n  }\n\n  ConditionalAssign(other: FieldElement, choice: boolean): void {\n    this.data[0] = choice ? other.data[0] : this.data[0]\n    this.data[1] = choice ? other.data[1] : this.data[1]\n    this.data[2] = choice ? other.data[2] : this.data[2]\n    this.data[3] = choice ? other.data[3] : this.data[3]\n    this.data[4] = choice ? other.data[4] : this.data[4]\n  }\n\n  Pow2k(k: number): FieldElement {\n    const a = this.Clone().data\n\n    while (true) {\n      // Precondition: assume input limbs a[i] are bounded as\n      //\n      // a[i] < 2^(51 + b)\n      //\n      // where b is a real parameter measuring the \"bit excess\" of the limbs.\n\n      // Precomputation: 64-bit multiply by 19.\n      //\n      // This fits into a u64 whenever 51 + b + lg(19) < 64.\n      //\n      // Since 51 + b + lg(19) < 51 + 4.25 + b\n      //                       = 55.25 + b,\n      // this fits if b < 8.75.\n      const a3_19 = 19n * a[3]\n      const a4_19 = 19n * a[4]\n\n      // Multiply to get 128-bit coefficients of output.\n      //\n      // The 128-bit multiplications by 2 turn into 1 slr + 1 slrd each,\n      // which doesn't seem any better or worse than doing them as precomputations\n      // on the 64-bit inputs.\n      // const t1 = m(a[1], a4_19) + m(a[2], a3_19)\n      // const t2 = 2n * t1\n      // const t3 = m(a[0], a[0]) + t2\n      const c0 = m(a[0], a[0]) + 2n * (m(a[1], a4_19) + m(a[2], a3_19))\n      let c1 = m(a[3], a3_19) + 2n * (m(a[0], a[1]) + m(a[2], a4_19))\n      let c2 = m(a[1], a[1]) + 2n * (m(a[0], a[2]) + m(a[4], a3_19))\n      let c3 = m(a[4], a4_19) + 2n * (m(a[0], a[3]) + m(a[1], a[2]))\n      let c4 = m(a[2], a[2]) + 2n * (m(a[0], a[4]) + m(a[1], a[3]))\n\n      // Same bound as in multiply:\n      //    c[i] < 2^(102 + 2*b) * (1+i + (4-i)*19)\n      //         < 2^(102 + lg(1 + 4*19) + 2*b)\n      //         < 2^(108.27 + 2*b)\n      //\n      // The carry (c[i] >> 51) fits into a u64 when\n      //    108.27 + 2*b - 51 < 64\n      //    2*b < 6.73\n      //    b < 3.365.\n      //\n      // So we require b < 3 to ensure this fits.\n\n      // Casting to u64 and back tells the compiler that the carry is bounded by 2^64, so\n      // that the addition is a u128 + u64 rather than u128 + u128.\n      c1 += c0 >> 51n\n      a[0] = c0 % U64size & LOW_51_BIT_MASK\n\n      c2 += c1 >> 51n\n      a[1] = c1 % U64size & LOW_51_BIT_MASK\n\n      c3 += c2 >> 51n\n      a[2] = c2 % U64size & LOW_51_BIT_MASK\n\n      c4 += c3 >> 51n\n      a[3] = c3 % U64size & LOW_51_BIT_MASK\n\n      const carry = c4 >> 51n\n      a[4] = c4 % U64size & LOW_51_BIT_MASK\n\n      // To see that this does not overflow, we need a[0] + carry * 19 < 2^64.\n      //\n      // c4 < a2^2 + 2*a0*a4 + 2*a1*a3 + (carry from c3)\n      //    < 2^(102 + 2*b + lg(5)) + 2^64.\n      //\n      // When b < 3 we get\n      //\n      // c4 < 2^110.33  so that carry < 2^59.33\n      //\n      // so that\n      //\n      // a[0] + carry * 19 < 2^51 + 19 * 2^59.33 < 2^63.58\n      //\n      // and there is no overflow.\n      a[0] = a[0] + ((carry * 19n) % U64size)\n\n      // Now a[1] < 2^51 + 2^(64 -51) = 2^51 + 2^13 < 2^(51 + epsilon).\n      a[1] += a[0] >> 51n\n      a[0] &= LOW_51_BIT_MASK\n\n      // Now all a[i] < 2^(51 + epsilon) and a = self^(2^k).\n      k--\n      if (k === 0) {\n        break\n      }\n    }\n\n    return new FieldElement(a)\n  }\n\n  static One(): FieldElement {\n    return new FieldElement([1n, 0n, 0n, 0n, 0n])\n  }\n\n  static Zero(): FieldElement {\n    return new FieldElement([0n, 0n, 0n, 0n, 0n])\n  }\n\n  Mul(second: FieldElement): FieldElement {\n    // Alias self, _rhs for more readable formulas\n    const a = this.data\n    const b = second\n\n    // Precondition: assume input limbs a[i], b[i] are bounded as\n    //\n    // a[i], b[i] < 2^(51 + b)\n    //\n    // where b is a real parameter measuring the \"bit excess\" of the limbs.\n\n    // 64-bit precomputations to avoid 128-bit multiplications.\n    //\n    // This fits into a u64 whenever 51 + b + lg(19) < 64.\n    //\n    // Since 51 + b + lg(19) < 51 + 4.25 + b\n    //                       = 55.25 + b,\n    // this fits if b < 8.75.\n    const b1_19 = b.data[1] * 19n\n    const b2_19 = b.data[2] * 19n\n    const b3_19 = b.data[3] * 19n\n    const b4_19 = b.data[4] * 19n\n\n    // Multiply to get 128-bit coefficients of output\n    const c0 =\n      m(a[0], b.data[0]) +\n      m(a[4], b1_19) +\n      m(a[3], b2_19) +\n      m(a[2], b3_19) +\n      m(a[1], b4_19)\n    let c1 =\n      m(a[1], b.data[0]) +\n      m(a[0], b.data[1]) +\n      m(a[4], b2_19) +\n      m(a[3], b3_19) +\n      m(a[2], b4_19)\n    let c2 =\n      m(a[2], b.data[0]) +\n      m(a[1], b.data[1]) +\n      m(a[0], b.data[2]) +\n      m(a[4], b3_19) +\n      m(a[3], b4_19)\n    let c3 =\n      m(a[3], b.data[0]) +\n      m(a[2], b.data[1]) +\n      m(a[1], b.data[2]) +\n      m(a[0], b.data[3]) +\n      m(a[4], b4_19)\n    let c4 =\n      m(a[4], b.data[0]) +\n      m(a[3], b.data[1]) +\n      m(a[2], b.data[2]) +\n      m(a[1], b.data[3]) +\n      m(a[0], b.data[4])\n\n    // Casting to u64 and back tells the compiler that the carry is\n    // bounded by 2^64, so that the addition is a u128 + u64 rather\n    // than u128 + u128.\n\n    const output: bigint[] = Array(5)\n\n    c1 += c0 >> 51n\n    output[0] = (c0 & LOW_51_BIT_MASK) % U64size\n\n    c2 += c1 >> 51n\n    output[1] = (c1 & LOW_51_BIT_MASK) % U64size\n\n    c3 += c2 >> 51n\n    output[2] = (c2 & LOW_51_BIT_MASK) % U64size\n\n    c4 += c3 >> 51n\n    output[3] = (c3 & LOW_51_BIT_MASK) % U64size\n\n    const carry = (c4 >> 51n) % U64size\n    output[4] = (c4 & LOW_51_BIT_MASK) % U64size\n\n    // To see that this does not overflow, we need out[0] + carry * 19 < 2^64.\n    //\n    // c4 < a0*b4 + a1*b3 + a2*b2 + a3*b1 + a4*b0 + (carry from c3)\n    //    < 5*(2^(51 + b) * 2^(51 + b)) + (carry from c3)\n    //    < 2^(102 + 2*b + lg(5)) + 2^64.\n    //\n    // When b < 3 we get\n    //\n    // c4 < 2^110.33  so that carry < 2^59.33\n    //\n    // so that\n    //\n    // out[0] + carry * 19 < 2^51 + 19 * 2^59.33 < 2^63.58\n    //\n    // and there is no overflow.\n    output[0] = output[0] + carry * 19n\n\n    // Now out[1] < 2^51 + 2^(64 -51) = 2^51 + 2^13 < 2^(51 + epsilon).\n    output[1] += output[0] >> 51n\n    output[0] &= LOW_51_BIT_MASK\n\n    // Now out[i] < 2^(51 + epsilon) for all i.\n    return new FieldElement(output)\n  }\n\n  Reduce(limbs: bigint[]): FieldElement {\n    // Since the input limbs are bounded by 2^64, the biggest\n    // carry-out is bounded by 2^13.\n    //\n    // The biggest carry-in is c4 * 19, resulting in\n    //\n    // 2^51 + 19*2^13 < 2^51.0000000001\n    //\n    // Because we don't need to canonicalize, only to reduce the\n    // limb sizes, it's OK to do a \"weak reduction\", where we\n    // compute the carry-outs in parallel.\n\n    const c0 = limbs[0] >> 51n\n    const c1 = limbs[1] >> 51n\n    const c2 = limbs[2] >> 51n\n    const c3 = limbs[3] >> 51n\n    const c4 = limbs[4] >> 51n\n\n    limbs[0] &= LOW_51_BIT_MASK\n    limbs[1] &= LOW_51_BIT_MASK\n    limbs[2] &= LOW_51_BIT_MASK\n    limbs[3] &= LOW_51_BIT_MASK\n    limbs[4] &= LOW_51_BIT_MASK\n\n    limbs[0] += c4 * 19n\n    limbs[1] += c0\n    limbs[2] += c1\n    limbs[3] += c2\n    limbs[4] += c3\n\n    return new FieldElement(limbs)\n  }\n\n  Add(element: FieldElement): FieldElement {\n    const f = new FieldElement(this.data)\n    for (let i = 0; i < 5; i++) {\n      f.data[i] += element.data[i]\n    }\n    return f\n  }\n\n  Sub(x: FieldElement): FieldElement {\n    // To avoid underflow, first add a multiple of p.\n    // Choose 16*p = p << 4 to be larger than 54-bit _rhs.\n    //\n    // If we could statically track the bitlengths of the limbs\n    // of every FieldElement51, we could choose a multiple of p\n    // just bigger than _rhs and avoid having to do a reduction.\n    //\n    // Since we don't yet have type-level integers to do this, we\n    // have to add an explicit reduction call here.\n\n    return this.Reduce([\n      this.data[0] + 36028797018963664n - x.data[0],\n      this.data[1] + 36028797018963952n - x.data[1],\n      this.data[2] + 36028797018963952n - x.data[2],\n      this.data[3] + 36028797018963952n - x.data[3],\n      this.data[4] + 36028797018963952n - x.data[4],\n    ])\n  }\n\n  Square(): FieldElement {\n    return this.Pow2k(1)\n  }\n\n  Square2(): FieldElement {\n    const square = this.Pow2k(1)\n    for (let i = 0; i < 5; i++) {\n      square.data[i] *= 2n\n    }\n\n    return square\n  }\n\n  BitXor(a: FieldElement): FieldElement {\n    const res = new FieldElement(this.data)\n    res.data[0] ^= a.data[0]\n    res.data[1] ^= a.data[1]\n    res.data[2] ^= a.data[2]\n    res.data[3] ^= a.data[3]\n    res.data[4] ^= a.data[4]\n    return res\n  }\n\n  BitAnd(a: bigint): FieldElement {\n    const res = new FieldElement(this.data)\n    res.data[0] &= a\n    res.data[1] &= a\n    res.data[2] &= a\n    res.data[3] &= a\n    res.data[4] &= a\n    return res\n  }\n\n  ToBytes(): Uint8Array {\n    // Let h = limbs[0] + limbs[1]*2^51 + ... + limbs[4]*2^204.\n    //\n    // Write h = pq + r with 0 <= r < p.\n    //\n    // We want to compute r = h mod p.\n    //\n    // If h < 2*p = 2^256 - 38,\n    // then q = 0 or 1,\n    //\n    // with q = 0 when h < p\n    //  and q = 1 when h >= p.\n    //\n    // Notice that h >= p <===> h + 19 >= p + 19 <===> h + 19 >= 2^255.\n    // Therefore q can be computed as the carry bit of h + 19.\n\n    // First, reduce the limbs to ensure h < 2*p.\n    const cp = this.Clone()\n\n    const limbs = cp.Reduce(this.Clone().data).data\n\n    let q = (limbs[0] + 19n) >> 51n\n    q = (limbs[1] + q) >> 51n\n    q = (limbs[2] + q) >> 51n\n    q = (limbs[3] + q) >> 51n\n    q = (limbs[4] + q) >> 51n\n\n    // Now we can compute r as r = h - pq = r - (2^255-19)q = r + 19q - 2^255q\n\n    limbs[0] += 19n * q\n\n    // Now carry the result to compute r + 19q ...\n    const low_51_bit_mask = (1n << 51n) - 1n\n    limbs[1] += limbs[0] >> 51n\n    limbs[0] = limbs[0] & low_51_bit_mask\n    limbs[2] += limbs[1] >> 51n\n    limbs[1] = limbs[1] & low_51_bit_mask\n    limbs[3] += limbs[2] >> 51n\n    limbs[2] = limbs[2] & low_51_bit_mask\n    limbs[4] += limbs[3] >> 51n\n    limbs[3] = limbs[3] & low_51_bit_mask\n    // ... but instead of carrying (limbs[4] >> 51) = 2^255q\n    // into another limb, discard it, subtracting the value\n    limbs[4] = limbs[4] & low_51_bit_mask\n\n    // Now arrange the bits of the limbs.\n    const s = new Uint8Array(32)\n    s[0] = Number(limbs[0] % 256n)\n    s[1] = Number((limbs[0] >> 8n) % 256n)\n    s[2] = Number((limbs[0] >> 16n) % 256n)\n    s[3] = Number((limbs[0] >> 24n) % 256n)\n    s[4] = Number((limbs[0] >> 32n) % 256n)\n    s[5] = Number((limbs[0] >> 40n) % 256n)\n    s[6] = Number((limbs[0] >> 48n) % 256n | (limbs[1] << 3n) % 256n)\n    s[7] = Number((limbs[1] >> 5n) % 256n)\n    s[8] = Number((limbs[1] >> 13n) % 256n)\n    s[9] = Number((limbs[1] >> 21n) % 256n)\n    s[10] = Number((limbs[1] >> 29n) % 256n)\n    s[11] = Number((limbs[1] >> 37n) % 256n)\n    s[12] = Number(((limbs[1] >> 45n) | (limbs[2] << 6n)) % 256n)\n    s[13] = Number((limbs[2] >> 2n) % 256n)\n    s[14] = Number((limbs[2] >> 10n) % 256n)\n    s[15] = Number((limbs[2] >> 18n) % 256n)\n    s[16] = Number((limbs[2] >> 26n) % 256n)\n    s[17] = Number((limbs[2] >> 34n) % 256n)\n    s[18] = Number((limbs[2] >> 42n) % 256n)\n    s[19] = Number(((limbs[2] >> 50n) | (limbs[3] << 1n)) % 256n)\n    s[20] = Number((limbs[3] >> 7n) % 256n)\n    s[21] = Number((limbs[3] >> 15n) % 256n)\n    s[22] = Number((limbs[3] >> 23n) % 256n)\n    s[23] = Number((limbs[3] >> 31n) % 256n)\n    s[24] = Number((limbs[3] >> 39n) % 256n)\n    s[25] = Number(((limbs[3] >> 47n) | (limbs[4] << 4n)) % 256n)\n    s[26] = Number((limbs[4] >> 4n) % 256n)\n    s[27] = Number((limbs[4] >> 12n) % 256n)\n    s[28] = Number((limbs[4] >> 20n) % 256n)\n    s[29] = Number((limbs[4] >> 28n) % 256n)\n    s[30] = Number((limbs[4] >> 36n) % 256n)\n    s[31] = Number((limbs[4] >> 44n) % 256n)\n\n    // High bit should be zero.\n    // debug_assert!((s[31] & 0b1000_0000u8) === 0u8);\n\n    return s\n  }\n\n  Invert(): FieldElement {\n    // The bits of p-2 = 2^255 -19 -2 are 11010111111...11.\n    //\n    //                                 nonzero bits of exponent\n    const r = pow22501(this) // t19: 249..0 ; t3: 3,1,0\n    const t20 = r[0].Pow2k(5) // 254..5\n    const t21 = t20.Mul(r[1]) // 254..5,3,1,0\n\n    return t21\n  }\n}\n\n/// Precomputed value of one of the square roots of -1 (mod p)\nexport const SQRT_M1 = new FieldElement([\n  1718705420411056n,\n  234908883556509n,\n  2233514472574048n,\n  2117202627021982n,\n  765476049583133n,\n])\n","import {FieldElement} from './fieldElement'\nimport {CompletedPoint} from './completedPoint'\nimport {EdwardsPoint} from './edwardsPoint'\n\nexport class ProjectivePoint {\n  public X: FieldElement\n  public Y: FieldElement\n  public Z: FieldElement\n\n  Double(): CompletedPoint {\n    const XX = this.X.Square()\n    const YY = this.Y.Square()\n    const ZZ2 = this.Z.Square2()\n    const X_plus_Y = this.X.Add(this.Y)\n    const X_plus_Y_sq = X_plus_Y.Square()\n    const YY_plus_XX = YY.Add(XX)\n    const YY_minus_XX = YY.Sub(XX)\n\n    const r = new CompletedPoint()\n    r.X = X_plus_Y_sq.Sub(YY_plus_XX)\n    r.Y = YY_plus_XX\n    r.Z = YY_minus_XX\n    r.T = ZZ2.Sub(YY_minus_XX)\n\n    return r\n  }\n\n  static Identity(): ProjectivePoint {\n    const r = new ProjectivePoint()\n    r.X = FieldElement.Zero()\n    r.Y = FieldElement.One()\n    r.Z = FieldElement.One()\n    return r\n  }\n\n  ToExtended(): EdwardsPoint {\n    return EdwardsPoint.EdwardsPointFromElems(\n      this.X.Mul(this.Z),\n      this.Y.Mul(this.Z),\n      this.Z.Square(),\n      this.X.Mul(this.Y),\n    )\n  }\n}\n","import type {FieldElement} from './fieldElement'\nimport {EdwardsPoint} from './edwardsPoint'\nimport {ProjectivePoint} from './projectivePoint'\n\nexport class CompletedPoint {\n  public X: FieldElement\n  public Y: FieldElement\n  public Z: FieldElement\n  public T: FieldElement\n\n  ToProjective(): ProjectivePoint {\n    const r = new ProjectivePoint()\n    r.X = this.X.Mul(this.T)\n    r.Y = this.Y.Mul(this.Z)\n    r.Z = this.Z.Mul(this.T)\n    return r\n  }\n\n  ToExtended(): EdwardsPoint {\n    return EdwardsPoint.EdwardsPointFromElems(\n      this.X.Mul(this.T),\n      this.Y.Mul(this.Z),\n      this.Z.Mul(this.T),\n      this.X.Mul(this.Y),\n    )\n  }\n}\n","import {FieldElement} from './fieldElement'\n\nexport class AffineNielsPoint {\n  public Y_plus_X: FieldElement\n  public Y_minus_X: FieldElement\n  public XY2d: FieldElement\n\n  constructor() {\n    this.Y_plus_X = FieldElement.One()\n    this.Y_minus_X = FieldElement.One()\n    this.XY2d = FieldElement.Zero()\n  }\n\n  static FromElements(Y_plus_X: FieldElement, Y_minus_X: FieldElement, XY2d: FieldElement): AffineNielsPoint {\n    const res = new AffineNielsPoint()\n    res.Y_plus_X = Y_plus_X\n    res.Y_minus_X = Y_minus_X\n    res.XY2d = XY2d\n    return res\n  }\n\n  static FromArray(array: bigint[]): AffineNielsPoint {\n    if (array.length !== 15) {\n      throw new Error('Array length must be 15')\n    }\n    return AffineNielsPoint.FromElements(\n      new FieldElement(array.slice(0, 5)),\n      new FieldElement(array.slice(5, 10)),\n      new FieldElement(array.slice(10, 15)),\n    )\n  }\n\n  static FromStringInRadix36Form(param: string): AffineNielsPoint {\n    const array = param.split(',').map(x => BigInt(parseInt(x, 36)))\n    if (array.length !== 15) {\n      throw new Error('Array length must be 15')\n    }\n    return AffineNielsPoint.FromElements(\n      new FieldElement(array.slice(0, 5)),\n      new FieldElement(array.slice(5, 10)),\n      new FieldElement(array.slice(10, 15)),\n    )\n  }\n\n  ConditionalAssign(a: AffineNielsPoint, choice: boolean): void {\n    this.Y_plus_X.ConditionalAssign(a.Y_plus_X, choice)\n    this.Y_minus_X.ConditionalAssign(a.Y_minus_X, choice)\n    this.XY2d.ConditionalAssign(a.XY2d, choice)\n  }\n\n  BitXor(a: AffineNielsPoint): AffineNielsPoint {\n    const r = new AffineNielsPoint()\n    r.Y_plus_X = this.Y_plus_X.BitXor(a.Y_plus_X)\n    r.Y_minus_X = this.Y_minus_X.BitXor(a.Y_minus_X)\n    r.XY2d = this.XY2d.BitXor(this.XY2d)\n    return r\n  }\n\n  ConditionalNegate(choice: boolean): void {\n    const nself = this.Negate()\n    this.ConditionalAssign(nself, choice)\n  }\n\n  Negate(): AffineNielsPoint {\n    const r = new AffineNielsPoint()\n    r.Y_plus_X = this.Y_minus_X.Clone()\n    r.Y_minus_X = this.Y_plus_X.Clone()\n    r.XY2d = this.XY2d.Negate()\n    return r\n  }\n}\n","import {FieldElement} from './fieldElement'\n\nexport class ProjectiveNielsPoint {\n  public Y_plus_X: FieldElement\n  public Y_minus_X: FieldElement\n  public Z: FieldElement\n  public T2d: FieldElement\n\n  public constructor() {\n    this.Y_plus_X = FieldElement.Zero()\n    this.Y_minus_X = FieldElement.Zero()\n    this.Z = FieldElement.Zero()\n    this.T2d = FieldElement.Zero()\n  }\n\n  BitXor(a: ProjectiveNielsPoint): ProjectiveNielsPoint {\n    const r = new ProjectiveNielsPoint()\n    r.Y_plus_X = this.Y_plus_X.BitXor(a.Y_plus_X)\n    r.Y_minus_X = this.Y_minus_X.BitXor(a.Y_minus_X)\n    r.Z = this.Z.BitXor(a.Z)\n    r.T2d = this.T2d.BitXor(a.T2d)\n    return r\n  }\n\n  BitAnd(a: number): ProjectiveNielsPoint {\n    const aa = BigInt(a)\n    const r = new ProjectiveNielsPoint()\n    r.Y_plus_X = this.Y_plus_X.BitAnd(aa)\n    r.Y_minus_X = this.Y_minus_X.BitAnd(aa)\n    r.Z = this.Z.BitAnd(aa)\n    r.T2d = this.T2d.BitAnd(aa)\n    return r\n  }\n\n  Negate(): ProjectiveNielsPoint {\n    const r = new ProjectiveNielsPoint()\n    r.Y_plus_X = this.Y_plus_X.Negate()\n    r.Y_minus_X = this.Y_minus_X.Negate()\n    r.Z = this.Z.Negate()\n    r.T2d = this.T2d.Negate()\n    return r\n  }\n\n  Copy(): ProjectiveNielsPoint {\n    const r = new ProjectiveNielsPoint()\n    r.Y_plus_X = this.Y_plus_X.Clone()\n    r.Y_minus_X = this.Y_minus_X.Clone()\n    r.Z = this.Z.Clone()\n    r.T2d = this.T2d.Clone()\n    return r\n  }\n\n  GetPoint(): ProjectiveNielsPoint {\n    return this\n  }\n\n  FromPoint(a: ProjectiveNielsPoint): void {\n    this.Y_plus_X = a.Y_plus_X\n    this.Y_minus_X = a.Y_minus_X\n    this.Z = a.Z\n    this.T2d = a.T2d\n  }\n\n  ConditionalAssign(a: ProjectiveNielsPoint, choice: boolean): void {\n    // if choice = 0, mask = (-0) = 0000...0000\n    // if choice = 1, mask = (-1) = 1111...1111\n    const mask = choice ? 0b1111_1111_1111_1111 : 0b0000_0000_0000_0000\n\n    //    *self ^= mask & (*self ^ *other);\n    this.FromPoint(this.GetPoint().BitXor(this.BitXor(a).BitAnd(mask)))\n  }\n\n  ConditionalNegate(choice: boolean): void {\n    const p = this.GetPoint()\n    this.ConditionalAssign(p, choice)\n  }\n}\n","import {FieldElement} from './fieldElement'\nimport {CompletedPoint} from './completedPoint'\nimport {ProjectivePoint} from './projectivePoint'\nimport {AffineNielsPoint} from './affineNielsPoint'\nimport {ProjectiveNielsPoint} from './projectiveNielsPoint'\n\n/// Edwards `2*d` value, equal to `2*(-121665/121666) mod p`.\nconst EDWARDS_D2 = new FieldElement([\n  1859910466990425n,\n  932731440258426n,\n  1072319116312658n,\n  1815898335770999n,\n  633789495995903n,\n])\nconst EDWARDS_D = new FieldElement([\n  929955233495203n,\n  466365720129213n,\n  1662059464998953n,\n  2033849074728123n,\n  1442794654840575n,\n])\n\nexport class EdwardsPoint {\n  public X: FieldElement\n  public Y: FieldElement\n  public Z: FieldElement\n  public T: FieldElement\n\n  FromElems(\n    x: FieldElement,\n    y: FieldElement,\n    z: FieldElement,\n    t: FieldElement,\n  ) {\n    this.X = x\n    this.Y = y\n    this.Z = z\n    this.T = t\n  }\n\n  static EdwardsPointFromElems(\n    x: FieldElement,\n    y: FieldElement,\n    z: FieldElement,\n    t: FieldElement,\n  ) {\n    const ep = new EdwardsPoint()\n    ep.X = x\n    ep.Y = y\n    ep.Z = z\n    ep.T = t\n    return ep\n  }\n\n  public Equals(a: EdwardsPoint): boolean {\n    let result = true\n    for (let i = 0; i < 5; i++) {\n      result =\n        result &&\n        this.X.data[i] === a.X.data[i] &&\n        this.Y.data[i] === a.Y.data[i] &&\n        this.Z.data[i] === a.Z.data[i] &&\n        this.T.data[i] === a.T.data[i]\n    }\n\n    return result\n  }\n\n  Copy(): EdwardsPoint {\n    const ep = new EdwardsPoint()\n    ep.FromElems(this.X, this.Y, this.Z, this.T)\n    return ep\n  }\n\n  static FromCompressedPoint(bytes: Uint8Array): EdwardsPoint {\n    const s = FieldElement.FromBytes(bytes)\n\n    if (s.IsNegative()) {\n      throw new Error('Compressed point decompression error: s is negative')\n    }\n\n    // Step 2.  Compute (X:Y:Z:T).\n    const one = FieldElement.One()\n    const ss = s.Square()\n    const u1 = one.Sub(ss) //  1 + as²\n    const u2 = one.Add(ss) //  1 - as²    where a=-1\n    const u2_sqr = u2.Square() // (1 - as²)²\n\n    // v === ad(1+as²)² - (1-as²)²            where d=-121665/121666\n    const nEdwardsD = EDWARDS_D.Negate()\n    const v = nEdwardsD.Mul(u1.Square()).Sub(u2_sqr)\n\n    //  invsqrt(v * u2_sqr);\n    const I = FieldElement.SqrtRatioI(FieldElement.One(), v.Mul(u2_sqr)) // 1/sqrt(v*u_2²)\n\n    const Dx = I.i1.Mul(u2) // 1/sqrt(v)\n    const Dy = I.i1.Mul(Dx).Mul(v) // 1/u2\n\n    // x === | 2s/sqrt(v) | === + sqrt(4s²/(ad(1+as²)² - (1-as²)²))\n    const x = s.Add(s).Mul(Dx)\n    const x_neg = x.IsNegative()\n    x.ConditionalNegate(x_neg)\n    // y === (1-as²)/(1+as²)\n    const y = u1.Mul(Dy)\n\n    // t === ((1+as²) sqrt(4s²/(ad(1+as²)² - (1-as²)²)))/(1-as²)\n    const t = x.Mul(y)\n\n    return EdwardsPoint.EdwardsPointFromElems(x, y, one, t)\n  }\n\n  static Double(point: EdwardsPoint): EdwardsPoint {\n    return point.ToProjective().Double().ToExtended()\n  }\n\n  /// Compute \\\\([2\\^k] P \\\\) by successive doublings. Requires \\\\( k > 0 \\\\).\n  MulByPow2(k: number): EdwardsPoint {\n    let r: CompletedPoint\n    let s = this.ToProjective()\n    for (let i = 0; i < k - 1; i++) {\n      r = s.Double()\n      s = r.ToProjective()\n    }\n\n    // Unroll last iteration so we can go directly to_extended()\n    return s.Double().ToExtended()\n  }\n\n  static Identity(): EdwardsPoint {\n    return EdwardsPoint.EdwardsPointFromElems(\n      FieldElement.Zero(),\n      FieldElement.One(),\n      FieldElement.One(),\n      FieldElement.Zero(),\n    )\n  }\n\n  Negate(): EdwardsPoint {\n    return EdwardsPoint.EdwardsPointFromElems(\n      this.X.Negate(),\n      this.Y,\n      this.Z,\n      this.T.Negate(),\n    )\n  }\n\n  ToExtended(): EdwardsPoint {\n    return EdwardsPoint.EdwardsPointFromElems(\n      this.X.Mul(this.T),\n      this.Y.Mul(this.Z),\n      this.Z.Mul(this.T),\n      this.X.Mul(this.Y),\n    )\n  }\n\n  AddPnp(other: ProjectiveNielsPoint): CompletedPoint {\n    const Y_plus_X = this.Y.Add(this.X)\n    const Y_minus_X = this.Y.Sub(this.X)\n    const PP = Y_plus_X.Mul(other.Y_plus_X)\n    const MM = Y_minus_X.Mul(other.Y_minus_X)\n    const TT2d = this.T.Mul(other.T2d)\n    const ZZ = this.Z.Mul(other.Z)\n    const ZZ2 = ZZ.Add(ZZ)\n\n    const cp = new CompletedPoint()\n    cp.X = PP.Sub(MM)\n    cp.Y = PP.Add(MM)\n    cp.Z = ZZ2.Add(TT2d)\n    cp.T = ZZ2.Sub(TT2d)\n    return cp\n  }\n\n  AddAnp(other: AffineNielsPoint): CompletedPoint {\n    const Y_plus_X = this.Y.Add(this.X)\n    const Y_minus_X = this.Y.Sub(this.X)\n    const PP = Y_plus_X.Mul(other.Y_plus_X)\n    const MM = Y_minus_X.Mul(other.Y_minus_X)\n    const Txy2d = this.T.Mul(other.XY2d)\n    const Z2 = this.Z.Add(this.Z)\n\n    const cp = new CompletedPoint()\n    cp.X = PP.Sub(MM)\n    cp.Y = PP.Add(MM)\n    cp.Z = Z2.Add(Txy2d)\n    cp.T = Z2.Sub(Txy2d)\n    return cp\n  }\n\n  AddEp(other: EdwardsPoint): EdwardsPoint {\n    return this.AddPnp(other.ToProjectiveNiels()).ToExtended()\n  }\n\n  SubAnp(other: AffineNielsPoint): CompletedPoint {\n    const Y_plus_X = this.Y.Add(this.X)\n    const Y_minus_X = this.Y.Sub(this.X)\n    const PM = Y_plus_X.Mul(other.Y_minus_X)\n    const MP = Y_minus_X.Mul(other.Y_plus_X)\n    const Txy2d = this.T.Mul(other.XY2d)\n    const Z2 = this.Z.Add(this.Z)\n\n    const cp = new CompletedPoint()\n    cp.X = PM.Sub(MP)\n    cp.Y = PM.Add(MP)\n    cp.Z = Z2.Sub(Txy2d)\n    cp.T = Z2.Add(Txy2d)\n    return cp\n  }\n\n  SubPnp(other: ProjectiveNielsPoint): CompletedPoint {\n    const Y_plus_X = this.Y.Add(this.X)\n    const Y_minus_X = this.Y.Sub(this.X)\n    const PM = Y_plus_X.Mul(other.Y_minus_X)\n    const MP = Y_minus_X.Mul(other.Y_plus_X)\n    const TT2d = this.T.Mul(other.T2d)\n    const ZZ = this.Z.Mul(other.Z)\n    const ZZ2 = ZZ.Add(ZZ)\n\n    const cp = new CompletedPoint()\n    cp.X = PM.Sub(MP)\n    cp.Y = PM.Add(MP)\n    cp.Z = ZZ2.Sub(TT2d)\n    cp.T = ZZ2.Add(TT2d)\n    return cp\n  }\n\n  ToProjectiveNiels(): ProjectiveNielsPoint {\n    const cp = new ProjectiveNielsPoint()\n    cp.Y_plus_X = this.Y.Add(this.X)\n    cp.Y_minus_X = this.Y.Sub(this.X)\n    cp.Z = this.Z\n    cp.T2d = this.T.Mul(EDWARDS_D2)\n    return cp\n  }\n\n  ToProjective(): ProjectivePoint {\n    const cp = new ProjectivePoint()\n    cp.X = this.X\n    cp.Y = this.Y\n    cp.Z = this.Z\n    return cp\n  }\n\n  ToAffineNiels(): AffineNielsPoint {\n    // const recip = this.Z.Invert()\n    // const x = this.X.Mul(recip)\n    // const y = this.Y.Mul(recip)\n    const xy2d = this.X.Mul(this.Y).Mul(EDWARDS_D2)\n\n    const cp = new AffineNielsPoint()\n    cp.Y_plus_X = this.Y.Add(this.X)\n    cp.Y_minus_X = this.Y.Sub(this.X)\n    cp.XY2d = xy2d\n    return cp\n  }\n}\n","import type {ProjectiveNielsPoint} from './projectiveNielsPoint'\nimport type {LookupTable} from './edwardsBasepointTable'\nimport type {AffineNielsPoint} from './affineNielsPoint'\nimport {EdwardsPoint} from './edwardsPoint'\n\nexport class NafLookupTable5PNP {\n  public Pnp: ProjectiveNielsPoint[]\n\n  Select(v: number): ProjectiveNielsPoint {\n    return this.Pnp[v / 2]\n  }\n}\n\nexport class NafLookupTable {\n  public lookupTable: LookupTable\n\n  public NafLookupTable(lookupTable: LookupTable) {\n    this.lookupTable = lookupTable\n  }\n\n  Select(v: number): AffineNielsPoint {\n    return this.lookupTable.affineNielsPoints[v / 2]\n  }\n\n  static FromEdwardsPoint(points: EdwardsPoint): NafLookupTable5PNP {\n    const Ai: ProjectiveNielsPoint[] = new Array(8)\n\n    for (let i = 0; i < 8; i++) {\n      Ai[i] = points.ToProjectiveNiels()\n    }\n\n    const A2 = EdwardsPoint.Double(points)\n\n    for (let i = 0; i <= 6; i++) {\n      Ai[i + 1] = A2.AddPnp(Ai[i]).ToExtended().ToProjectiveNiels()\n    }\n\n    /// Now Ai = [A, 3A, 5A, 7A, 9A, 11A, 13A, 15A]\n    const nlt = new NafLookupTable5PNP()\n    nlt.Pnp = Ai\n    return nlt\n  }\n}\n","import {Scalar} from './scalar'\nimport {EdwardsPoint} from './edwardsPoint'\nimport {AffineNielsPoint} from './affineNielsPoint'\n\nexport class EdwardsBasepointTable {\n  public lt: LookupTable[]\n\n  constructor(lt: LookupTable[] = []) {\n    this.lt = lt\n  }\n\n  Mul(sclr: Scalar): EdwardsPoint {\n    const a = Scalar.ToRadix16(sclr.bytes)\n    let P = EdwardsPoint.Identity()\n\n    for (let i = 0; i < 64; i++) {\n      if (i % 2 === 1) {\n        const s1 = this.lt[Math.floor(i / 2)].Select(a[i])\n        const s2 = P.AddAnp(s1)\n        const s3 = s2.ToExtended()\n\n        P = s3\n      }\n    }\n\n    P = P.MulByPow2(4)\n\n    for (let i = 0; i < 64; i++) {\n      if (i % 2 === 0) {\n        P = P.AddAnp(this.lt[Math.floor(i / 2)].Select(a[i])).ToExtended()\n      }\n    }\n\n    return P\n  }\n}\n\nexport class LookupTable {\n  public ep: EdwardsPoint\n  public affineNielsPoints: AffineNielsPoint[]\n\n  static FromEdward(ep: EdwardsPoint): LookupTable {\n    const res = new LookupTable()\n    res.ep = ep\n    res.affineNielsPoints = new AffineNielsPoint[8]()\n    res.affineNielsPoints[0] = ep.ToAffineNiels()\n    for (let j = 0; j < 7; j++) {\n      res.affineNielsPoints[j + 1] = ep.AddAnp(res.affineNielsPoints[j]).ToExtended().ToAffineNiels()\n    }\n    return res\n  }\n\n  static FromANPArray(p: AffineNielsPoint[]): LookupTable {\n    const res = new LookupTable()\n    res.affineNielsPoints = p\n    return res\n  }\n\n  static FromBigintMatrix = (table: bigint[][]): LookupTable => {\n    return LookupTable.FromANPArray(table.map(AffineNielsPoint.FromArray))\n  }\n\n  static FromArrayOfStringsInRadix36Form(table: string[]): LookupTable {\n    return LookupTable.FromANPArray(table.map(AffineNielsPoint.FromStringInRadix36Form))\n  }\n\n  // x - sbyte\n  Select(x: number): AffineNielsPoint {\n    // Compute xabs = |x|\n    const xmask = x >> 7\n    const xabs = ((x + xmask) ^ xmask)\n\n    // Set t = 0 * P = identity\n    const t = new AffineNielsPoint()\n    for (let i = 1; i < 9; i++) {\n      // Copy `points[j-1] === j*P` onto `t` in constant time if `|x| === j`.\n      t.ConditionalAssign(this.affineNielsPoints[i - 1], xabs === i)\n    }\n\n    // Now t === |x| * P.\n    const neg_mask = (xmask & 1)\n    t.ConditionalNegate(neg_mask === 1)\n    // Now t === x * P.\n\n    return t\n  }\n\n  static From(ep: EdwardsPoint): LookupTable {\n    return LookupTable.FromEdward(ep)\n  }\n}\n","import {LookupTable, EdwardsBasepointTable} from './edwardsBasepointTable'\n\n// each string is a comma-separated list of 15 numbers in radix 36\n// the numbers are the coefficients of the affine Niels point\n\n// first 5 numbers are the Y_plus_X coefficients\n// second 5 numbers are the Y_minus_X coefficients\n// third 5 numbers are the XY2d coefficients\n\n// so 15 numbers make up an affine Niels point\n/* eslint-disable */\nconst oddMultiplesAffinePointsInStringRadix36Form: string[] = [\n  'yuw1d7ohv6,ola5qtbuuu,otp7yucl9y,eel1loivjl,niwkyful3f,m82pv8bwe,20jxbhurhe,67rvlup4sc,3bz0fuxjck,by7j4n28ox,2ysqonijjc,cehg3i7i49,e03f4y6pb4,7u8rkjn3se,j8m0w4201y',\n  'frq2ailels,gxz46s5gbo,b5aa5uikgg,ykznlfkz0v,l5boa0000e,347l7ponl1,lfz2mxs0jw,edbuo29w7j,ee2gvkgb9s,7eezzyyw8t,i81aass13d,bteze6jfdh,ailvyozgy4,6mak0o2ime,fm7k0we3yz',\n  '7kxaay9xcw,nhboz4phdu,uheea0ahwi,vrheeurh9o,tbkhe6zztr,46qlyo30sa,5zok62dgqa,4cvifd3adv,88yofi7wik,3oro8ffagl,ap1mri4l8l,2pgzzemq3b,jargu8y0ps,95gyia98jx,bpyqr4m56j',\n  'spx3qe9gvz,kc46eic4te,ptfkdlcy50,pmm0dv1b0z,c56yziv3yg,jvt0ojrgz5,6nvh5lhwel,138rxhmg79,awzdbtmwnd,53jicbsoc1,9i3yxjowwy,2fk3hg4j74,56ksm07bel,wlu2lpmwc,l8o6pnqdbt',\n  'hr02oe750c,ge5o3jqsth,s0lg0ous8p,l9t5w68ici,vazqjajg0n,gzp84xu3xg,j1f4oro2nh,f6prasj1fq,hemmy8tylv,crwnd7st6x,dlt6ghwh0b,e30hlvnowm,kav1ue4fm7,fa24ztrmq1,k1uavs9yq0',\n  '15ktisvac4e,rddovhgagm,fy0qknlrzu,lqfanx7ix7,bifpfmu860,kdw44w8vuw,ed565x982z,6590l3oybx,ae316ww59x,49u344m9gc,8sruvztk2x,bi13ys5b0l,c8g574sbte,cv2gdefopm,ap7za1r6qn',\n  'o9uxyv9cod,vfbfmqiqct,bf56j3ele5,pap8r9vd6l,6479gg0tbi,jewgn6k043,3btj8f7lzh,7i8wuca3e7,6g7n65qkwl,ezrwnxsle,1qscpkpp4o,ha0d9ytsa4,icucsapuai,bmiiwauatk,cq8ejgx193',\n  'iu5r5lhnkw,qpj1lg7grd,llo02ho3yh,9xmibug31c,gye4dq6iu6,ajfbo5w3kb,cj26raoadd,it3cgbu0ry,kfqc2hccn7,bq8fuh6ltx,6tm0eai6ty,4xap23rhdf,kd4go6hw3h,bfyn01dlft,e1tobl2cst',\n  'hx02gbaa9a,qxq3ecca54,ha55qiq2de,ubzy8tz22f,1534xj1z3wk,9rnqltgkuf,7v84to2802,hi3nx4x5ts,b69dcd5tw4,joqzx5zcsi,46q09qv4us,k3aavs166m,g9h4731is1,erw61jubep,cch1k0r08e',\n  'kqgabxlbfv,dnu20ziqni,zruqa25sqw,ls0ujq8jq1,g1gnq67nc9,emgk3codaf,a2ev4o4akw,4yptk3bcfv,9h7y7zcg03,5tg50j0u3i,2m8sk1i2jr,bqsies6qaq,ve0qcnjoq,563z0spa4o,ch39cvygpu',\n  'yz6vqt5upg,ccls2549z7,fuo6ojngjn,z8iyzg621w,10xi777yih1,d6jdqoigl,dts5af06el,5p2galm1wq,h51bdpvjm8,kmsz5qp0pw,87cujat71b,jxedl02d6q,i98j7hgx9x,8eovezbh73,fnjhvfi3x6',\n  '1085eflcsxv,czlyoai7u9,4wciwdngx4,q8tte073bj,bw8ywvn2m0,gah4tcp1eh,8xof3ddrvg,18p4y4xlyo,gzxggm81gt,a0qtrglbx,14kbhkqvsz,58u9281ya4,14wz9zrx5l,lktkxbysn2,3n94gveac2',\n  'axv9tdfg9x,jurj6cjh73,ibi0cmkon0,yttj1qagwi,14qht6c1spk,483bz3438o,9lq3bwy1ah,2cblh330nn,gakatd37ra,kwdfpugl0f,km6rfs1unq,7fkaudlzbr,dzhi1ksp8t,i0nwparsve,jt5adaqy51',\n  '6nq4vsekz6,s2cfwwl4zs,bv9eakscpf,r7ndz1juf9,l0eygd6ntq,h4v8uj740,csjsb5whm8,b75e1miunm,f423hi3yqs,db4h1tub8f,ir3gowe4wj,fnpq702cta,24hkm6qrhy,k4dep4cdqd,jemdvtkh54',\n  'naee4qp81a,kao7fvgmls,il1zozbrj7,ld2mok2spo,ndg1noik7k,a1ktpfqq7o,ces1bm0qv7,3lzplgcfip,5rhdjvxtes,3elpg8om0d,9lqw48pucl,ai28oxlqaa,4hg8wstcg,bns5yamn70,af5w7n0m27',\n  'e3frcj98nn,jxqp4ecic5,10w009a6l0v,apla2o383y,l8j0basrlz,95el11jr5t,2igc22c8f1,701rj40zlv,221r4zwmw8,1tp7uyfomv,83z1ufzd2g,gr5re0kiy,2286jvriu9,au9d7ja3yr,6zydddis6n',\n  'mr98nclixe,wgkkmbt0b2,jqgfx7ib8f,ibuhk6h885,uzvskmreu1,fea6yi6zzx,i5kdshnvd6,j7gric29pu,8z4437mt25,kj4hdfvrbr,e253fcb33e,11nf5knv4h,f3q0y4xu4,bzhu0dgr1d,ewr22x0z4i',\n  'ywd19ly9q6,nbdtngcbnk,pa0nmqh3ro,i97iixhffv,macyh5gxck,7r4aike2mt,kqiabxvlr8,b4pxmzpcpy,h7uj0it8tn,iyc8apfng,5g7ske2e96,23n72h1fa,n3tdwb73a,68l13wmc6h,5o6x1z5o4l',\n  '9s9nlfgome,123dlh2dq96,fwr2gflrsf,ord7n1o5wh,k9v17xxk17,2gz4iy699c,gk3v0atjx8,ezhhvr83xo,48zjaowtq4,i9nh5hr4vy,638isuo2ev,cdquf4szpt,1zxv2r4m08,cm075c0d2,epw412y4c5',\n  'gh73lsamw6,nq73q4a1h1,pyf1gxc58n,r6qdlz22px,wtpaqpu644,frdnyhcl3h,a1enkeyj1r,a9bttrf2ge,gjo38dbasz,kxx9t92lwd,8t8l4lybu3,11m5f6jthi,9xyvl8k4tx,34o9skrhhs,jkbrg0wqyw',\n  'hdqn96chtz,s6xplkk4pc,phr0uocbva,dng7v1g232,lhkogfzt6w,b9ru4rt6xh,lsjyzali04,eo1o0kb21x,6jqiw9as9m,b508dnpq4s,jqma6034wa,h46h366wbn,44h4uakuju,acgytivsre,5oslg9eo6k',\n  'lilbgzzubp,cw3l4jf26p,orefmiauxa,13c2j33ujt3,tptrgk4vl9,dud2j09077,h9yltwwe5q,bxkhslsxkn,huo5p42ch7,9tpjj5ds50,t2vka0lzx,g7lkyb3cu0,61bo5ux45m,cx6jvab5ax,sptmo9db5',\n  'nixjr0f31t,3z5iljkmdl,fq994pvt55,t2vizuusgs,l0utp5sx2e,hzggnikzge,2z5mnjks8e,ej0guqi2xx,8aol6t14a8,e5xw48m2ci,6j14wapx1d,g8mjzwt0o9,abhl0890u5,66wx4tj6xx,iul0zrmrmc',\n  'hoi4cnduo6,30s1vlrxmn,sssh46o8tm,rkypp0ea6n,ga7t5t78wz,kgg314tvhf,23die76xu8,6n7n9ty2w8,8mc1ekaude,kaejpt4cvi,dzi8t7fyjl,a61rafw4vq,d7o8r6ac37,d749aym99r,jkvq3j6l30',\n  'anrr6zjf0c,p25ag7porx,12ai91caoi7,gg2dkq67kz,xicih3tqpm,w1z8ofbt8,i3mwtzwxvf,5mi8hnu51v,g5b5ijoyer,2j8e7z2atz,f1tjl5o0i2,exlpcnwdfc,7qyv2jmg1k,ef4sfnbrsq,gl7wtu68yr',\n  '7zlbthbs7i,renlhq9t02,hf3bdblzkj,t92foykinm,8oauw468h1,hkkqj74lwl,49suqx520d,bof6fkfdm3,eqbcgzniqg,h1vh7g1z6c,46m8vf3xio,dcnr0za9np,416ymceh6p,4hiprsu6to,fx6jouqojc',\n  'oemw5db5rs,rdj35mmt1p,mxg84cjoix,14fxik5lqz4,cyj9x14j6i,fxbsr5dkv8,h589xgxeo3,6kh9thuii4,kojj8ix6kb,a5w54eqiqp,h9q0fitm2p,2fnihwjk4x,hwvtrum0ox,79d2p0a44p,a7w8kuy90o',\n  'hcs0sb3awi,6mtl0kbo04,k8a8ws3gj4,k36exobex3,txmtk95k0p,g0sfuchmji,glr617fhfc,cwbhuukksn,734a7qrn86,2yd34prhzm,2cfcv9texw,e6ljsluuig,202raasg0o,e5njk1307k,zzioie2kz',\n  'insqk5wz3k,j1nsc020ha,107ifl1u06n,oz31epigxc,71byjiqb1c,504x4pmohb,gnitxe51y7,lct14zo0pk,a6x5kxiipx,j2gvlfsbyw,3ufy35vu0v,dosk1e0e7g,dmapybao43,4ajqsnrzcq,ij56k93hsa',\n  '10wf58wzlq1,khxnbktarf,wcahofe5w9,kkvi8zy72f,pf4tdqbk01,2ejikb4ipt,cpk95d4qet,ilhlc8gdme,c5e05fr3eu,2dgvszt2ir,cgti6rb3f3,bay37x3342,8njv5euf7a,hvmij3xrot,8y6o6b2at1',\n  'otw4gj46fy,9e0a2bif6w,jukb0ihluy,ddi8b75xz7,rx2mq0qpug,m1yf09pnn6,39ayo6a3fl,45oj9q0qju,el2ina37vs,63q8pxnktd,de4zyzrt6p,hflyglpnxa,dqiab16xbr,hv0dji6plq,55b6cd5rtg',\n  'ppsxyuy9iu,6yoz7af3om,cxsmjwo6m3,sqsd3cn1tq,laazra6rpt,97dbsjnsdr,49qurk4ji6,gcq7td0yh7,jdqjar2v6n,8lsddyyzhm,9bp6u2e02,48qhu3ibr1,et8eo2j2ar,hccl0xg9zm,5c6x9c0qhu',\n  'hcmfu1tcfh,urck10gr5r,zn5jjudqg1,sni7cqmuhq,dwd9fq9f35,5asuwwn3ou,e1dgbswfiv,5sjfkc70qk,eqnwts1shu,frx8lgr2yo,8xofbesi7r,jc1mqaaxc3,6686hieia7,cbcpxp3sau,9g98idtp9b',\n  'd58ox9jwgt,sfn35a4dc9,q4fpaxhxfa,r86vqku8gu,98sdd8k4m3,2x65u6w1mw,k5sklfk8yr,kg1gfs7f3n,28qqca6pg5,frvt68uogb,fi8d3uxihn,dmopfieq2f,3vjdf9fh4r,lc4jgubvx7,fagc0qczxg',\n  'fy47gffz5v,fioe1nzw96,tvwco8x1fp,h34ewzx1of,n6w55k0pbe,a305d4bhye,9f9cd7xrw2,gn7ernvjgl,kp5vjtaf6c,anqa4u6xht,ifj9tmt7pp,gxgy1zmh9c,flhqdbaoqe,8400brfsz9,m3g5njae1x',\n  '6bmenc17zj,wtwuk66t7n,306pkjligj,phsbbkztx9,lwl048zlse,h2pj74maj5,2key6n0moq,1jpp0dwxqb,9dncspw57r,26zdhyfygl,by0hkbitcz,2tnkbg5kkf,kz37k9votm,31atnpsgam,bzm0pwxfhv',\n  'x31ep9rzk3,i5gm1mh5sr,fdko8svth9,ao9e048vpj,idjd0xaafd,4jb163320q,jdnganfsar,4w69dcmbh8,65rgythenz,lfn71gyvyf,gaxk4tmz85,k1wruyxeip,6k8hqbs0bv,fwq4frkba3,eus12nzoi5',\n  'm44eczuqsl,af4zdegxtw,eb0c4syp1i,1302ddbifio,g2xlxl71ww,9pqji09v07,eua4uwfkmi,ceu32n1xm5,kech4vh7nq,6upaz0bgmh,cx6wb3zsuf,g3noldwah3,8vpob2ld8p,5reomvrp80,c7s2lq5954',\n  'ms5a3os4tr,etunynf1qf,9t2ek8392f,69niqx8yh8,eqxcp9aljd,2viq909wb6,bet25bk9x0,kb4ut8j3fe,j5tix8msuh,h80zog1a32,6g2dnfr6ji,f18myjo6sf,jrcvnwm2za,lm180od7bt,eaodkm18z4',\n  'toqqpzy8sp,t2c0twsp2p,pg9aw7mh9n,op2viguj6r,pfahols9pf,g14dlw83ob,kesfz2od3m,g7w53ada5q,8faywlic5j,hb7c4qzgpw,fwsbyj9w8v,2pl0w930aw,98dhlpfoek,cxlg2dmh2i,bokgb4z9lu',\n  'fs8oa8qbnq,keiaaeg0fu,gnzs3f8o3i,ojtrxfuyfg,capr3kh9bl,3yifl880q,5vgq99zacm,lmjhr27pg3,33kfox995v,aumqp86g2l,dvgroggi3r,osrcul6v2,6rwue2umkw,cw9l1ws1rg,1h9vlnywj6',\n  'jk09yjv35s,6t6xuz9fkc,depzn1a0l1,y24qkcs7p6,ah0gnotoml,bu2hcywcrh,lnejoxgm2w,bujopbtlq2,4tf7606v62,lppesk3en5,k198nuarva,kgdegjo177,1gmcbhnqpl,esntqhegkq,4nqawz7urb',\n  '4nbdlgo9bs,73hwyp408x,ryx536vusb,v0v4yqjawz,rqdzc0g1w1,2hufv8r04b,1nnuhr7dm9,51esuu7dmf,afc2ms9b0v,g7rgc8gyk1,5uxxy4xcff,eomj79fkor,2vcutm1lt6,fg8ae61ram,a5lfr7zg80',\n  'yao322pm6r,f19dhmxkzm,rcpymt262y,4i6ref1vvx,at03wazwv4,ca0s2tj6zy,submp774f,5862dt39c4,1m0exb6o27,j7hapnm1p6,1vw4w2ypo7,5b6z2c6ii1,a24qbyojuy,a3wf315m1k,hgludctxjx',\n  '14t58h8j5rb,5t78q90nku,13pxwq85g18,m7leylg8g2,qkzaky3rwi,lq69wn3bkg,5gc87slhpd,1seiujxuje,bcqxlk4j5s,7nz98bd4r7,gsu2m4al3f,ike19uvid3,8re5gmm8qk,5f071027sd,9wwibm5au4',\n  'vlx4hm1urm,k64s4794iu,xidey8o2tr,94ncv4bdwj,15cpjtnvavn,9rnlko0fo5,4orqr5oncn,jfllqdz6xg,jxwi02r0ma,lhkfi156q6,d87k6surb1,cyhz41ar0z,ik5qo7gy3z,hdys9omw6f,lmz0liiges',\n  'ut84l1278i,17gzve0r8le,ipl63h3f8r,f1wvaabtw3,le62ka79ao,hglo2za5xf,mx1sehcdb,d475c3zbx9,7dbgivcvbl,8tff0ukel3,jp8li5k158,5dqoxtx8ia,453o9gjh84,1xae0lj65n,jaapfvwwds',\n  '7bf5c1tyg6,xl51qxter3,pikk42akql,nfnk8bkp4i,trayq2wcru,1mtn00i3jn,14tvrk52g7,airzskdu3x,i54v15xuga,je3bvw8ss3,5g4wqmxkbt,2b1g5squm9,4rr8qm5pl1,c73wp9je1e,jvbgosxx8k',\n  'pf85kzidhf,c9ck4gfhql,ytrn10j4ny,i26bg8tlxd,93itsyd59j,i9od14i61s,8rhtalkt9i,hdjgc5417q,1y5fxen5bi,gx0xkr3uev,cl2jxykvim,inepwvt9k6,9q1h2maw4t,1qvvj6xhh0,7p15nbvwr1',\n  'jnqiyc6j9j,bqhm5kemg9,bw02ba11gz,r8evj7cfep,ov5doea7nc,7yqdb8hxmx,9r7sh2j7ao,aoec0sn67n,ambgwgbsr1,2i7ufonmmh,62avy1hks5,5rqi5ggov7,6ttc2t23k2,jcdbvum730,danhah4jnx',\n  'wxjih1ixzw,73ct2gcjrm,ofduscqi72,k1pp5yaewu,juisbrk65p,d632arpgni,jjb3wf2a2n,7clwhxyp31,40e4oqdu3k,h4y3btye50,1dx974ivb1,agwi7nodl7,b6u44tm3cm,3nvlu9bgyv,4cw2ynxnxi',\n  'my6ybkqyp5,3pkc6nt45i,k0hx8qrwcr,ens3aoajay,cyxpavkgwv,cpb3g01bn4,lc3nx0ehcx,86x259d9fi,8kq770022s,krewnij9n3,iu0321hep3,8by8hkikje,k4j76j9egm,9s2livlpl5,45baaoxohd',\n  'q3rlduci2u,rbwk5gavcj,p0a1l2w31w,pd3uituzex,kwelqrqfjw,bd2t7zjnte,96a1vlnyyx,g82q84f5hg,8ivz5xcfc2,ao6i8uz7ah,9pmmusxdc4,ezmcx0odyl,jlphwa79bb,4xrxugx4l7,1ydjp3zcmz',\n  'eqfn3yrfxr,13apbwpubun,xa7xqkqth0,s3x8w1dxkm,wyeban4dow,7xkd2p6i4h,iml0c9yhmf,fmjpo5s9jx,73yxoqfqm1,3q1mtdhwdk,fn9205cj33,9mg28z7mym,d37533otoi,kditg7x188,fm6xmpckxn',\n  'oitm0jrpdu,jjvdx1nujr,myjgtjarqk,14tbbgd0eue,otmy4t1236,62aeofazf0,m44l1v2naa,4r1yzn9frx,kov0thhvho,c7v8fckmov,e5tbh3lqzx,8lwh39s77b,fyj20hzgxt,8j0y7rbinj,a8stcuy2fx',\n  'nntldk0j4s,p3e0y5hof3,ojl66ab4h3,n7xz8yniu3,vjpkw0fq8c,iug99xiee1,jgug8u5xmf,jfc4gqn8ik,g8x3n5dmnq,irkf3439i3,8g742g8scm,61ut7iwzlx,atrqcu686c,69sovq8wa2,ajf7vnnu3w',\n  '103qguqczpo,zb04kw3fq5,nd5mmxh498,pvqyjfbcwz,yajy3rpsou,jmvd2xikz4,ln51ch334y,m99c6erhl,ezm22zhwtl,9d6hwibwcx,8e43nurbv1,493bemt3ep,3nf6pex43x,4b48jb15tl,66k1o9mwgl',\n  'ho9balwpdo,pgzbfadui4,d0u7xt9bbj,8fgv5vi7pc,q47isompyp,96xif0v2am,rnra14k8d,9499g30imd,ehnmg47wk6,bz6vbi31k,ekdhzcug57,20a17vbd2g,6hw0yqo1k3,fq1yt4muj,cjfzllmd0z',\n  'fofrvr3fh9,vryc1c9cwx,n3bgjlbdt9,pdqi1vx2f5,svud70layj,lihyqu80j7,exv7teegw2,fc8rvsclcu,ldfc0j4nq5,7cwfm4njcq,hy9nl4872m,b6m3j2x4g3,h1of0wd82t,a5outw7ye4,kwpxh0g17h',\n  'd96n9evb59,k7m9xuiuy3,gx0x4jbsyc,oj6lmxy90q,y7k7y4l2oh,46kjemqtxp,2rmgxochzz,662aixugk4,9qzt60m1t0,do7puyyvy,1w7b69q5qi,adxdndzrjx,5r1mwlrj64,e98okzefzp,l0o2dkp81c',\n  'v7mu0s99qv,yhqsvwzix2,5x8yjg23yv,e0cex24atn,kvu2dxjdax,fsc82zd6jz,kcdxd5vek3,hmdbfdvigm,l4l7pksruu,jjtu8gzocu,3gzxsy8r7o,8fr7483t76,7tf85byb66,x5t00s54m,c15zpq3u7b',\n  'har9bt55f1,8z6jvmz57l,qnqaviphq3,13gc1sfzyga,83jvqvwkau,arsxe6zn4r,ioi5q7lu3g,eszfuxcmr4,ipvazwtka6,2w8l5vcmv5,5scksevemw,azw76qcmmf,3dq37xsi48,97z6ejwjrp,g6nqtysir8',\n  'y8rc5e30ei,2mzwb06wec,t31080lj1w,w0v9nnpxxn,11ans137o2l,k3yiz7mfuj,ernfpnjrv,gi7bokk180,d4uoogsv0a,hdw38e7i7q,eb6oeby1h6,fm48jnmf51,egtrg24vdb,cqwvunfmz8,k4607addbf',\n  'htm6bblpft,ddhqxcsvlz,jl68jep7rb,mt1rrs47rd,tqdvr1zahn,idhd4ywqpo,gdmsr5xsdo,e5ma9u2kxs,5at6tqxn0m,bxvby5tgyj,hf53cry47d,fdoqgji3cq,b34ow2oku,5a2e9gow68,jghbivvd5r'\n];\n\nconst ed25519BasepointLookupTablesInStringRadix36Form: string[][] = [\n  ['yuw1d7ohv6,ola5qtbuuu,otp7yucl9y,eel1loivjl,niwkyful3f,m82pv8bwe,20jxbhurhe,67rvlup4sc,3bz0fuxjck,by7j4n28ox,2ysqonijjc,cehg3i7i49,e03f4y6pb4,7u8rkjn3se,j8m0w4201y','zrpka7v3dj,7sbrcgoldv,kcrfmh0vw6,jngdnwzuuo,ffaecgsnv6,4k88ogi46g,49hadqy2xf,fuxafdco3o,7e669e1ryw,innyjc2u1e,7dascowxnj,a68qwx78n3,dqubw8eh0v,fv8bqjp8g5,jf2tu0y91s','frq2ailels,gxz46s5gbo,b5aa5uikgg,ykznlfkz0v,l5boa0000e,347l7ponl1,lfz2mxs0jw,edbuo29w7j,ee2gvkgb9s,7eezzyyw8t,i81aass13d,bteze6jfdh,ailvyozgy4,6mak0o2ime,fm7k0we3yz','976bdqo49r,i6o7kyisy6,bjkv11el23,9wyqgwxvr1,i0w0oduamw,gom08balz3,h3bs88zvlr,6xxchgwc9x,6dpia17pmr,6uscau35ga,b1i6z45vk9,1wdab57cci,1vgby0s3j9,jmvf5zev7s,m3sark80nn','7kxaay9xcw,nhboz4phdu,uheea0ahwi,vrheeurh9o,tbkhe6zztr,46qlyo30sa,5zok62dgqa,4cvifd3adv,88yofi7wik,3oro8ffagl,ap1mri4l8l,2pgzzemq3b,jargu8y0ps,95gyia98jx,bpyqr4m56j','do7rqc9jxt,34a8sjcu9t,q1yoxvgthy,c40ypqqa98,e6p5gi72yr,2m6pd0of8,1fts58kysz,302urp1gne,bsyoypjlao,9tngdr3z87,bmqpyk419t,14m2btshit,2l5mzeky2o,2m6qi9m8hw,2wa1bbu2ty','spx3qe9gvz,kc46eic4te,ptfkdlcy50,pmm0dv1b0z,c56yziv3yg,jvt0ojrgz5,6nvh5lhwel,138rxhmg79,awzdbtmwnd,53jicbsoc1,9i3yxjowwy,2fk3hg4j74,56ksm07bel,wlu2lpmwc,l8o6pnqdbt','16jgl91bzp8,15j6ks3tgdx,9fhif3p6h8,76qaf20ai7,nqupotu3ta,kf13c5xmft,azuwoqpn8,2lra2g7d22,2fx5kaqxiv,a56zc86msg,5fld5lo0ey,jl8dh0lgxk,7vzo5h3dtx,k7j7dsp6dj,6ohfdu4z44'],\n  ['dh94ohfifx,tycn8u1pll,qha367lj2x,l3h9zz7ob7,j0v63797fy,9e1biswn6m,ar77a6qoq3,dz9niuls0i,7xl7ctwsdp,8gkkcm3goh,btmwauwh53,7514qfds8,efiv5xmct6,g770la6s6s,2wm161yxr8','h39e6n1w4y,cagoklpsic,bv1rxwuk2z,9lzirqtx5p,mtkkpb2zr4,afruobzra6,fmhdqjnd02,2395vmts1q,jg6pjdkc9v,6kc0syvmnj,ar2temfuh0,fhjo0h9luq,sp86x9vpr,30gyrb7wfa,eyydfd7dda','10qzurpzvlp,evnq937me7,yfa28ayg5g,p68gaoq5vc,pt1lomuhbu,l6kzhf7r5g,7i4eq3ko92,gmden4taaj,83qu5uvq2n,8xpuyf3mpv,k5qkk8llg4,1npu3bjkwq,fafobvmq9m,3cuut5imgt,3jwe4rm8jp','jis49op0v9,ju1jn7jepo,nfw2mjwkmu,123nm83ftra,n7iq2u5j2u,9ngpfvgqma,guxzvxdz3c,5srd4n7cc8,20f1kuh4ta,8ae4t5rdqw,1y12ekxn19,4h7w66ddp3,jc3ckokyvi,kt4lt5a578,9kboobjzo1','nsksfoqlxs,m7aza9cj1j,xzdvj32uz4,he1sm0dy6b,ip82beuzgn,77kcybzftl,ghj2lrrilz,lhm6mqkrx5,dauohdqtje,5hyggq6g7j,kpk50tyufe,jb1rae3nxw,71hsavl7y7,ebpsldplxp,egzqbb2ut','c7ahiyqjf5,h6ff20410i,7gxr2ptf0y,13v3g2tjhxc,m6rizjv8ph,lz74dsk7f8,9pzfj6a1wn,ktwyoy3iql,hwzrtbwrxb,b0rdx2s96q,35hgkho0tw,992cnj1jf1,6bj12nrz8f,j04q998c7k,38ogomgl1q','vtwnssh1n6,c8fbfb7r38,cblmi1qfrg,ap69q97pyy,jb9oy3z71o,2q4i5vqs0d,f4rgiv2o8u,cunqgen4sp,lsgpzcven,k75hlmu13m,87fllxn1tx,h8f33ur9pn,b26yhl2khz,1tqv5htj3r,2qkp5u3hmq','7tmvqshpad,i7qjolxq66,mp3ulfhl4p,cj0m1oqvr4,baoo9bayzv,etf8rdk7yc,bugmszg495,5j9fa9j8hm,2p8qujissk,cn9figu4wh,4r85ivc4j4,ku2xy8s9w6,aod0vdyax,2vnyedwyof,bdwhaxjkcx'],\n  ['vb9ytzdhnf,l5akheyksj,ebznnnm4c4,jk8mqzojyy,nzuhhx50h5,1ctlndaym6,6yhs52ebkt,dnnwi0noff,jcrgav8zf4,dmv1tosst7,4qjuybh5l5,k7u9vc6ee8,kc4gpo98e0,631o9u4zyk,aw9a8d1qal','t10hg4c4d4,uyuer1zywu,bb5of9crmw,mfo80opxpt,lp8j934ex4,6h0wyj2ylz,9txsjvs0xm,9rlhiav77p,7zacvfl9l5,3dms9021oy,7snasyzbhc,97cibxlx4r,84be3f1ec2,hboe9cuolv,3k5gr7bq8u','jwxio5507u,16speki3txm,11fzdtrcjkl,ok98ohurar,t0whu1mhgp,codjgcxanb,lt9g988l3o,fagtgcjdaq,ge55wqkls4,b2s45fi6sb,6o4p6ssdwm,9qrzxc3ghh,hw83ls0dw2,ad81uldrbk,b9gajp7kqu','psdqdinq91,pb2jtljyub,t0ry9lxexm,seylhe8j6n,mewr6urg09,7m4szujz1m,hvhyo4g192,3ky37kfo6o,5ba6ldgut9,7pne2aulmd,1s3fxpb1py,1nvt14itki,7dahobfaw6,c319824nqk,ffnvx6itik','qvwp0ba5i5,kb8hmjuiba,t23ygncn87,pp4r5f8tpc,ckro8ei0w0,jjj5dv9fy2,amj56h7z1h,aebtidorb9,gcemflo4zz,apuncmpkaf,5puqmbag33,i59iusqq12,bla6w1j0b2,kfota1xuvg,ct7ofzdnez','exa47nndi3,fidsx13bmz,evc5p0p4be,o1xel2hrfs,nbjs7f2yk4,cr56nb0r10,gvtpqs8vma,5de5e0y1dh,k14ztl3dlk,ewegkpvwkm,29s2yltw3a,axb7huzwx,7hnaqdh079,3uhag68u18,5n9lpyw778','xopgcwupej,orhbwtik0d,16396kx0h2n,u8trrclfsf,163lwo7so60,kp6qaxlshr,fgtakbrn76,carjeb4kw,jmj9r1fe5l,p1ewi6t0n,8sxyyp2no2,5ehm7mrs4p,8bng4igtgj,j4h6d8ls0b,fwpm5s2ww3','yumy326k2y,c1ae74862f,i6iu0u8d2e,bbsio5eb12,fvy2f0ulxb,7t8dni20g2,cyagn3icqb,jf4850gtht,iq52s4r8dj,3bwmuovnd6,5f133dkuym,7nzqbl1kx8,kblfo5gtxj,14xw81o79p,k3p91wb7ke'],\n  ['728ujlmhj0,542xg70llv,khfxrrrq8s,5c46q8xkdt,7mh5fw4v5c,2krqb9m34e,hoeee5g5bd,eqlk9sxvxn,4x559ap8ik,3twefztckq,jnyd55qnwd,gwqfna81ep,gl1f4qxgjo,g6wewru102,iadvqgkzmz','10p6zwpv60l,mxgsku1nh6,x61ksck1oy,jpuc2se4nt,tbdqmkh602,jwuiuek5hr,75g7szubab,33s3ing83o,afafdkho9x,e9cef0yqyt,gu6136t8m9,inr6l79wbx,17y7fkavhe,ba1wksh3fn,fttc92dxde','rp9oi1miih,ajwblcnb0c,ngt37lkevy,j63v0fafbi,ubqvyke0ff,f8w8v1hk09,4csangzcq4,9tsc750itc,5g1hnxjipt,6ckk7f1xij,e8e9q1rakg,lwvpodjoso,907ip3u661,ahf9boas3g,gcix9x92kj','xzg8mt2ry9,mepoxd00lg,mttfre6pis,mqmfn6wqhi,rqi74zk76e,8mueljsjdk,5glgfurhg6,9yqs90cyot,89qp4tdr5f,dxec0xxfbx,6x7jmcfi35,ch22wodk8a,1monltos2t,4smgulww7r,9yhgp887kw','fz982kuprb,bdwofrmltu,14kqy7771hs,pe581svl1d,kmqj6nxvrv,3apgxi2awi,4timaloa3c,19s7okrfd2,gxz4sjzoah,63nyc8ayue,g7ngp1w0iv,hbagdw5tzj,71ctuy4m0d,ei0y4fhgnj,8uo0i6si9d','pgdm4rk23g,p31el0h4g9,go5mderafd,8ze6s379u0,qt8h854asa,hu0k21oczq,aix1yi512a,2unlrpvzmn,jl0xsj1juw,8i3v2aqnkv,8x90ef673c,krgmukw211,499s5qqsi8,1he4jqg4rp,gtrjtz0kuj','944chbyjhh,mdsdbfzofg,147dwxjlae3,5x3bptpis0,ptzter8hhs,ekjgb1s8zx,h4draqaer7,obzmkzmvr,l4vfq815uw,ca9cdvv08f,ig0oo6rlk,996vz5xqiv,32lplj5a0y,l81im0hy3,c4h4hzxlj7','si8vt4qr9a,p124j63nml,jtqxhpuazi,pbi2uku6pm,q1rioppswx,19uqeh4kuk,j14hedgpqh,bl4f7gih4x,3x3d7n7kpq,bj08r5quk9,k7d6yhfd31,1771oaxr0p,k62lr5pobr,c5uorc37z5,53zpuw0jpv'],\n  ['1208u3kae39,q9l6ljzisr,dap8me5rq5,k2mp4jjwge,wa7byme12w,i3e7jt0ggv,evaq065nhi,8x8rs8kurh,hxihccw0iu,5kepqvog5p,5ow60y44lu,k19ybwoli2,kyng07k2j7,4pq54f4km1,lmh7hfcd1a','g2x0lft8tc,ukhfklfsuk,f8znpwgy43,cguusz2s9l,x2o7ko1wi5,4jtyuynvsm,hknxhkwz24,fv64rbs8mg,cu7gyvnw50,6yti5msjwg,a88fl043sg,dj638puel,7ezg785ga5,b6peazqb22,5v5te3lrpe','101g8dyb7p6,lm2266qmog,ln95gu8y9t,agfmt5r1y9,g75mjgz01i,1nzmtslag,g81fuu1lzg,abbr7ein8l,ixvdq46wi1,21d4uloe29,h8hr0ww1vv,dezgdbkz65,imk4qzjfli,9iggin7g72,a3auzi4zrt','o9lb5bg2bc,b0a35ca4xq,ig9ar35vrk,zzswpny9mi,nglfdtaluh,69q9sv1fqy,cfevgm1lk8,3ukwl1s76v,gdmsx06kem,5j70vftk9q,54l0sifqil,e8o5qiobfw,2p1cihnrwz,fes5pm3cm0,a1cnbtd5a8','vamfenucwe,xwo8hd0xf6,789i34xkvm,nzfkun7vh2,13sukyxepum,ef6btlw6n0,elxvi4wsmt,eylly9621p,bfoxhylow9,3zvurxi26h,9t3i9avt99,7u8b4j60v9,1978va177x,3dzr23mhsn,623jnqcr0u','tg1vpluba1,ljtfkj8pxb,jb872ugg1m,eu0xl7yc3n,xiar83fnv0,64t09vg3ij,c03fwao5jf,cnfzhg6osg,9k0ihpx5pr,3gfer5pkyq,kcz8wmdn64,gir007f8ec,kjgplqq6kd,2beh4thnme,dy1hova7r1','ry7r33f4jn,p76cjwcssi,4ihlr92fmp,s3m0sa6bp2,wasb2pb07e,6oi5yu0qx7,juufpddzy8,w8yfkwg4c,a3zc2djx1y,623ftl246y,2yrx6kpe9i,as35aquv0w,bu6bntua9z,6cejktn8mx,g7tz1aer27','bx69crdgy3,dy58vclrs4,sxjajoo9j4,yfk3xcd57a,witus0wwxk,b6jdb4r533,gkorhkms82,7kn1mfx1t7,kjo3ak9fja,8v6j1awt17,jeuf32h1xo,3ygqomxhns,4f0wfut2an,dvmdbthx25,byludmjapn'],\n  ['dfiexkbqrj,ioluac0wsu,loxl40yixv,nlralha22b,dah9zg04oa,aai46jf52t,8212x8uqj3,67hxrdeohz,ggovkkeius,7y4oemnzut,4bybqkhubx,3syck2ujh6,dm4miizmko,31ujc6g5gv,lqllxpyozr','y9ubifn1xw,v8jcjxuyzy,ne54ajlb49,svqoex18o0,dsgg0gkpe4,jq9xfqdvr5,1oaaxzopr1,b8ht8wu17n,emjch868st,fhuonqae0l,76qa1xat7s,ciaigcl0s2,17q3m2fr6o,476145xt4e,lm9l0mctr4','cikxrs5dog,k4nzhbda3l,moo8mja2v5,10eg5moawj4,vgasd49u6j,hcfrqsa9sn,5qs89uopzo,fmfuuovgfp,l8m24du6pp,biz4nej2fg,8kwunchhgn,ihyutarbr6,m2nvkzcgss,5el7npjpnt,6slnf1f1li','p3jjxfhqoj,dgbvikbar7,yzfexbp2sh,5j5q9c55gl,f3llekyd37,9uc7804l5f,b5k1zz9cuw,kiz93qkma5,4md9cyarss,6olwllthvn,lk355o3z5q,6w24kkzkz3,42b9cjvo9v,ejxu1i9ufp,m3o5s23j5o','1315inxddn4,o6nkuzdill,100hlyuw3u0,q761yw8zlu,unfa9i6yeo,509prpl4wn,9iqwt52j9l,m0ulz0gng4,46hkr7zz4h,kkl2qv5rtr,26fanfol8l,bdrwckiuyp,4u3h6tydm5,5c9tfb229z,85jc9i001z','nop5j43xds,csrlxp5kw8,q1jdteso2e,af42745vml,9teifw4x27,5i6gxp59u9,5n6a7a2tpj,g1oyvp513m,ds70ar4doj,g7soe9pu46,il8695ya7v,28zyol7364,eghr3umska,95usa8k5gi,61h0f8s8m6','c22587dea6,fj0aarcuzh,lqap8u0pgr,65uuon03rd,oxf8zg6evy,alifr1t23d,az1htkb7az,1ue32xhk7t,2grxpkk6jd,ik8r6qvfyk,8vwpkc3prv,r7edmpbdn,gbope2cbhy,dzfki5ty9e,d73r9cbkzk','b4egc9emzx,ysmigysabj,9tcnxfine1,opltbhyyg1,xi50331xt5,66vbgzdu2t,j4qzka97xd,4lte2xl9su,ark24967tb,2bg3mtqxt7,2c5rqc9xo0,4mgppfwclx,ew3i9ntitz,c85l7vadcd,4cj9kfhoxq'],\n  ['139pdy5l620,75j7vms0l7,i1v2hk6yhb,g1l7ku790b,sbj8n7udz9,jb1299poa9,4w6pgp3yde,isz93l8bdj,cionuyynyy,luuh0u37bg,f4u182kqb4,ddoe4rzxnq,kzbhrczyoj,85rezzzsn5,joxpn6dout','66z5yc2pc3,atif0mw30o,8qijiipey0,106n6lgjqah,m900xomxl4,hu588vprfh,esdf2oo7nd,lspowuv9pj,3jghlbrh78,cw4endbmk,25lgjhnurk,bwns91mydi,j578vwqucw,b4so3sed2t,d7tcotnpjp','dhm6ond6jh,dr0dvf8u75,13k2i0tg0w8,lp4r278g1m,w02o12vsop,lypuarnc21,d9vy7iruvy,le7obpi0gm,e1nyupawvv,4dgbo21nbb,7pz9aoau7j,91h5cp3kl6,cnc0n72eex,d1iat7vtb0,ifq7dtag2c','pbhylrlj9i,s1k70vmdp1,k2djkocszj,fbzkl6tjf2,3d7g6pup9a,iq5iimhotn,jqj5l8whmw,g0bbtubwfg,9l35e1fdmv,kfmm01htop,dia5023r2p,a9h5353i21,j75zcarar2,hmxbz9fvmp,dadgh4wi5','6rlbepw3fw,anq6gzt8kr,sijzelpwu2,pj1ki9vk9q,pjzhn85ywz,ki9f1gshsk,9v4ntfjha,1fmp0hzsde,gn8ph8mfbc,id6gujuz2e,afn52eoflk,layy8mw4vu,e6jlqe5u20,hf3x5bv719,8kbuj0h2b1','120q03i3kcx,7nish003b4,kos9pzofo3,5f88nqm209,irgi2csj6s,jxqmckfoa0,47c9ihvhut,5uyggfgi5d,4n9dvxhgpe,5wsnz02qko,5w53fq475t,egeothsm78,bqi1xopawz,es6yt2iiw0,cmb7pmugis','gy3c3uegzk,cg63zj3sm6,qfpdnq9o13,de2q21a6c9,11ju0bj3e07,731r1crdfr,3vfwlqx0bd,1awwxnhket,f71l18k295,hwz2nf3p8k,3wiepcly6w,hu2krabau7,df12jjw8of,kufbz6h0h0,4wjgyf3fx3','hugu2jv1j8,ia2kncxyst,18v9tew10m,wdiivbhjng,jg48418np1,6emkiaqrp7,b787uieytr,kxbu5ivc4z,gzp0chwhhz,l0r8ae4m78,558nrx2d2r,c861t4299u,h63a03skm0,lxjrbvu5jj,glwgez6rz5'],\n  ['47ogs4k06t,grqke30emn,flys1y8pyt,10bkc442tg0,to0jqliuhl,34ra0md63e,2fyh7ldkgb,elahe091x3,31mok6d3j1,ce3um93dp3,cjz2eel5zi,523mvzur0j,3g1e1f430m,6s0zuvnvl0,grg7uq10nu','wmlg5nztw1,vn24o1nf9g,pcaatsgkv9,wgtwunsfa4,jjo4841085,fcjydv2lf5,jbse4jyxkb,d66fepetl4,es7fzphkru,2wda3v0poc,8231bbb0wr,ic32gswspd,666tv4cl8b,5ncdt3klrs,h87p28mfe7','jkp0zxfstz,wtrtpoac3c,i23tin1790,10hw0sl0xdz,6tmflwlqa9,l4vis5v0b7,5ragb8hqy3,4kte9vabx2,li5jn0ce73,2chu75s2dy,b476o0vquh,ln31ksit76,2lzgwevz21,9khwddiqne,jj62hvufiu','cpr1my4hz4,pxetcmeq7u,guo478yuuz,hvg2tpwbnq,uyhe864rir,4dkuz6rvv2,easj6pp67g,kt96thcem2,6cp7eg0cz7,7z8es0btc8,m2z97xh7j8,ditagbgvng,9ws4yefv1l,l55xybu2ts,bca90hu4ys','13d03cbgv8h,14zug1hjct0,k8wooiderd,po43nx7kd5,utuwityxp7,1m19j0qluy,14wxgn7fke,bdrulk36zv,inp8fsa0no,jei1wmkxp5,6pqpychwj8,2mpu28in74,dja93viahy,6ad58q8adx,6d1udj332q','maxsmezrko,n7uraqyjb2,j58ikca9ea,14b4ezyifgx,ofz1yrogxg,2kekizif2b,8eqlvz1yyd,8zuw7rrw40,1o193kybf,2rcba6e2dk,71kuoswo9r,bjwukkkzln,hscxz0pu2y,inkte25783,3xeer7agj5','r3fvijdep9,11w30ynodgq,dzhdq4fuyh,vvfahvn2vl,3v3ypn5tuo,kn4arh23wd,ixh6vgoy1n,7ryzd26rvs,47googppcb,35rafrlxc2,izc5n7928q,emo3vcru33,i84fvfokhf,5fk5nosh5o,kxmcp0awjj','ksocyhxpxd,theyvdcvo3,m8htinrto7,j7m43v7qcj,n36zonnq60,3s2zm4wz8q,8gtq737sla,8fak6f8k98,a0jh4sch6r,7tjdsmcn8x,rhw06iwu0,9u8221tfcp,4sxb429nmq,a7y8x9hycz,3c6sxt1j2y'],\n  ['stgmvetdsl,oshxqfdspw,854o557g3p,du17nbu8od,hjlbhs07v0,9uyymiymm6,3ffb4hkoiq,gerk2j8mlm,8qx4t3l77c,5puvsyutcd,j3illjf0dd,dvrjqg6doz,5fvdbusr6l,3s2c8y6q51,1vllgb5gp7','lfpo1adpc5,e668s3xyhk,y2f6mw7vwp,lyor0d4obk,dr5kqz9sih,6nyo2tsytz,iii2nnjjbc,k5i2nhjcwi,8qxmdpve2j,czardejcw3,eg01ji96hq,62q2nr5sv9,6f804lw6v0,7gfwjhuinc,21kydkctxi','111tkfxo68m,n7k42xn570,r13rewd5nx,ar27vuaug7,hr0cwub4dv,i96jrbrr9k,ihxicpf8qz,f1muklplso,a1fdxl5vq5,b3zxg778ff,jc5pj24f5u,2w0s0vux80,6vdtpnr4fl,9pgsayjcfw,7u8toxff10','q9xgi971q8,q0bfucmka5,cxxybzay03,h83r8cjad6,xm22m7anfn,e2b6qqm1ej,a42y8vtlvi,3021vsvbz5,4cgt18qq9w,hwwpouvy99,20n9pmuwqv,fb5hhcd2xz,24pt18ibiz,2lmseojppa,k5mvjsn83z','j1oy2es85z,dpvmbx76yu,r98xq45w68,xkkac28v6r,nd3nepnpi3,6io6y57pa5,2tn0qxnylm,b56hc6zogo,824r1u8wa7,4nn7dmqq4v,6k01ayujpm,in2qpr6wz2,7yitydkgaa,2q46wirbhp,fe6s2kwtf0','9b1p8dezrp,rcqv4m7zjz,d1ds4ojrul,gew3jtrz7c,nomhcnepxx,k02zmeeb18,20b6r1o4qq,1ofkq2h6mz,9nx14id1su,8b0sj29z6n,ejeexq19q2,8988bkcq2l,iakxivd844,juywdvxfjs,34eb36pubz','ee2u2m3lyv,fre3i57nmf,l8n23c4ict,gg6y5n3vd4,nfhh933udv,cqiton6t6q,l3unjtkl82,af5olas9tw,23w2v1tqyy,9bn6ku6bfd,3ikir84et0,cpkscgl2i7,54rkwtggl3,epxa8yvrfx,7vwrujxh0t','rqv8yfg60e,82r4gp6ngr,9siagnzmuc,pe5woocwyl,n30mf1hipr,62srsevzm1,g9mftsst67,iabrw85i3j,aot8ggu1kq,81r7fbpq7u,7lkzrvtpz5,d158anuke5,6p7saejp60,8duyqfc575,d06q2rbu61'],\n  ['c06wcmx4u0,sjljw2ft1r,myeuszrf6h,la9me6lxdn,q5phjhls9y,d2q47n1zzu,d5e8me8cyg,dstk95usqg,5hucqouw54,f9wt743bmu,4418r4owys,e2vjpryn5y,3wfc6equ4r,j3u7yw9qcn,23uu9i7kmg','chhh66n5f6,le1jhs4tdk,f3q7bsxvlt,hcbr3jkoru,11u0wiolv7x,g0qyz7sw1z,lry4fgp0eh,itvmgsvrso,bqg3s34igt,ljc48aysmc,bbc77xq4hp,3q8h13kdul,85o4jpyt8q,lufnkcq93i,p21oczeey','yywyljyzlq,10c55xaral2,11ax659hq6z,k81n529ijh,w3ngs3gqz2,k3djkz9u52,3xmpbqkio3,687uexyiir,8lbtuhc9tf,c5wsi3iz89,lrueivv6os,l2hop2v8dr,98qrv6z6dy,4gwsqo4ve,khyypexstp','d1o62kz2sf,phna3kbmg7,bnoxlidz1c,wx5ls7psje,mngvqkahdi,i66litdgk7,c18e4gu2ly,1hgvfk4bwm,iz2oxltree,bpseo6du8r,amo6tb6ssl,lt9sejajnt,iqrbr8d8b1,hdpw9iw2c,30d27vja6g','n3qxq70yii,ztj9wsfgw6,wmouk4gkoh,mj5j7duqy1,udph3plap9,e3luzdl6zu,4c3gsl8ivd,dqpreqnxbx,jgqrm9gsgy,978hhrvgyg,crm5fz8hxa,kd53pnr4ie,iatqpzv3t9,eoywsuls70,m0js13eoyq','eoa09tgsgf,iavyxs3cbs,10baumefm3n,p2m3me745a,y2g2eumw1w,cmlfc0kezw,7az5ktbosv,jys1mf9kx5,53yshxz543,hzh91y0lpl,f0uzavkpyv,74iwyybwjz,fqc6c36vi3,2erwj6sd44,espkcwb17b','nagzso2dce,ybiqwzfiv1,st5ce1wiqn,kth0rllnec,ntb542jiyv,k3plob0io2,lib1y95zb1,g2zpw6h8nw,ks6a5nl7r7,k608jkc2lg,4ybi04nkx0,7hi1skoayx,jykd4o0tk5,6kdqju5rln,f5lfjj7my0','iv83n889pn,v6rbj2hbj3,8p2obkib7i,3ktogj6py8,jgfzkfztop,6ocf28xone,5m986kg93w,ft15v9yw2w,l5bgi0clrp,gsqyvziyd4,e698ey8w5i,llwwha4347,871yco426s,5j1jmt8foa,5r6qcdo0mt'],\n  ['o0tzptdjou,6ph1rgq4fm,j1d6omw3wo,ifw816d12o,qz8h8wy41j,dx15cv3g8j,41mr63ymgu,dradx46fag,40pcykwij6,fp83kv884j,kp5nxmgh9d,7310jtbfl8,ekhpkg9t8p,at1i413u98,ctndfl4yhh','vg4pkib5wb,wp8ih558qo,jrjk5tu4iy,mvcragzqkz,dz5avpyvw9,baf8xudndl,gd4b2ov1lo,405mzusoyl,5k2xvawmdl,ax5a1dqvir,lsy301fied,bh729deqbt,im3y4lc9lk,19dpvcw3p,4cptd63jct','tlenixg77v,gevwkz5nu2,f2m4gjt35n,x775hp8niq,lb4nm15fe3,62262tfim4,f05qr30w14,8ewznm423z,kcq3f7eckb,hdr7hyvvi2,arzc929h1f,hou728leah,8kgu0didic,jy00x7p215,gq8ytuevkg','j7p2eo3m8b,ivbsabhvnf,o4e22f9x56,ispltby3mi,j35m17z6fb,9zjpn6rk31,8k36ai7s3i,hagbtx1qqf,d578ql7hdk,f7my3xec8q,7iu2fu0tpt,fsfbf9gdlb,1g1dedf6ud,i5eei1kod5,9e9i4nspyz','sebn99z1v,7j07c6e7z7,wk7mvki2mh,qsj68ufl7h,s980r2kwii,qeni1cog4,7acak65905,h6n2wql2od,75yb570amy,cmspullw9s,56evhxrwsm,gz105656rq,ejcteeevuo,5ne393gelc,1bg8bchguq','rijaxppb8y,jk9kybcvp4,bg31bfldf1,qwvg4htrl4,rj8ol1uh39,mq9sxy4tw,c7imxivzoy,dec3ibimj4,26wpzut4lh,m4npksg0n,hnmtn279ws,wah8nwjah,p5c4nbqy1,l95lgz5b2k,f4u3j7k6gv','io0vkhzoj2,zwn8snaduw,h0pw6oj13b,xelkninwnp,rpzpn820hg,1e3v3ift8v,wet2fuheg,apdsq17cub,i0jeh68yp5,bqzpodtetb,fv4t8kf1s5,9d02thndpt,4x38fbzcrm,jpj0ixp4mj,vjfm2ziec','xvouler2sq,liabzk5a7o,wf4w2phey7,jvfmmem8ih,guvhiqbrq2,8lsmu9drbw,aqlkcacmso,gtmtbgitxt,6mbqucbldi,d020tugm1b,eur0p83lw6,b56fpyu4bi,zzvtp9a63,47thab779l,5j4ziqkz5c'],\n  ['tmbnzko7eb,oiio5wfpsp,l18pv6qs4f,grapbqr1gm,t3n3xeexj4,hjdmdsrkpi,gpr9rofwmy,dlnvi122j8,1q3n2mzf25,elp5wp1oqu,lf5n2ifs7c,6z8pqqlx7h,9er7xa6rr2,jdfvfqpn03,jwgi50hq8m','x5h8xzvor8,odoalc1xq5,90olkkl0dx,5uiae0uhec,rpbhltbx8m,e7k3z04t3j,3uwp4tm5zm,lh1ncc62zs,4kny26herl,fp26lo01fe,8dlr5u9rz9,358b3akrm2,3874tfemdl,7al4bkax9l,62kooc5s0','kzzyqf6hxc,rga3efxk3h,mnj66sg0n6,s5vra4ux86,ylfeq8kfun,f0moagm302,9lbrtfll7q,2w0ir6bl7y,1gk24g6ywn,1cwiv7slgr,b1dyzea782,keder94pvj,cgltvi17e4,g88j1zk0dp,4vwdvpn7fo','ndk05f05s6,w8sigv6zsk,jpe591j9mz,jv4g07i4nf,vy9b1ax3bm,6g5gn74kei,bib4cwyl96,5o1wp38ydq,8x2bsyvljg,4w3b31gm3y,j8o9iu1b8a,kuf6rzm42t,3bui7clkik,brackpbgze,128o6nk7pg','gvu9qmof77,1682pqvkjjp,ih4d6grs1p,k91mtvvmyc,g7engrqjgi,11q5y14mfh,m5ca4c643,ewgzsmf12b,7y5dju00c2,6vdnx0sa,jpy8xs5hsb,c8tt7u3evr,emr9jg12j1,lifhd9ip25,3q5ynss5aj','9303n4j9vr,aq72leaz28,3you6zgfj2,b52be3ndnj,cpd5stdc9h,ie5et2erxd,71lhqd6a3h,e61bcf5d4,leadnwxir7,6frdz9ojq0,1lqnogx1xp,1spyr94a79,qm9a4wezi,4w6o2t2epy,1bgbtluypn','150v42tlhee,fucc7zpltl,jkk0jiacv5,eyo80i4n3t,hwum2ml7lk,j6z379aby7,aixhcurelc,j3dk496s5o,f8strc90dk,j1golhwckf,h1f1mqaj77,dpvm9yz0d2,fq51pb7zri,43gymyvd4m,e2rv5cafh1','3jpg9o4yma,rkdytaw8iu,oaj9zj7wco,s1oua5a4wu,pg4r98vh8c,gvg3xgnrl,ezm5mq317u,4b5jhas3r1,80juo1z1jf,3b2ses3d49,cptzqsb9ym,af1by5ekv5,3ysl5ecrwt,df9a9cjxul,kqficj0fzd'],\n  ['n90o99ys9d,1327d326njm,ay93ytktbv,k5h1wbqdgs,nhs7rja3rp,l8l7zzyme6,lxljtc3z8t,ieitrcs4g6,7fkx6l0fpn,h9trt2kxma,i6dtu5453c,z1zmxlb7q,dwnxis9ywc,1oqlo06bc2,au4quhvu28','n016t8dgkp,r3bulr4b9p,46wyohjiax,hcvwkxn6o9,s7fik3hzrs,8jsfsup4t0,gro088uw35,j865em8nwp,1j7021eb4,ke4ynetxvo,55f6bgubh2,3yh46j0093,duzg4n8pii,jwvjyh3gc5,1k8nmuz7nd','618rcfagft,ql2ol225ja,rstlbqzmwr,efxp4hxe4v,h0ozw2f33m,gz1xaaj1r0,lqyn22ma3d,gx8u2um4q4,jftienhec6,brb9ne6w2l,ccjoe0d5ls,9ml9nfznye,jsr4nwhi41,hk8rtfbf1v,f0wppzo94w','oglj2fjs0v,j6qbllr3a9,i2krl8kcry,a5oav0lhpn,mt1smp5plx,7jzyirm7sb,7favyf1xhh,ezxcrkbj4z,4agiykq8em,51qfoq73gh,cd764solcv,gqrt41maal,bhgdbxzsff,bkjnlb09vy,bq5fw7q46s','plyh3h5h75,d5xj3870o9,ej60rk522s,z6o5ou6up6,mn2mvn8dhb,8n1z3jmpiz,le7g0bqsa3,2oiuwrudkx,gap6cip0kw,8q5462tmra,3p7mwm75ki,240r1pqqok,5n2tjmnp5l,5mteh2xqd2,6v9gz9x3o3','bibbraiszl,841a0smaat,16khubgrzll,7rcep3nl83,s2q91gqsw2,j6js68ehs8,k8ef8yl8qc,lpl32swa58,22miog59xm,7qto3s7z7u,iux9xfyeog,1jgugfsy7x,6g7215mzy9,5u66cmyu65,lbqvjp5wjz','gzxo0wpeh8,b0zdouxckl,izue0qdhte,mi7wmo4osv,i33rny6jal,867jahhp2c,24xwsy96s2,glu5okut14,d9gbqsl1xi,gz1lluasat,3s81o3qd8a,6rj9bahbp2,lrsx50fvsb,2ia0gmezd3,c9k9yilc6o','ca84lefg31,15neiv17l7r,nzdfxxzo56,7xwl919xd6,p0g3y1bl58,e9nkyksum1,dkk39q3bg,l1c7umi8vc,l4v99rw6sl,751qfm9tbp,bu1qhy5hef,7vq1w42d8l,grpqth2i0n,9ti7gi1vqo,iapg2oobta'],\n  ['pojy2atzhp,tviw635z4v,gwzbfawtx1,zvp4mk6ely,6j2oo98l8e,7h9kmhpjng,9yywyjm2oc,3heke8g0f6,2f87may8tc,jzpj6517i2,k3cvz38nl0,8qza2lse5o,cs9cs4o2r3,hrqom3sa9b,3hi9ugi8ro','inp6qpd4uo,10kv1cf69wd,quczqbdkj6,olusahccsy,8n7skumdqf,21ph0gvixj,4lgx01bwv,830p6dlxas,9y65y0cn3a,gr33wyn62y,25l5cwks3z,59316nw8ot,c55cgmbx31,4a7p5zs9fb,ev3if4gmds','14rqezx47jz,wj5ucc7lsd,y4d5h2sdt2,nu5zp1ejz7,qqg5r4l4tb,2y19wt9e8o,fp5o72mjnz,8jp8keqt5t,2jdemtlle1,hrtnis29hl,hsh03pfawc,knzvy1r05j,dcvvodabfi,ecx0ht13xc,3f9otjzl20','dt33f4hwu8,11j773iw6u3,9xihqs5ez6,bauyqcendo,dzhuezd9wb,6jwhk4u6rd,2p1kf4de13,7vb0ear406,8cpgyhhit2,hu3s2z28or,egibefh9g1,7llqn6ccgd,j0r53l9bso,7vf5c2k6tu,561f1ntam5','lw29smtf9j,sdnrs24v2q,l4579jumcn,u7rmcgnyz3,w9aqxljbjj,cgz1spuc8t,1jfj8z29ys,ck6h2kqsa3,4epk6mlpd0,2hqw96fjef,jwtd6t77dz,1c9buwyq5t,hqats6iv9i,br86iu3fd7,8kzectc6u2','icagasppxh,8dv5wxqu24,eyjvxhrrdl,11d2mdufchl,104trfh9zkf,c3ckmt4sgp,3afuzj2moe,5s9wtbox69,49pavgphp9,5xvtq1axn9,177hbgfrop,i5etdegvy0,grpds4ojbj,4wgitz0r4e,zus1hmexd','qonzwzyl7o,p1bcqdwyrz,eayolg8k6u,rlhd10u7k7,f4x7txi23d,5r4hypbo5n,3qxlcx78au,14pghmfpz0,6g7gn24s15,ksl99je750,9te7ny1lcv,l5r8c8pcke,9ytjvea7em,aknnupso4a,gmcv3jfxnf','v9jmmsm4od,kj3wu8mt2y,rddwfypl0o,ftcp0k8vbv,tf1xlr613g,gps7n54z31,d5c8ffpfsh,86o0pu9aps,9cjg056oeb,2ucun1l8d2,dz1bv6t5n4,d1vkjsckl1,5xj3xbaoom,kr6ouhupgk,cxtwmggqmj'],\n  ['lo8qr1lcp5,lgtwwd6x95,n4tcixofej,g2zs92bgjz,uj4eish9le,bjwwr0n89f,8265zff6tr,guf2sq9kx,93khoofzs5,78ooujpsp6,868wwpar7s,ikrgifbapq,frhcv34199,eiv178pc4v,2tmavfp1s9','11p8hhagfo0,wbmb3dz0a2,nlk545nes9,15im4oku4j2,rro9d014dt,2qohzdy353,4soekoajpa,94v42n1saf,1s5yb5oo76,fx4zhuudnr,bq6pf8ffjt,99hsk4ukua,ftl69w53dh,8hfwiiyeo7,6hhb21hac1','ign62yodhj,e1v7i8of8l,tb3duscy5q,v1vnjwuchv,sfdoveg3kn,64sefkb9md,iqvsfwy4m7,ixi10pkiwt,eyzydn7lte,apcf70hxkg,90yw8rrmy,gocf9a376j,f0z56nx67n,18n5h8iw0h,1fhvbdg9gf','oabcokc3i3,926rybf33e,159u10tztkd,y3rkmu67zo,n0czt90ywn,jr5kmd0aiy,78g9c9b5j3,2i9hchp1er,duglgv5loe,2ctqmhtmra,fy4m6osnh1,iwdn8721n3,dd5kxx448q,f0silor7o9,cwfpvllaj5','wf46sue0y3,gs6dgkjudz,s4qski1g5l,joj1jhqptu,cx464qz1u6,jns20xrdsl,i5rjdbp0no,9pbc3kcfi4,bhaaek0tq8,32f54716b5,faxh2k2ja,louuiezt99,b7b8ch3n19,h2iteu4i72,dqhehtj64c','6litqelg8f,rn5qy4nhuk,qthppaa5s5,l32z2ifh14,8cy8jlypat,lmuiful4sk,7tjfamgpur,a566s3b6q1,2mv8ohoq6m,k3aeoawvk0,huhecvek3l,fufmbn54cv,gt1loy9z0t,2jnc6pqoq7,9t2jmji5zi','f60m6ns2s5,hdio6ritkn,htmmdek8x8,v9nqg4ebio,sppb51gbc2,d14lg9ol3i,cfl44jj6vz,8l0ovwnjt8,afrlirnf01,guxqrngip2,gp8mynee7i,dpbit708vb,5zss15u09k,a6nswdjiuf,hj8aus6umc','dgrwj0ek92,175x8m76h88,8rlqvkkc8f,isngbv53ff,ou77azy9wb,5vt4e6aulv,eb81nissa,j4h09vca4x,bo7w4lmdto,32twwnigup,iwdhfczow6,c5lhdyjyc0,ai664bkkgr,9xgp3nc1rx,da434dqgj4'],\n  ['kpeqewx5l5,11mt8qalgcx,fhsu30cl97,mct81ss31j,lzajmo14fl,i95wb98jla,2vgr2au0j,3g52blhkib,7msd5dlmbf,h957m4t9l4,dyc4z0mf2b,73p6wx1u2i,4z9j346r0j,3oasjho95j,2kqpbpg6sg','lj4reg0r28,m5syyyd6ng,9zq6doi77k,qwcanxgokl,mztgbzje9l,chicm7aoo8,5ik4m3gau1,7wi9oh3518,lrg38mub69,b4jrz8cxqs,622bch9jp4,919kzfx9ko,8nji5il8el,9n079q1sw2,98qisyh53r','551iulhrmg,wgn06b0z1c,imqtjizqq5,isah2p85nh,ka7i2etkx6,hpxl6svwtw,8zbo0g784j,97dfemgb7,496dzjt9x9,2pbr93n2ek,yzhlv0xf6,l47gbgwm8h,isbcegbhj6,7zndyhhmg4,cfig4cidmd','hn0leti3e8,gvectolcos,nc5bshzaxe,ij7zm87ktd,1k389fqtzc,bzoe3xvyvc,lelllfskko,jkb21ord1h,do1n71xd0j,4hvxey2qx,g96pqrldjk,b6rserqo95,h1zex766fo,78aiohqze6,cc48gq40v1','pueq5z2ci1,rcg26m5qpm,ku5pkulugm,r3xoyun0iv,irz50x7pl8,7wowpzf314,8k0i6os3fe,3449w6e6ov,9afvw1qceu,5mhctcfzuk,28q7jst79o,hhvsfcfsrt,66tk0xwvfu,4i2fsm6hfq,k3smu92euc','80w62kzflg,v5uwbt7qib,wj4cascn9g,d8yb0dqosu,5bzmczvmwz,fk518p2a25,ihp055mkdo,8ftzywxiep,6xdlvn3sku,lhq3xcy70z,ievz192x0b,pimxk2syk,hk3mgcpfmk,62bnkrhb7c,a72uibrmc6','tdb5oumb7q,8fzydqwblj,ao6gw2m2mu,9vgvvy8ak9,gxeynugw2y,3puqnuxwj6,fkrjrigwa9,7x0cro4ptp,k14mkemrtr,6c81vewdx5,1qq52n9u7d,fhug1gqovu,57dyvvmr3h,hvr98o7uoj,ex2lsl84ge','ilk9xu1c5y,ztvwi2fah4,154dje33apo,h1s29xdw44,lylpomd3gu,4d63jy51s3,2avf7c4501,lnnre5chcw,9yo9h0fwtd,9lhscvdkux,i6h5zjfsuf,j77mo1wrcb,6lxqmhrhx1,j62fqyg1xt,izvmrvdlmh'],\n  ['8d6a2xofpr,dvvgdgk8av,mwcf1w4ftb,g5x5s3kosj,toe6912bej,6tasizs0uf,74e1zufq3r,g4my652vhd,7d7z7cc49u,3alo5n5kl9,845cdrawu,m0idb5mdjn,gcxuv8r9v0,944w2kxwqk,bulgu3u2fx','u28e8yaqpn,138li6h4e42,ge0ouqqytv,qrzzj7186q,12e6oydeds6,8w4gtt4uxq,47eq9zrl13,5ix9r8lq41,ijxtd3jv36,iuiaed0lzf,d8h4ujg3wq,jb3d482lw2,eydsyzmwmz,hjhmvqin9i,feo3uvan02','st0esdxgc6,jhu9brkaju,xqsu3a5s44,boyqwa4kmh,ij2rusvm44,ivl2weg8rs,atbvm0uuch,23qvaomgu,jp4lpy2jmn,f5ehldtxdt,vufo39u0,6omuk6pwec,27r6se0w60,25urad61em,jf6i19macs','2o7huosz6b,zhta37y8pv,pkdwqfyuxm,ju8c5getlh,jr597w0v2t,1wz27k238t,52b5v8f4hh,863gshhqjc,gi8mqg6z96,7z5owp9oao,ji163uz12t,j6qja536o7,1hwh4wu624,1a2ihj957y,2j3cwqxlgv','ibdrqw8grf,j2gitjet31,qpn53qc90s,htylpo8cy5,vllhw6a5eb,7ue6rhy2zx,f706aw8dpz,es0uxd86yt,gf0idwgz01,5wfoeete7r,bc5yud13bo,l15hmu091j,79vq8348t7,356jh7etdg,bbuwzk36vn','h1m28rcel7,teyk10wlef,dfrhprru2j,qa3co9m2hj,vatu7nj5yk,a0kpcwt6o0,pd56vfyf,m0008z8vw5,6485bogxhs,kzxddtrexe,ffqyhdphos,a0s66az2k8,5kdp22ugci,861q71423w,30wpv2ze1y','2gahfqvnhh,es8q4mbvqq,vi7a9ot2r4,9atd3vke3y,rm3ihg62kw,kktxksaqor,i98kbca6c5,l6tab9jjmv,l2hlydwad1,1k14k67k5x,d6jwr9vlre,irvb32tr10,eyn4kdqpsm,14wf0evd2z,dpsqg54ryo','zlwx1jmk2t,112ak47ods4,iyyw9pwfz1,k3n84ipyih,v8g8zpi632,ik4dnk095g,5x7g4o2zkn,63udk0jxip,amns1hgihn,bu3meqe1v3,8a2ynmfv5o,761ea7ji96,cu0oqme376,55co81nzmr,2w9rvwr5vt'],\n  ['pnle0mclzv,fqkl5ljlwm,x88eb5gou3,153oeaijy9k,qar9z198lv,3jk3qfdvoc,1s4mwo6raj,8hgfocp1ib,25k6z8e556,5o1jaejfjp,7fsh2chcoa,8ya9yxj11a,76sh8g6o44,97w6g8w7j2,jrpdsdvqsc','fuh8vugeye,pqs1e310hf,d5bwvav5zc,u2455cppqw,rkei80dvmb,9ox36bkas3,815g66m9b0,g75pkzp8wj,gc3cilqta1,glum3ots0s,gpubjcif8q,5wlxqr6roa,avj64egcuf,86eqcovabn,4ji596xx5','bia6m9o0ti,8u96izvb9k,4k63pqibqf,p5g2t86q6r,jrwk2ufc7g,ia86643z6e,6od2mxhu05,iwna4auktb,cegr3k6bng,jor64n2zb,bepdjamr7d,4ox9xl1890,1r95t7cyul,culcghc22p,10nww1yf75','lflwy7kua8,11p3kcizeev,js96q1pl4i,jtbzajib22,kxcs5gwhos,84kx18q256,l423tr7ia8,iyjudnaalf,iuvgjxihqh,a04hyqgvq0,hske3lkiug,f3w9zfix11,3f4f5rfe5u,bcztxl65tk,2m412nyf3','vunujjwpil,qf1qk707ug,loicmswjpg,u7xs4rhd05,lt0krs952u,290qnh67fg,8ineoezrr0,3ixhgsjgqk,1kkvg2ahmg,deb0fmon06,2azxvkto0b,lya3z804pa,lf2q4s10ll,drc5e5xai1,ika1sjwl4y','x4a75l4wsq,onto1kep6k,whxn7z50fg,nlzl2b5wyt,c6nq4f2xtt,ayt0ds9qjb,aclvimsysk,aar1wsyzkw,jsyww89z3n,glp2cfub4j,adn9mxses9,ifqscyhig8,1sk19jkt7x,ahagx3nh7z,zjl1kbyfq','z1a3ewrpfm,g0z7242ari,mo9nx6t3fl,ax72e4xy1l,uqnnqilels,10y4ce3e9p,f91nxfqzh4,lwj8g36t7u,k8ekc2y3pa,a9zwnnm4q9,24u36az4oy,6yplwy0gnq,1vl8iq8nyd,9l8rc7fyms,dtbpomjuib','yrkm78rx8t,pkequf4upx,ov80qxzrji,148d6lnqu9d,68x16cqnnf,3dva8854sf,ctli5yntbt,5kxtng0pv9,k72g7xrhh8,35xqdn8gbc,4mmhvl15mc,fxr8069ben,joz1ntn5h3,2l93nuvzp,b04m45gfow'],\n  ['owsjmhdgcg,htow849x1e,hfz9l6jdrq,zsnuwst77z,sx52r4h95s,5oj6gh9tcu,hn0gam90vn,lfwrpzavxy,1pvde70cd4,dwovvhiek6,8ssp671l0x,btthjjb5w5,ezmlpff3np,kka5rh9nr,b4p1k7k4o3','429975y11m,clvt99m6w4,lzmpqs4low,mb80sj2lmp,pfqeglhslo,2l1jdo1biu,9r3uhvz248,56rjvqc6lu,5mmyzxtq8e,3higy7ggub,hx9ectbnm7,8ol4q07iw,f8on0daamd,3k55lzqlt,4qb2y3c68q','jx7bxd7xkh,sgbc7x1zeh,kqol38frny,rnxdum719k,gmancy1cwx,b9knufz1ht,5y99x3rb2j,f7hse90ulm,iygtr4dccr,661gudk302,ixcnwnihk8,jvk62ugqib,hhp7r6vbn1,9f2c1diip6,crsgzzxtf','rj98stdv92,a8lr1ae1id,usz84pw3g2,t63q7606za,y5kiwensx7,kn8760hq4,k1mvfvux9v,kuxxq790ob,bqf0a9di6p,gmrg40is3,2oieb3qwv3,dj3nct15uc,lyicroiv0w,adb6c9q4mw,dc1zi9lm7s','iakohj7uvm,h9zzs0cg28,uw8ka47t4l,exesxpjqwl,fs6j6zarir,br1df5q6ta,8veywr1c2e,9ucree545v,4pafftt8yn,3l41corp85,8q60le6tye,f5a200l71b,fnt33hbhvc,j59zfh1g9l,88tapwg5ua','tlnxvpy2ni,gux3lzdv41,12y3bp0lssb,tk5qmpqgft,ra5y1jlrmb,cwavrv65w6,eeafajh5le,22xafokyj6,f7ih7tnkjl,a4ab3evq7e,7wpt1yzoey,ik3t1elh9r,dd9lomwy3m,m3rqi4uar3,772ksm0krp','syj6cxcela,i13yiq1hf2,zpnqwa7qji,x2cautioxm,inafd3zxbw,6uu3ehm20i,eppr3upcgi,79m1ktsun8,69kvgsdyqg,94rjwru30u,j6wip8z5md,avhfeltzyl,7pq4yj30i7,h7fe29uj4i,jpvhpl1wwx','ftqz9nlpf9,redn9p0rs5,ead9ai4uom,11quxfu6wpr,4vupe4rv75,aiw66g3n28,jrdtgen2xy,b5zj1iombx,g4w48x6tq3,k8krxc15de,lvsv5pkyv5,if3xiasjrh,iju9bbcusx,d8fma1qv75,cz78my5ajh'],\n  ['1j70yhhji5,6pfh7cyzqg,3u6d1ei56x,l11tz2imqt,q72vzy3bbx,2rpc5p39l,1wxafl4nry,ke92iaq963,ahq47p8wxk,g79y71e9cr,5w5s6hgbj,g81jf70z8q,fk14pwf1i8,4apjelbgx0,16wyt8wtm2','wdvilz6kb7,rro7djo5ic,p3t8biltt9,11io2e69idm,m1dsx1xtfa,1vjsh44yeb,6mi9n6qzh6,3c3czl04p6,3bp7e0u1cg,8eg86vj386,hd8jhlik97,7jp8cu3lrw,d0apimy05x,omt8kml2k,8gex6m9cer','yw6x8lel31,ecbzjx2xlh,x0c5kgcuko,dnccs9y14o,yb808ij714,3ltqcou9ir,56c4by8buz,e9ue3iqfmm,bng0wjdrk7,1tx0zh4rdl,a1bw7rsj2,4j7f2h5vgy,hpxjompxl0,je1juzrv02,acu97ax1np','nptgb4ij7j,11zj0y0k970,ge9m6kyz2l,pashv05acv,dmidgi4753,jdtq91ew4,lrdslg6cda,brl4fr884s,59q5exo9vt,exi3wn365t,em66ap2juq,1ydivfxbvh,liz065mhxo,62y9p0g8f8,6dif00jf0q','l5auwd8f45,r3fybw93w9,sjbhfmc315,pn1tso4oxd,enjp5ymtir,1khx046x3a,ihk9qyt0xp,63bnxzt480,a3xbnky247,beipsik3fx,h6e0mfpe0e,jc7618lvf1,glk5g3unwy,ld3x3q3jzc,cnvzzc5tqn','mz96dr92n5,12lfl1kla65,12lsv4vn8a9,fsxijzcw3y,dbxsyncwt4,fry988tgvb,4bsytsvz1a,lv1pxcqgv7,6h74pkgy91,1jt894zt2m,a4uo078hx9,ncfq40bxs,567aqlznjk,eou2jp72ki,edwjwg6xrs','q6waukk4gb,kvv5x7zquk,8ztwmw7rgr,iiaucuiesk,ojn8njp3az,bo7vlebpk5,dcs5spvaix,5rca7wzs9s,107b5g6u3q,hnjda4q0l3,jcyidf47s3,lyhgcsw3vw,e1gvarco8h,2kkqu7kwll,ghlyfd4be','n85hbiozt8,uvvzjdwfco,mfvj5mjz13,lwny7j6ydp,vo13rtyt0n,h1aw8uzfs2,4921lupifw,i17uhdkm3v,did13r1qo5,akvsvufclc,eaald3o7yv,a1idxx9wlp,c3whwuwi7x,bkhem7cepb,84tlcwsl8i'],\n  ['ipgyabowup,frvw82grtp,99epye35k2,mzeyv3izkz,f66urf0u5b,l1e54icmho,ko7p4bghqe,gnc70vp097,bzm9s7lg1g,85r90b5em2,7jd3wom9dt,4jxlm5cwyr,9ts72ybiqe,5dnz4a2v5j,ls9ol8x1nu','mmpexyqlug,uyl3zwama6,cmfay5df6h,eop6vyh21b,qvvmt07yo,hqk0byvhs3,h2t19vjtte,chq5mzei5o,1n745w3qev,lzqsnbzqoc,jo2rcb9yvt,abqe8dn8l7,2p6k5zf8c,i9ni1d4389,m2x4rea231','bfjnzrz16i,r0tf5t5v0z,ld4vm9ql2c,vsc2zcrhry,hfq2te3ur0,dd15tokulk,76gdzsldnq,hcqr44ev9f,dg2rf7vh4q,1s9c7tvya5,amz330lhqx,bdhi840vyu,i7c6rcgb16,64ojbiswjo,18aoe4itfn','bnvo2yk5rl,2frwbkywld,szja8fx844,u8v9xsqob3,ljttodn59w,jw7xldeg3v,1zp1n9xx0g,adbfgsz6p0,k8z9qydk68,7nu4avt6sn,2c5i2pxen3,cvrg54qwvy,c3vvjcuxcw,739jsvqm4r,jae5a0kzwq','r8yeci18rv,mcge22n3s4,gwy8u29tlw,fftt6d1mhv,mmuixtmcb7,2rsjuz1wp1,d3s10fvjo,8jajjhtexz,lvqej85tem,cp4hh758ca,cl34ei9i1m,4vddjnu9dg,cfdcit3pft,fj30i1hrl8,iliomuht9n','3h55hxutcy,i0p86u721r,ay2qapk5o9,nw7qi92gko,3zbeqrcm36,kbprvsloyc,gep3ikxdze,dz389ieovl,4m5wxxy9mv,1vw60vbvcn,gwmcyre2xu,ib395etlox,hef1tnfkqy,murygmdms,b00y1by3v1','vv3k494zyp,ni3k7gdzkq,lv5lib41ou,gyp3cagnol,o1pt168vzh,2xxjxo8g72,bhccs7lk36,bm8kzbp336,d9rcmtg9id,dwui5g3ec0,b98t0039ul,8xaz8sdpep,lfok98k9yw,kfmrmnaw3o,379ojnezs1','t9s0srayr8,swtrxoyocz,zp1floez7y,llf462ushu,dnnz30frst,447bvk0uci,71gws8l3ur,ehr0xt1gmv,lcozgjzt0l,98fd75mwhg,a9x3ygj245,l3rqeup5uk,lr816v912z,4r08cqyhqs,8cfm6iuydu'],\n  ['camz7c0bc4,efdc0mzwl3,rhw88xqwak,moz4lojha3,oqv7weqd0s,aesiiulykd,63w1jb72f6,4jnqg2ufgi,jtd5ahq9nl,2xdfamste2,ae3a3k3rl3,fajnwve0sq,evkjca7erf,eh8f8n51fl,c2o7st12vf','10vf04v8jip,tycdlck2j6,xw1y6adrbk,zup1ovn9aw,124kzsvvm75,gnrsw47mp,9w5lt65uso,ie5zxui5s7,1peny5oz9t,5sp9r6p96f,at6sxn8gf,anmgq27081,5og58mi29w,7xvtkm9tce,cz28plgbsb','qb6lepojur,10vjob1np5t,nsr9h1t1cn,14qbgpmsup5,kc55tog56q,azgk977bxq,i9b4hocrej,tp9u0jtey,jf2ttasyhx,4i5jz8yjn7,gq8fc1f0s2,e4powwb4ya,ao4jav6tz2,98me4tmz3x,3ck1kh7yfi','jna7t2ghrf,8z3lfno14o,nsc01ygdrg,8f7ff5klmx,11nzp2082yy,2dokcm8ie0,31w94ww5cu,byzs62tcde,dv6511yyig,l2yz4lb3qb,cy6mt0xqfl,75twg9rvne,dfb3xuixca,gfkzxb3fx5,drpyeb9hwz','mwsipmkjjf,w64dgewe9k,i7o9se2o6j,159sx33fd6g,qjq31dx45l,k7xthxhj5a,jxln2shc98,lzq757827w,jtc7510svd,8laijz75fc,bzhhyr5x1u,5wnejuymd1,doqokvza46,ehqk1kk45u,7a5t73g5ng','133af8lj8yv,fd5kqbg0kl,v2sv2c80z6,dynd8c8qmr,n3nrb9ja1t,kzwq78l39e,23zoiflody,esoh1m7erg,jascib9amg,dbxy2goo1u,357robc4ae,ky4ddeu80z,72duc71ut6,6j56hyrecy,34vu2owd5u','q63viqkzpl,jax7i8rpoq,sqr2gtylq9,10vazn4h1fr,eacwg1rzrm,9bpp9bjdlj,36leydkl23,emnx8zbqwg,769bkk8d6y,8vl24qejgu,fikgrul8ha,kxofr4ogqv,fgbejvm6v5,dt69g381zr,imkvujjkoq','ufe8zotz6s,15ubmvkv18v,w7bt2y6uje,gd4p38yzne,mxym01b6ex,7a0a18gmj1,kfi45vk6cl,4z6fznz8rr,fvd4zovg2w,66u7yaj60u,hxv42eomit,6by0qr33vh,2l8oeo83s,5om8nc216b,2sxhule8n7'],\n  ['zmlmvya6ca,e9hko4env9,10qez45m3r4,nsyvhdeard,azhlzeywvd,20d3hcn16u,g1yui5cqcj,lt8h0auaej,1pwwet8qhi,9ex2zmmhts,fe0i8efuzw,ajlloe4h9l,40igcs7ku,9fxlt5pkg9,le3srcy51p','hfm22eva14,tex1g0yegl,d21rltw9g8,ev4jszvz5z,mtjx43u6ho,652rt8ewp9,d68fe11sew,9r1bo7kvqx,cxuvysfvol,bgvlbfc08z,274yrn6fat,74iyny8uvf,9uk9v4j955,96tjbzkgz5,2icew00p3a','jdze6slkva,sbo1qwi4lw,d5exjo2ps0,kdqylqnmf3,13132i54edq,c65u3hxeoz,i3h54a38nm,a3pn8ku4xj,a3n03zy271,hqqr8wyh52,azbincorv1,guxxmjwd3r,l5pin9jeur,kmyxs6xu7u,m08wqy7ex9','yyqy4gnmvh,k5nj0zwgvo,lbnp96wbfm,fvlibhzkbl,r8gpt9pgey,15yaigvejz,aifoo662ao,e4lchrnil6,gknpuxkk9z,29u2q9zze5,i80j1ymw2k,frpsmh1u0y,b7zbagtc3i,j8rrsrwoap,yxjs2bj','gyw19vwrq4,vzpkit8eyy,rfghito3pk,mdm51g0bt8,hanjim87yo,l4y1pee3nw,4yeb5bgtff,65ugxe7tla,ax5fbs12qb,a6gxvt3uwl,5mekioxdm6,jqseb1dssi,a0e0a0f516,k2daggybm,9053a83a8a','d9d4x85td4,kg40mh3qg5,wupn511mil,os8zj3a4c5,aiwuwx4tra,hfeg1jwcgm,gp56mvwxvk,bcauqhzc7k,hjbrrco29l,3xw1nxriwd,i8fkb0vmsx,3z5ef85r92,82uz8whqvn,7huszk7tr1,h63otm03c7','41nnt9orfs,kqw7nnhrln,w27qlg4duf,n5j55u91ug,bmkcmm6mlz,2tcxi8d5sv,6drb7gtail,atcnq0bqy5,dgef8781hr,etseafmr9t,6m8klfprmh,gi2ajgmgu8,69iz0yew9g,fg9p86k55c,lb4i4910lv','iqgc2h481y,wd70szukj2,blrjd02rf2,p4xc01jq5e,cm2gxhlae5,fwlgw29dfn,3zapdsc131,l9q6sswvzm,bfirv2snob,fjd8xmbvqd,jtkvp0ckfl,83mv7j8k3l,hkysqvuq2u,gfhjjt8zn8,3u1r9fs79v'],\n  ['qn3ht6fygw,n7wx66k9m0,kenk6hnfce,31dvrk44ri,cudaliwtkp,cr2gto39py,klhw3obinw,i88xz5v4tl,172gzhjhw,7ru02h2nlx,kidwr1120a,8cry4qps9i,9sc54i3zm1,du540mnm71,f3ca00ot0k','10wgxoq2wcb,dr9mens1e2,13nd3fcpdq6,njkpcm54z3,mtsztfs83m,hjt8hem01a,asr8hcnmgd,9s488e8ay,5c7igte6c9,f605eyuim9,6tu9p0z2nx,1oslk4i626,fc8dhkgqob,aky50po6zy,avd9dea4r0','3ee7803veg,wzzju2si5g,ni0ag31afy,h4z2jpkj8z,om6hnk85h6,2a199u01x5,f10w1z4ab8,jwimvurhvb,ez4suku055,7xtmgu1rss,amp09kdym6,8l8opcj7f9,7juabyeps0,layugbejtp,jx9arfpe2w','8ey2nwitro,j2ecmx1j4b,nnvumd75c5,uaqzyp7b7m,fayehq1a4j,eqow2vkzqm,aacvsop406,h5p4kvja9o,c6jvq12ded,8cyn0iglaz,6krtv0za02,ioiyn1ntwx,ds5n3nfw2a,b99lrfvna3,khxp01gbg9','nf9lgxa6bu,j2amhyahbh,gs61qswu0e,ulv1k6lwk8,t87lpnb0am,ak4y75mim8,l50xgxh5i0,eutg0hax57,97p9p9nmqd,aygdgmh5dw,3a8eb0re64,2rbuyg0k7g,kpv9eyz4g4,a7eaaykd1l,5a1l3rgc5r','puneh0l20e,nm402xigvw,p5zvmypv74,q9or33gw8y,ykbowlq7fi,bofxqjojjl,m64n9e9tly,atjk44bdm1,bcqsotj2zi,hn2te6c243,ievy6n7wwp,kyw2yhfwt0,8e3xp5rds6,2vt8lm7uj7,3ygoalolxu','degizej78w,814n484oz8,wa5zgdnd1b,j7uodl6l6e,rn8jybnjja,f848vh4oid,4iqh3nv9tj,at39yevnnz,hj29i6epyj,73hm33i69k,bxrfb7161i,f4pn6zpv1i,lms2o5emb,icphctgyeh,c1lfaqpnfa','cqsixwny04,xtqdci01sl,uuxof3uf9g,mstwxra2fy,lsjkhkhye6,3c6lvdyndi,5x698xm9xp,42nncavvlg,9ihi4uzmq4,i41fk8odin,2bijw0nw74,lemzdhephu,f5alcdgmxb,cmdth62bpk,hvp3f6d65t'],\n  ['g2mckvhmf4,i1uzjayo5p,klttfxe5pv,1546jtwu6a2,lrej8ebjza,ci3dfpaqu,guz71bk6pb,9ooh4cd7cs,yxv0fe3hq,c4xpkpdbks,joajq3rkae,hpo99kyikh,7q1ir2njr1,fndmbsulmn,fnk4ebid84','h2k4titnsp,mhfsjwdqky,o5se9jzrxn,vxv3t0yrp9,brchvjeql7,8c11v168ep,7chqrzvg18,8637ywa0v4,5tvc5de3iq,9fbb5fqymp,hb7mfj331v,63i730qxan,1nkz0vfjp1,di5lbdnggr,idtyjto5zy','pdz84u2u34,oqzd7ksyjr,gquao977s0,fjbkla0xl4,y5te61d7u0,gvmkimjcyn,ejutw8ax4o,5ns7fmfag8,l9cdaynwhy,fbe1qpwj1b,8enn9h6s5n,9txs2zzp3v,i2rn3iah8j,21liojfqy8,2jkyp59idu','nk861v5usd,yckvw8n9yf,si5n9mcaum,g7ocjqd1mc,bwa9lzdrn9,esamka72un,dc9j17ui80,e80b7kufbb,8u8xco5agp,8f3ec28i7g,7185zpumsu,a63szzsn8e,hguu3v02m2,ah3lr1dwkn,h4b6uvl9ae','g5k1kcjqqx,semwcs41ww,lsbhuup1ij,mh1fug84do,psto4kvdb5,bjbcq2bgq5,ffhh44qwcp,eba2jr5hhx,7gnp4o6hrh,fy2h8my2j8,457tvo62ut,9k86s3i4tq,ld1h4x0dkz,ct8f6mujfl,gcyh1gpyhs','v3qtemdgla,d4cntxxrqp,144rpyvhx7r,zmz3unms26,jiraq53kfn,b1jt6squm7,a204dy4usr,135p7rc3vh,evmj9zhf5m,kry1446ssu,2zha8if8ss,kaw6lqrg0a,3h2umegnig,eh0i0gtrj,2gkp1ju5wk','8fmhw2f50o,r6g8cdhrma,zqq412tdhf,13540qv3wag,jbkh1d12ew,e8gdflif3c,ee9zn2tvz,3yj8602eu9,4ryrluhmu0,gc7zwft65e,73y9p7hqy,bngtseugdk,l2kg71dsgv,k81co0s9z2,ksnbjxfprx','lxzpmmus1e,10s330lwixv,dh5ebgluwb,wrsd0dteiz,56ojzedpav,6zhnat27jw,58grfrvknw,34cr58k2uz,hv4d7nqjk5,2jngxoif54,adez8yznvr,j91cpik6wb,9yc1hjvayx,bn79dth0hp,c7k7tvqqxe'],\n  ['ja170br3x2,hm12g0wfpf,nj05swtq2a,m6kc3ogcut,ub4rns9a4j,i7e8fedwh9,fkrxb1rv0f,i7ipcuogz3,air1cpvvd0,jpfrhoy530,f1qb90dcjx,l3g7ft5p0f,lgmj5ek5b6,3kipvxcyuw,fo3fflkfhb','nqx5smhldt,ogjymeibob,l5tkc6f3dk,5vzklhjkrb,nzda7nyi71,jtnb7saowl,6iw60n9ahi,7tfxxtspwb,41xrej95n4,7x62168ptj,k7c26sppl8,4t4bud0ikh,lyj9x2qjp0,95qi2npo2s,6oopk6xlre','f2lgq7g7im,8mgyxf9xon,pj9p42fy1w,qlo96yj8cg,ae5tkrdt42,ee6e5evdyw,j92wfd1oto,1s40s2eax3,fa4pfc4b0w,5hpbzqw626,3jbgukxycr,d1n5m5h2dx,8w0xmmrggi,2wayjqbahv,ikwcdt3im5','16ah4klvnqr,k2hnu8a1mf,cz0w7bjpze,drweqekfer,jyqkwh1hcd,kes6d5uslg,32n3o3cbn8,31v0a74sf5,9t50bhgted,fnsa7kpb8v,dra9rl979i,6um7y7pxph,lzvtrzakf8,hhlq3m0xfw,aot4c0u4p7','qid49gktdu,oojrlnxf48,r19axyin59,fbo4hl8srp,11lta5awb1u,j7h1izcmvs,is9w62g03x,hy4386d1hj,kw16qy5iuc,q5wqe8ak5,3t89cbzdm6,k9igvtomfw,c0s0wmvqbx,ho7qgojvzr,c402h6kdww','hdzh5k4ct6,snwx16jzy9,md80lxr095,yzow6cxy3x,x5vo2r0ga4,b3ovskr8dn,c24vil3igg,ckdrbne6lm,f28w9m7v05,fnjl2lq7n1,lh6ixyk8g6,lklqro8ctw,evsm35xlhd,c9uk4m051m,6l3krajeht','qhenpunzfz,srch1ksmmn,mz85ijedv5,55p4kvj32x,ol25wzcdvo,jg8fpnzxfo,ajx6tjwuv2,5usbhtho1r,ihl6e5ok95,eo151g9bf9,9fsjc3kg8a,2alws3ww5j,8duta70wwd,5l8fjrk7cn,h4vusaewtl','ju3ezc97xw,1waoni9buo,oa0cdhpwfu,llzycw1m8y,gwf5rfvo0z,f65nsaa6v1,l5i6rxd2v1,fqdh3gh6tx,c47njjo0nw,811kd5rjvx,h49njxandm,hit29wca0o,hkaihkjp0g,iigqmn4vq7,apqrqiw8at'],\n  ['snwel8y8es,j9i3o9g6lw,i0vrkei2ga,ugbwc9s0t4,gftqx9rv33,b9bosllljf,f348jfvql7,arj8eip57t,4qijiboxrs,kvz47a2s0b,glscmlacge,eamex02bg1,2me6q3twc6,i2cbjqcqdv,gxyjay5zfk','uxeb7rxfj3,wg0fndghir,ulo0zlybvo,gfph49ur2z,fsc4dnyctj,bvmqr68cx2,3a3eqnotwu,dt6wxipa5q,b11esfnj8q,j5m2gx5er1,7js2cgeoaj,ew1djzhhsq,bppxruxdgm,klayxo2bd6,l32hunj3vh','qaydddj5gh,jojijscx0y,107vthico0b,xjl1bcqvcl,qynr9pavuy,98jssfvao2,dzz70v6r1y,j496l680em,1rszv0fi0i,dxctcua6z6,3x2vkf1aac,fj974pcky8,9yzmb1pp1e,f62fa7kego,9ym1l4nw3z','ga1cqfskwb,m8coi6zvns,ix7oljc4ur,fsmbo452w3,ungxg6uhtt,9tabzoprbn,ec2cu75afz,7bu4kzm5vh,1dchzbedfu,9ukjmh7k5p,ea9sctvu4g,eji6qmfq99,a5a0tuabyt,6444a1ck4g,h6grr3t33m','rolq8gvjis,mjby5cvwtc,k2mqgkp0at,g4crx51kff,wa305ywspw,9h24xrw78m,azsusvyod3,1sjn2mk0tb,ebyvx4g14n,1xhtrwtihg,7ugq6puimf,iok5prxs4b,451jufmry9,lbru3l2w00,96fgd6pyf5','8mvxxq7j45,djmcwn9zuf,sie82g3bt5,so5ktaqx6s,md21mkxcty,ltu9yjq56y,3vyjllbrci,lvv6hdyiwn,5huzd29t1d,alujsf5cx2,7vz0pe4y2l,iukn53ymes,5nnoi32is7,ehgwxs0zbt,f0z7pwygww','vit2zm2pdb,lqcvdgab5u,v5ss89q753,r3ublw11dw,msavinul5b,eio8e8jkev,hc5df8amwd,be9i4g2ja8,fz99kjwiz6,1mn0pj9mh4,jbcs5nwc1k,10dipgztgp,acwa6y4myy,fsg6b5woml,j48staz2qm','dsy1xsv027,ph1w5qqtls,mvqg4aai3d,8hpbqz2abp,ujohh40vnc,c5o0dmhfqz,ao0hb9pwkt,8uetd7k69j,g5mw9td91m,1juuilyefh,b9bwv4pnm8,jmbmouar7r,6n0aqwc5mk,hgluybkfkm,6n0xkt41ml'],\n  ['i2lfr4puge,1pn4kn21k8,821lrssu2k,13it4b2mq4y,a23dk7puci,eu21857846,ky4nn73nur,524qea0afj,1duqtx5f76,4cueybbhge,k917asl7s0,25nuqgbsb3,lljn89odp1,i4n7h5lg9k,5h967x0q91','z4by4zwhpn,abv6smblei,16iqh3vqe27,ost0rtt9q5,k3agnenp9b,xcr7vp6ia,92zqjzyh00,8ovc27brv,l2d4t2bsbr,kndgdkequ4,5alioqolgz,ds11fwc1xy,fe9t4abskp,l5o1who2mu,5exipzlilg','h7lxevekan,6p7ygmgq3z,htfob5bklh,s0ukdim7wm,o5olxg4v3x,36p8eovbi9,jfkmx37i0p,bqltv09bku,s4n3dnf95,dj22ngog0r,23lm94ezkr,43j4kferdj,j7enidb747,cxkqqbjnpo,ldoxbfjk16','o180r18a87,9sbz852kth,uzr7lt02jf,11eo32dalzj,ejonsqe2ut,fyg3g44m8i,5bs4772kfp,m0ips629rd,l7u3opqt3a,jfy38sg6oi,d9ehvsh9w5,davs99yrnm,9a6arwr791,l7x0rvnae6,9yw8m47ae9','kqwb90n376,b5gm4j635c,hyvvqlfu0a,7knn7qhghl,ial2oh2fjk,akxqsoad4j,2gd1dantl5,bk9ne907re,fcmgxgf4gg,ehvro077gx,ifsdt42v2k,imzl9fpylc,ix4w1y3a76,cidpbkm20w,e61vsxmml9','uf0yam9s50,w50daso0vi,9quinu3mci,db11i7kv52,peoo20p28e,a4ifqp1hje,guiifp0p8h,datvvbeexh,ixpdntjs9z,eq5z1tb3nj,ipscjy9exb,48hwtw18hf,6rocgkkngf,873nwc8w6g,glid0gpjga','ugvuqmug7i,5yowyvzzwn,2v3cf22zkx,ns1sjqpop0,lsqckr0kf0,bkz5h2lpnw,gzmpbqjo3f,4i2l2th6u,6oc4476luo,1loieqxtmv,e9agz00y09,hmakeyewip,3sogkofaqh,vz21w5kyi,879unrswnb','r94tcb7i7i,m26zat4vlz,zhbmynbf58,y7syehdx1j,tk4s4so2v5,cfx19hlhzz,auu8jtlt9s,56k3vvgp50,l6tqff7qhr,elz6d8ogey,4d0zl3kpcf,fqw8v4fsfe,iyhriay62g,8uuncegm0u,3g5ops60dk'],\n  ['gmybp5o4to,s0p7kl12ed,vswh7pbn35,jjo2wr0dne,12oba2sr3e1,fbzf10zsgr,3cqs1f1jzn,ejt5wsqzq3,61wlspkymz,k0q08muo5q,9jecgq5ril,c2eywjolr4,6j02z3i12k,bdlj7kii03,7sfq0u419a','en4jpmhe3m,vy76kpghhy,hncfjcj55r,t1uj20eg1u,l7hvzrn7mx,b24udcy5bb,6r0l8oj642,4zxiqc6h47,dwpz3l517l,5lcfk1o28i,5ilfc6k2fd,llp4fkxcwx,hyl1yc8jnm,5p9atk26nc,gn2snxnazd','iw0o5m20e5,pnlh4gejy3,j0a1m5g3fm,feoim2z55o,14hzjfsyatc,kzhp9kaz3w,bl2zf2kj58,harz4acwlx,dost3mn1l8,jd05bdealr,kbm19r1n0r,l2nt8ln48t,6w3bwdeh14,2ov5qwshsc,3p4reiaccw','jxjxfurw0a,q9zv0wnz27,wsoaulizbp,nv104dj2ny,a5p63ybb70,k0ygrjuisi,h6ilb8nwlg,lkhull8sp4,j714fzo7ft,29wesi6fhw,3dw336fncl,5f0i44trq0,ea6rndo9vi,4qpppr5mp6,8ty7ew0j22','l6ijrjcgdb,p9ritd0k00,mrdmgkie77,gibszki5fe,k62u45fjls,f1ykrxp0c5,fsxcm6age0,adzkdayibv,ecxijom6mp,c5hhqs8wra,86d2ib83ks,hj22pifdgp,e199myxi25,3kgjypyiv5,lcsp969l5y','xjvoe5sh56,9nm6bc0mmd,k7zzeb0ri9,r089bgt5eu,r74bry7yks,gku87tfejo,6f7ooxo2wg,c13aloi72b,iok3gpclrx,35b4xmq1jj,63ckt2ds2c,psf9rpoow,kacd3vxred,h1hr34uwce,hbj8oetu6','10kuih6mp5t,xfdc7go3vf,61ur794m1u,dviuefpawn,ijei6qs8cj,lyil2tgngb,5jwjhpvn80,k45in58oym,859ayv431c,6m7punibjj,2lnht5z9hc,gajcg6ebbt,lija7cprlv,lqc3lomdyc,4zd8e0esvm','hkj7btpkti,jfmumy4x64,3ap2vfkq53,xk8j92yyiq,w95mqvxy1h,kc2sdeaz4f,b5odmeknl,30m89n8ufn,1shynaker2,is0g6sjc3n,eqgy5txi2w,h7sb7x85ei,8ldgu8g364,8230uwr5xj,yppnaqtto'],\n  ['qtdl5bttr0,ssk8atuxk8,hrtfdaecjq,i51l6kjphw,10yk8nvufg2,9z5lgadzgb,5b15b8fdwm,iv33ocp7fa,h5s1krdkp1,ikq5f6ag6o,kmcuctxmh4,2zqyr4jsgk,egnui09to,6e7kpox9wa,hwmbrtdc7r','m2mo34a77u,5eqtvfh63p,893ytc0twg,gzpdn76pjh,12ysmbvsgcz,bz28xk5bss,hrl8lz9vp,ff1fwwjyk2,73txc5oz3o,3fs71uo2to,9c98on0896,3eq4fxjuw9,b3bcg7nwyv,hbnf6pt7i2,4urtjviggq','ebqb0itd4a,us90cs8d16,eg2h1hk8bv,e3pp28s1qp,ksjeivmpt7,kqaphm6ztu,jnoqmk963l,ctvlw69k2s,8dz56ombap,dbv0ifuyu3,7dyji17qw7,encwql9fkl,5dfv4956g,evyie6i37c,9kgb5booep','igi9h6l2u2,kx2g63k187,htlobdwl9u,91jn5l8sy7,ry1fe6xwkq,c5styxdi0s,bhco2chkk2,h6ovbtmfav,du7pcr6u8w,1kyi74ldt,gdrru0upxv,38701ip527,d7n7m79qcy,jc80scesil,h7fcs1g8yc','6hya83k5di,keevcvzr7b,zjtyuxqbrv,8z66oww2jm,w5ri98z3dj,lq6t0a1p2v,gn9hbg82w0,fr7pm3rrty,l89svfs2ut,awc370qph4,d8or611e8e,j723vws4v8,h3bwqvymmt,6nl034e1rp,i26d1ifkpo','iwx40ibkvd,nqilg3q956,mv49q27734,sc3wnjhhqw,10ml5zkakgg,64k4ef6gbr,bwylm5l4lc,h5koyge6f7,dtmawdpg41,43vq7fd660,820r9rwif,1npurb4i3p,d1ftunuw02,i3zboax8od,4z09k1kg3r','z3p8x3blck,gyd08jkv3h,moq03w81vm,kc07xt8u7z,u3ihbj0vli,d63bpa8rqk,cofk3y5hos,jvbtfdytmg,6f6fx55d7p,8ubgwjvw3n,je8e7chmj2,7oh598v7d1,jsyph6p662,hyjhlytian,afd6ns91wx','o7oyy8wrci,b0cze91smk,tn79x0u3lw,7xz2jydwrd,bedc3ecw5x,cjfvtxvmy6,g4swyfkppa,7h4k540ns7,6k2z4h19hv,8ub3wnee5p,gwpw3gimx6,aflibvi0oi,i3gah02s7m,adnoxxkgod,6pcu0podc7'],\n  ['m0ypu0kozn,m57mlh8wmu,k9pu09u7dz,nn68telm5b,lt7q3qqvc5,s650loho5,i865i0a3we,hz67l3wkj7,8398rfj6gc,7p4fssefbe,7fwzuftmka,1i1lcv9z70,bln13lzgkw,41fwubkohz,1ji4fnkgcu','104wfz591x5,qxy01n8u78,12dwz7t6zyd,zyzd3vfl14,da8va9lunk,eq2g3qww4t,377xo1qa39,gffgwktpp,famy63pwko,85uk7901b7,club3ty822,ke1rffsagg,g5nxpnnxfq,kns2s2a9b3,4fua5nbl5u','q6pqvzp9z1,nf28zqd30j,ozl7fpaihg,jood3pfpi1,jzr7yhzsyy,ccufuis5oj,bcsdabibvn,9a8dtidsaq,69u26k0pcw,bbe21f67yb,8szgbtynck,3xw3gvx0oa,4085hzyr0l,fqudmjcz6p,ba6ctnzg8q','10x6dp18ddf,n989axt1hn,b41647f7ev,ipj4vgff0c,ng7ci65b59,4ge5w6jbhl,dbabls65vd,bjywkeij3g,jomj8m65zt,3m7g7oqok2,gwtephynpm,eiwsgvs55z,8s5razwa0m,88mnuab06b,ikiz5djuss','yedeaxari8,o0lo095em6,x6ny05zb1c,qe6ajuvtk9,mgyh8lwbfg,jww4lm7bn6,apyb7fzu63,jh34pp3598,i9hf2pqof8,5k07r68ilp,98su89jlm1,au0nzfwikh,a0s5qlnp8w,j9shtjy76p,1i5ptcw8u2','upmvld2yiz,sa4vfry05p,oebgbb6tpv,pjfbuiu4cc,hcgmp521lj,cr2c12thrn,963c6yuyo6,dckef71od3,92wl8xp037,8s9nj3rlb5,gjv01dxwfe,59rq9oqob4,l1e6f6f0ne,j4gng5cby4,ch8klbpxb6','prxt0be9e4,qfk83pb5qj,nf06ddg6ly,jfo2xl2lil,sj1vns01xk,59tlmwiqup,5durqumd0q,f0gaazytcn,l1w3mn91x3,cew72zfji3,bf5hmy32df,lnbaqo7kui,71ag3g04qh,t0vhja753,em1hr3yuhm','dka07it97l,k5d25je91c,hqryb4seq5,ms843el3fx,dd0ie8sc5o,jtrkoj9p1r,i0yce3t2if,5a1l5t3neg,5zyvubpe22,2ny6o5ul5x,c6o77rahq1,ly02eduvfa,dn1hqf62lk,5u9kvfx6bu,4uzhysfpm9'],\n  ['mmz6xkyiil,img807ci00,9oreyv4k8w,nwn25hsndu,x9f7rm3ikb,gohept88hr,4xyhc0kv2w,gngs7idjp7,9cm586sgqz,2pinvi0t6y,b2lveimiuo,gd0iev943k,erkt92ehom,flt6jcd9cc,5huhx9yjgq','hkk7qr5itw,fy4v05unzb,knfig8iol7,opqs2euwgc,iribibiq2d,cow3crbdq6,96ahgatnca,1vlwm6595u,jrdeqhf4qe,9wkmjk4t52,efhsyfnve7,1i77mh2jrr,6p5p9kw939,1pejgx4z21,6k7z6zizsc','ksajuubqnb,zqxcdk0raj,cal3jsqls7,zhjjmsvbc6,insa128ion,1oqkacftdi,6ixijjpgzp,4jvvktvkvl,4lib24u04a,6gusvqts6z,4t7amccxkx,8j5bhfu5wa,gth0v104rs,ghb0h371hz,etvu2l87uf','nr28zssm4d,9cvx5bddag,qesm79g87a,709np251v3,35rt541h31,9qkaul0e6t,ddzf12gulq,ctgmegee6l,2w9il0nou4,aeierkb1f,e4g2c2pfo6,zh524hrn5,26dh0l8pe7,1ua2q9wp9o,cuus6n00i2','lpxk16k4ri,r3dstrh4kk,9gzikt6aon,nq83l17erd,i4qw6c87r4,bqfokrc7fk,i6pzeaewjf,dlyc4x0xr4,a8mrj9mpkg,7rlzmhn4yj,d9gjmdoavk,cpxm7vp6ae,l3lm3fsfqw,7qwkve1hi3,fh4h7pe3yn','7r0yblgjgw,o63vdo9rt1,zj2fl7viyz,e3bvijy3lp,7qqg8k8is5,4uk3jy0wpj,2zsnz84ylh,hchsnwixvk,2avaa6dn7i,jib6i7uj3d,6k0bqvhbd6,d86uhlg6e9,8tjn3n76dh,4bqdiyokfw,jk9sj8p2f5','tm7kcvg5vd,gyai1r9owc,opx5owuh71,dox7jw59lg,bxt10d5kn1,8eboreqjar,hw2h5wqpqa,f77zevq7r0,bkeem69dak,1znctlsrh0,bv8ipguds3,7y8fflwvu,9ryxxflb0s,dpl2p1ltm8,6s15n69fby','wim24psv7g,j9agvb3yem,ldm2854zc5,n2pu0uhvja,4ephr6s5a9,co9n003j8u,64qir1rc5z,8o9rtwxu8w,7aob3iwsn2,32fv40co24,9vri0rog2u,5d9p0aukc5,i7p01amblk,cziyd3uzw2,2rdh13tvy0']\n];\n/* eslint-enable */\n\n\nexport const AFFINE_ODD_MULTIPLES_OF_BASEPOINT = LookupTable\n  .FromArrayOfStringsInRadix36Form(oddMultiplesAffinePointsInStringRadix36Form)\n\nexport const ED25519_BASEPOINT_TABLE_INNER: EdwardsBasepointTable = new EdwardsBasepointTable(\n  ed25519BasepointLookupTablesInStringRadix36Form.map(LookupTable.FromArrayOfStringsInRadix36Form),\n)\n","import {FieldElement, SQRT_M1} from './fieldElement'\nimport type {Scalar} from './scalar'\nimport type {EdwardsBasepointTable} from './edwardsBasepointTable'\nimport {EdwardsPoint} from './edwardsPoint'\nimport {ProjectivePoint} from './projectivePoint'\nimport {NafLookupTable} from './nafLookupTable'\nimport {\n  AFFINE_ODD_MULTIPLES_OF_BASEPOINT,\n  ED25519_BASEPOINT_TABLE_INNER,\n} from './tables'\n\nexport const INVSQRT_A_MINUS_D = new FieldElement([\n  278908739862762n,\n  821645201101625n,\n  8113234426968n,\n  1777959178193151n,\n  2118520810568447n,\n])\n\nexport class CompressedRistretto {\n  public bytes: Uint8Array\n\n  static FromBytes(data: Uint8Array): CompressedRistretto {\n    const compressedRistretto = new CompressedRistretto()\n    compressedRistretto.bytes = data\n    return compressedRistretto\n  }\n\n  ToBytes(): Uint8Array {\n    return this.bytes.slice()\n  }\n}\n\nexport class RistrettoBasepointTable {\n  public edwardsBasepointTable: EdwardsBasepointTable\n\n  public constructor() {\n    this.edwardsBasepointTable = ED25519_BASEPOINT_TABLE_INNER\n  }\n\n  Mul(s: Scalar): RistrettoPoint {\n    const ep = this.edwardsBasepointTable.Mul(s)\n\n    return new RistrettoPoint(ep)\n  }\n}\n\nexport class RistrettoPoint {\n  public Ep: EdwardsPoint\n\n  public constructor(ep: EdwardsPoint) {\n    this.Ep = ep\n  }\n\n  static FromCompressedPoint(compressed: CompressedRistretto): RistrettoPoint {\n    const bytes = compressed.ToBytes()\n    const ep = EdwardsPoint.FromCompressedPoint(bytes.slice())\n    return new RistrettoPoint(ep)\n  }\n\n  static FromCompressedPointBytes(bytes: Uint8Array): RistrettoPoint {\n    const ep = EdwardsPoint.FromCompressedPoint(bytes.slice())\n    return new RistrettoPoint(ep)\n  }\n\n  Negate(): RistrettoPoint {\n    const ep = this.Ep.Negate()\n    return new RistrettoPoint(ep)\n  }\n\n  /// Compute \\\\(aA + bB\\\\) in letiable time, where \\\\(B\\\\) is the\n  /// Ristretto basepoint.\n  static vartimeDoubleScalarMulBasepoint(\n    a: Scalar,\n    A: EdwardsPoint,\n    b: Scalar,\n  ): EdwardsPoint {\n    // console.log('a is ok', a.bytes.toString() === `47,22,65,197,127,131,55,10,206,175,12,199,162,219,233,169,198,195,156,216,106,174,24,128,229,162,23,37,178,131,78,5`)\n    // console.log('b is ok', b.bytes.toString() === `73,169,253,171,114,135,149,240,248,209,238,64,225,244,19,87,70,53,221,245,134,0,153,2,119,98,93,49,221,3,16,3`)\n\n    const aNaf = a.NonAdjacentForm(5)\n    // console.log('a naf is ok', aNaf.toString() === '15,0,0,0,0,-15,0,0,0,0,0,3,0,0,0,0,1,0,0,0,0,0,-11,0,0,0,0,-7,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,15,0,0,0,0,3,0,0,0,0,5,0,0,0,0,0,0,0,7,0,0,0,0,-1,0,0,0,0,0,11,0,0,0,0,0,3,0,0,0,0,0,7,0,0,0,0,0,11,0,0,0,0,0,0,-3,0,0,0,0,-9,0,0,0,0,0,0,-11,0,0,0,0,0,0,0,-11,0,0,0,0,-5,0,0,0,0,-7,0,0,0,0,0,0,-15,0,0,0,0,0,-3,0,0,0,0,5,0,0,0,0,0,-5,0,0,0,0,11,0,0,0,0,-13,0,0,0,0,0,0,11,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,-9,0,0,0,0,9,0,0,0,0,15,0,0,0,0,-15,0,0,0,0,-13,0,0,0,0,9,0,0,0,0,0,-5,0,0,0,0,0,1,0,0,0,0,-3,0,0,0,0,-11,0,0,0,0,3,0,0,0,0,0,0')\n\n    const bNaf = b.NonAdjacentForm(8)\n    // console.log('b naf is ok', bNaf.toString() === '73,0,0,0,0,0,0,0,-87,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,-85,0,0,0,0,0,0,0,-35,0,0,0,0,0,0,0,0,-79,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,-113,0,0,0,0,0,0,0,0,0,0,0,0,105,0,0,0,0,0,0,0,119,0,0,0,0,0,0,0,0,0,0,0,0,-123,0,0,0,0,0,0,0,0,0,-11,0,0,0,0,0,0,0,0,0,-59,0,0,0,0,0,0,0,0,-53,0,0,0,0,0,0,0,-87,0,0,0,0,0,0,0,-89,0,0,0,0,0,0,0,0,0,-81,0,0,0,0,0,0,0,0,0,0,-121,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,-103,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,119,0,0,0,0,0,0,0,0,-79,0,0,0,0,0,0,0,-81,0,0,0,0,0,0,0,-103,0,0,0,0,0,0,0,-17,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0')\n\n    let i = 0\n\n    /// Find starting index\n    for (let ind = 255; ind >= 0; ind--) {\n      i = ind\n      if (aNaf[i] !== 0 || bNaf[i] !== 0) {\n        break\n      }\n    }\n\n    const tableA = NafLookupTable.FromEdwardsPoint(A)\n    const tableB = AFFINE_ODD_MULTIPLES_OF_BASEPOINT\n\n    let r = ProjectivePoint.Identity()\n\n    while (i >= 0) {\n      let t = r.Double()\n\n      if (aNaf[i] > 0) {\n        const t1 = t.ToExtended()\n        const i1 = Math.floor(Math.abs((-1 * aNaf[i]) / 2))\n        const t2 = tableA.Pnp[i1]\n        t = t1.AddPnp(t2)\n      } else if (aNaf[i] < 0) {\n        const t1 = t.ToExtended()\n        const i1 = Math.floor(Math.abs((-1 * aNaf[i]) / 2))\n        const t2 = tableA.Pnp[i1]\n        t = t1.SubPnp(t2)\n      }\n\n      if (bNaf[i] > 0) {\n        const t1 = t.ToExtended()\n        const i1 = Math.floor(Math.abs((-1 * bNaf[i]) / 2))\n        const t2 = tableB.affineNielsPoints[i1]\n        t = t1.AddAnp(t2)\n      } else if (bNaf[i] < 0) {\n        const t1 = t.ToExtended()\n        const i1 = Math.floor(Math.abs((-1 * bNaf[i]) / 2))\n        const t2 = tableB.affineNielsPoints[i1]\n        t = t1.SubAnp(t2)\n      }\n\n      r = t.ToProjective()\n\n      i--\n    }\n\n    return r.ToExtended()\n  }\n\n  /// Compress this point using the Ristretto encoding.\n  Compress(): CompressedRistretto {\n    const X = this.Ep.X\n    const Y = this.Ep.Y\n    const Z = this.Ep.Z\n    const T = this.Ep.T\n\n    const u1 = Z.Add(Y).Mul(Z.Sub(Y))\n    const u2 = X.Mul(Y)\n\n    // Ignore return value since this is always square\n    const inv = FieldElement.SqrtRatioI(FieldElement.One(), u1.Mul(u2.Square()))\n    // let inv = invsqrt(u1.Mul(u2.Square()));\n    const i1 = inv.i1.Mul(u1)\n    const i2 = inv.i1.Mul(u2)\n    const zInv = i1.Mul(i2.Mul(T))\n    const denInv = i2\n\n    const iX = X.Mul(SQRT_M1)\n    const iY = Y.Mul(SQRT_M1)\n    const ristretto_magic = INVSQRT_A_MINUS_D\n    const enchanted_denominator = i1.Mul(ristretto_magic)\n    const rotate = T.Mul(zInv).IsNegative()\n\n    X.ConditionalAssign(iY, rotate)\n    Y.ConditionalAssign(iX, rotate)\n    denInv.ConditionalAssign(enchanted_denominator, rotate)\n\n    Y.ConditionalNegate(X.Mul(zInv).IsNegative())\n\n    const s = denInv.Mul(Z.Sub(Y))\n    const s_is_negative = s.IsNegative()\n    s.ConditionalNegate(s_is_negative)\n\n    const res = CompressedRistretto.FromBytes(s.ToBytes())\n\n    return res\n  }\n}\n","import {Transcript, getBytesU32} from './external/merlin'\nimport {randomBytes} from '@noble/hashes/utils'\nimport {\n  Scalar,\n  ScalarAdd,\n  ScalarMul,\n  ScalarBigintToBytesForm,\n  ScalarBytesToBigintForm,\n} from './scalar'\nimport {CompressedRistretto, RistrettoBasepointTable, RistrettoPoint} from './ristretto'\nimport {sha512} from '@noble/hashes/sha512'\n\ninterface ISigningContext {\n  BytesClone: (data: Uint8Array) => Transcript\n  Bytes: (data: Uint8Array) => any\n  GetTranscript: () => Transcript\n}\n\nfunction isUint8ArrayEqual(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) return false\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false\n  }\n\n  return true\n}\n\nconst textEncoder = new TextEncoder()\n\nexport class SecretKey {\n  nonce: Uint8Array\n  key: Scalar\n\n  static FromBytes(bytes: Uint8Array): SecretKey {\n    if (bytes.length !== 64) {\n      throw new Error(`Invalid secret key length: ${bytes.length} (expected 64)`)\n    }\n\n    const secretKey: SecretKey = new SecretKey()\n\n    secretKey.key = Scalar.FromBytes(\n      Scalar.DivideScalarBytesByCofactor(bytes.slice(0, 32)),\n    )\n\n    secretKey.nonce = bytes.slice(32, 64)\n\n    return secretKey\n  }\n\n  static FromScalarAndNonce(scalar: Scalar, nonce: Uint8Array): SecretKey {\n    if (nonce.length !== 32) {\n      throw new Error(`Invalid nonce length: ${nonce.length} (expected 32)`)\n    }\n    const secretKey: SecretKey = new SecretKey()\n\n    secretKey.key = scalar\n    secretKey.nonce = nonce\n\n    return secretKey\n  }\n\n  static FromMiniSecret(miniSecret: Uint8Array): SecretKey {\n    if (miniSecret.length !== 32) {\n      throw new Error(`Invalid mini secret length: ${miniSecret.length} (expected 32)`)\n    }\n\n    const r = sha512(miniSecret)\n\n    const key = r.slice(0, 32)\n    key[0] &= 248 // 1111_1000 0xf8\n    key[31] &= 63 // 0011_1111 0x3f\n    key[31] |= 64 // 0100_0000 0x40\n    const scalar = Scalar.FromBits(Scalar.DivideScalarBytesByCofactor(key))\n\n    const nonce = r.slice(32, 64)\n\n    const secretKey: SecretKey = new SecretKey()\n\n    secretKey.key = scalar\n    secretKey.nonce = nonce\n\n    return secretKey\n  }\n\n  ToBytes(): Uint8Array {\n    const bytes = new Uint8Array(64)\n    const key = this.key.bytes.slice()\n    Scalar.MultiplyScalarBytesByCofactor(key)\n    bytes.set(key, 0)\n    bytes.set(this.nonce.slice(), 32)\n    return bytes\n  }\n\n  ToPublicKey(): PublicKey {\n    const publicKey = new PublicKey()\n\n    const point = new RistrettoBasepointTable().Mul(this.key).Compress()\n\n    publicKey.key = point.ToBytes()\n\n    return publicKey\n  }\n\n  sign(\n    message: Uint8Array,\n    publicKey: PublicKey,\n    rng: RandomGenerator = new RandomGenerator(),\n  ): Signature {\n    const signingContext = new SigningContext085(textEncoder.encode('substrate'))\n\n    const st = new SigningTranscript(signingContext)\n\n    signingContext.Bytes(message)\n\n    st.SetProtocolName(textEncoder.encode('Schnorr-sig'))\n    st.CommitPointBytes(textEncoder.encode('sign:pk'), publicKey.ToBytes())\n\n    const r = st.WitnessScalarLabel(\n      textEncoder.encode('signing'),\n      this.nonce,\n      rng,\n    )\n    const sc = new Scalar()\n    sc.bytes = r\n\n    const tbl = new RistrettoBasepointTable()\n    const R = tbl.Mul(sc).Compress()\n\n    st.CommitPoint(textEncoder.encode('sign:R'), R)\n\n    const k = st.ChallengeScalar(textEncoder.encode('sign:c')) // context, message, A/public_key, R=rG\n    const scalar = ScalarAdd(\n      ScalarMul(\n        ScalarBytesToBigintForm(k),\n        ScalarBytesToBigintForm(this.key.ToBytes()),\n      ),\n      ScalarBytesToBigintForm(r),\n    )\n\n    const sig = Signature.FromCompressedRistrettoAndScalar(\n      R,\n      Scalar.FromBytes(ScalarBigintToBytesForm(scalar)),\n    )\n\n    return sig\n  }\n}\n\nexport class PublicKey {\n  key: Uint8Array\n\n  static FromBytes(bytes: Uint8Array): PublicKey {\n    const publicKey = new PublicKey()\n\n    publicKey.key = bytes\n\n    return publicKey\n  }\n\n  ToBytes(): Uint8Array {\n    return this.key.slice()\n  }\n\n  ToRistrettoPoint(): RistrettoPoint {\n    return RistrettoPoint.FromCompressedPointBytes(this.key)\n  }\n\n  verify(message: Uint8Array, signatureBytes: Uint8Array): boolean {\n    const signingTranscript = new SigningContext085(textEncoder.encode('substrate')).BytesClone(message)\n\n    const signature = Signature.FromBytes(signatureBytes)\n\n    // console.log(printTranscriptMax(signingTranscript))\n    // console.log(\"signature.R\", signature.R)\n    // console.log(\"signature.S\", signature.S)\n\n    signingTranscript.AppendMessage(textEncoder.encode('proto-name'), textEncoder.encode('Schnorr-sig'))\n    signingTranscript.AppendMessage(textEncoder.encode('sign:pk'), this.key)\n    signingTranscript.AppendMessage(textEncoder.encode('sign:R'), signature.R.ToBytes())\n\n    const k = Scalar.FromBytes(Scalar.FromBytesModOrderWide(\n      signingTranscript.ChallengeBytes(textEncoder.encode('sign:c'), 64),\n    ))\n\n    // printTranscriptMax(signingTranscript)\n    // console.log(\"k\", k)\n\n    const A = this.ToRistrettoPoint()\n    const negA = A.Negate()\n\n    // console.log('negA', negA.Ep)\n\n    const R = RistrettoPoint.vartimeDoubleScalarMulBasepoint(\n      k,\n      negA.Ep,\n      signature.S,\n    )\n    const compressed = new RistrettoPoint(R).Compress()\n    return isUint8ArrayEqual(compressed.ToBytes(), signature.R.ToBytes())\n  }\n}\n\nexport class RandomGenerator {\n  GetRandomArrayU8_32(): Uint8Array {\n    return randomBytes(32)\n  }\n\n  GetHardcoded(): Uint8Array {\n    return Uint8Array.from([\n      77, 196, 92, 65, 167, 196, 215, 23, 222, 26, 136, 164, 123, 67, 115, 78,\n      178, 96, 208, 59, 8, 157, 203, 111, 157, 87, 69, 105, 155, 61, 111, 153,\n    ])\n  }\n}\n\nclass Signature {\n  public R: CompressedRistretto\n  public S: Scalar\n\n  static FromBytes(bytes: Uint8Array) {\n    const signature = new Signature()\n    if (bytes.length !== 64) {\n      throw new Error('Invalid signature length')\n    }\n\n    const lower = bytes.slice(0, 32)\n    const upper = bytes.slice(32, 64)\n    if ((upper[31] & 128) === 0) {\n      throw new Error('Invalid signature')\n    }\n    upper[31] &= 127\n\n    signature.R = CompressedRistretto.FromBytes(lower)\n\n    // todo: proper check scalar and reduce it if necessary\n    signature.S = Scalar.FromBytes(upper)\n\n    return signature\n  }\n\n  static FromCompressedRistrettoAndScalar(R: CompressedRistretto, S: Scalar): Signature {\n    const signature = new Signature()\n    signature.R = R\n    signature.S = S\n    return signature\n  }\n\n  ToBytes() {\n    const compressedRistrettoBytes = this.R.ToBytes()\n    const scalarBytes = this.S.ToBytes()\n    const mergedArray = new Uint8Array(compressedRistrettoBytes.length + scalarBytes.length)\n    mergedArray.set(compressedRistrettoBytes)\n    mergedArray.set(scalarBytes, compressedRistrettoBytes.length)\n    mergedArray[63] |= 128\n    return mergedArray\n  }\n}\n\nexport class SigningTranscript {\n  context: ISigningContext\n\n  constructor(context: ISigningContext) {\n    // _operations = new SigningTranscriptOperation();\n    this.context = context\n  }\n\n  SetProtocolName(label: Uint8Array) {\n    this.CommitBytesB(\n      this.context.GetTranscript(),\n      textEncoder.encode('proto-name'),\n      label,\n    )\n  }\n\n  CommitPoint(label: Uint8Array, compressed: CompressedRistretto) {\n    this.CommitBytesB(this.context.GetTranscript(), label, compressed.ToBytes())\n  }\n\n  CommitPointBytes(label: Uint8Array, bytes: Uint8Array) {\n    this.CommitBytesB(this.context.GetTranscript(), label, bytes)\n  }\n\n  WitnessScalarLabel(\n    label: Uint8Array,\n    bytes: Uint8Array,\n    rng: RandomGenerator,\n  ): Uint8Array {\n    return this.WitnessScalarFR(this.context.GetTranscript(), label, bytes, rng)\n  }\n\n  WitnessScalar(bytes: Uint8Array, rng: RandomGenerator): Uint8Array {\n    return this.WitnessScalarSR(this.context.GetTranscript(), bytes, rng)\n  }\n\n  ChallengeScalar(label: Uint8Array): Uint8Array {\n    const data = this.ChallengeBytes(label)\n    return Scalar.FromBytesModOrderWide(data)\n  }\n\n  ChallengeBytes(label: Uint8Array): Uint8Array {\n    return this.ChallengeBytesTL(this.context.GetTranscript(), label)\n  }\n\n  ChallengeBytesTL(ts: Transcript, label: Uint8Array): Uint8Array {\n    return ts.ChallengeBytes(label, 64)\n  }\n\n  CommitBytesB(ts: Transcript, label: Uint8Array, bytes: Uint8Array) {\n    ts.AppendMessage(label, bytes)\n  }\n\n  CommitBytesS(ts: Transcript, label: string, bytes: Uint8Array) {\n    ts.AppendMessage(textEncoder.encode(label), bytes)\n  }\n\n  CommitPointF(\n    ts: Transcript,\n    label: Uint8Array,\n    compressedRistretto: Uint8Array,\n  ) {\n    this.CommitBytesB(ts, label, compressedRistretto)\n  }\n\n  WitnessScalarSR(\n    ts: Transcript,\n    nonce: Uint8Array,\n    rng: RandomGenerator,\n  ): Uint8Array {\n    const t = ts.WitnessBytes(new Uint8Array(0), nonce, rng)\n\n    // Fill bytes size = 64\n    t.MetaAd(Uint8Array.from([64]), false)\n    const dst = t.Prf(64, false)\n\n    return Scalar.FromBytesModOrderWide(dst)\n  }\n\n  WitnessScalarFR(\n    ts: Transcript,\n    label: Uint8Array,\n    nonce: Uint8Array,\n    rng: RandomGenerator,\n  ): Uint8Array {\n    const t = ts.WitnessBytes(label, nonce, rng)\n\n    // Fill bytes  size = 64\n    t.MetaAd(getBytesU32(64), false)\n    const dst = t.Prf(64, false)\n\n    return Scalar.FromBytesModOrderWide(dst)\n  }\n}\n\nexport class SigningContext085 implements ISigningContext {\n  ts: Transcript\n\n  constructor(context: Uint8Array) {\n    this.ts = new Transcript()\n    this.ts.Init('SigningContext')\n    this.ts.AppendMessage(new Uint8Array(), context)\n  }\n\n  Bytes(data: Uint8Array) {\n    this.ts.AppendMessage(textEncoder.encode('sign-bytes'), data)\n  }\n\n  BytesClone(data: Uint8Array): Transcript {\n    const clone = this.ts.Clone()\n    clone.AppendMessage(textEncoder.encode('sign-bytes'), data)\n    return clone\n  }\n\n  GetTranscript(): Transcript {\n    return this.ts\n  }\n}\n","export const toTwos = (value: bigint, width: number | bigint): bigint => {\n  return value >= 0 ? value : (1n << BigInt(width)) + value\n}\n\nconst DEFAULT_OPTS = {bitLength: -1, isLe: true, isNegative: false}\n\nexport const bigIntToUint8Array = (value: bigint | null, options: {bitLength?: number, isLe?: boolean, isNegative?: boolean} = DEFAULT_OPTS): Uint8Array => {\n  options = {...DEFAULT_OPTS, ...options}\n  const {bitLength, isLe, isNegative} = options\n\n  const byteLength = Math.ceil(bitLength === -1\n    ? (value || 0n).toString(2).length / 8 // if bitLength is -1, take the real value's bit length\n    : (bitLength || 0) / 8, // if bitLength is not -1, take the bitLength\n  )\n\n  if (!value) {\n    return new Uint8Array(bitLength === -1 ? 1 : byteLength)\n  }\n\n  const bn = isNegative\n    ? toTwos(value, byteLength * 8)\n    : value\n\n  const arr = (bn\n    .toString(16)\n    .padStart(byteLength * 2, '0')\n    .match(/.{2}/g) || []\n  ).map(x => parseInt(x, 16))\n\n  return new Uint8Array(isLe ? arr.reverse() : arr)\n}\n\nconst REGEX_HEX_PREFIXED = /^0x[\\da-fA-F]+$/\n\nexport function isHex(value: unknown, bitLength = -1, ignoreLength?: boolean): boolean {\n  return typeof value === 'string' && (value === '0x' || REGEX_HEX_PREFIXED.test(value)) && (\n    bitLength === -1\n      ? (ignoreLength || (value.length % 2 === 0))\n      : (value.length === (2 + Math.ceil(bitLength / 4)))\n  )\n}\n\nexport const uInt8ArrayToHex = (bytes: Uint8Array | null): string => {\n  return !bytes ? '0x' : bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '0x')\n}\n\nexport const hexStringToUint8Array = (str: string | null, bitLength: number = -1): Uint8Array => {\n  if (!str) {\n    return new Uint8Array()\n  }\n  if (!isHex(str)) {\n    throw new Error(`Invalid hex string: ${str}`)\n  }\n  if (str.startsWith('0x')) {\n    str = str.slice(2)\n  }\n\n  if (bitLength !== -1) {\n    str = (bitLength / 4 < str.length) // if the bit length is less than the string length\n      ? str.slice(0, bitLength / 4) // slice the string to the bit length\n      : str.padStart(bitLength / 4, '0') // otherwise, pad the string to the bit length\n  }\n  if (str.length % 2 !== 0) {\n    str = str + '0'\n  }\n\n  const pairs = str\n    .replace(/^0x/, '')\n    .match(/.{1,2}/g)\n  if (!pairs) {\n    return new Uint8Array()\n  }\n  const bytes = pairs.map(b => parseInt(b, 16))\n  return new Uint8Array(bytes)\n}\n\nexport function u8aConcatStrict(u8as: readonly Uint8Array[], length = 0): Uint8Array {\n  let offset = 0\n\n  if (!length) {\n    for (let i = 0; i < u8as.length; i++) {\n      length += u8as[i].length\n    }\n  }\n\n  const result = new Uint8Array(length)\n\n  for (let i = 0; i < u8as.length; i++) {\n    result.set(u8as[i], offset)\n    offset += u8as[i].length\n  }\n\n  return result\n}\n\nconst maxU8 = 0b111111n\nconst maxU16 = 0b11111111111111n\nconst maxU32 = 0b1111111111\nconst bl16 = {bitLength: 16}\nconst bl32 = {bitLength: 32}\n\nconst compactToU8a = (value: bigint | number): Uint8Array => {\n  const bn = BigInt(value)\n\n  if (bn <= maxU8) {\n    return new Uint8Array([Number(bn << 2n)])\n  } else if (bn <= maxU16) {\n    return bigIntToUint8Array((bn << 2n) + 1n, bl16)\n  } else if (bn <= maxU32) {\n    return bigIntToUint8Array((bn << 2n) + 2n, bl32)\n  }\n\n  const u8a = bigIntToUint8Array(bn)\n  let length = u8a.length\n\n  while (u8a[length - 1] === 0) {\n    length--\n  }\n\n  if (length < 4) {\n    throw new Error('Invalid length, previous checks match anything less than 2^30')\n  }\n\n  return u8aConcatStrict([\n    new Uint8Array([((length - 4) << 2) + 0b11]),\n    u8a.subarray(0, length),\n  ])\n}\n\nexport function compactAddLength(input: Uint8Array): Uint8Array {\n  return u8aConcatStrict([\n    compactToU8a(input.length),\n    input,\n  ])\n}\n","import {sha256} from '@noble/hashes/sha256'\nimport {sha512} from '@noble/hashes/sha512'\nimport {pbkdf2, pbkdf2Async} from '@noble/hashes/pbkdf2'\nimport {randomBytes} from '@noble/hashes/utils'\n\nconst INVALID_MNEMONIC = 'Invalid mnemonicToMiniSecretAsync'\nconst INVALID_ENTROPY = 'Invalid entropy'\nconst INVALID_CHECKSUM = 'Invalid mnemonicToMiniSecretAsync checksum'\n\nexport const DEFAULT_WORDLIST: string = 'abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo'\n\nconst WORDS_MAP = DEFAULT_WORDLIST.split('|').reduce<Record<string, number>>((acc, elem, index) => {\n  acc[elem] = index\n  return acc\n}, {})\n\n// returns the first n bits of the sha256 hash of the input\n// n is the length of the entropy in bytes divided by 4\n// for 12 word mnemonics, n = 16 / 4 = 4\n// for 15 word mnemonics, n = 20 / 4 = 5\n// and so on\nconst sha256FirstNBits = (entropy: Uint8Array): string =>\n  sha256(entropy)[0]\n    .toString(2)\n    .padStart(8, '0')\n    .slice(0, entropy.length / 4)\n\nexport const mnemonicToEntropy = (mnemonic: string): Uint8Array => {\n  const words = (mnemonic.normalize('NFKD')).split(' ').filter(word => !!word)\n\n  if (words.length % 3 !== 0 || words.length < 12 || words.length > 24) {\n    throw new Error(INVALID_MNEMONIC)\n  }\n\n  // convert word indices to 11 bit binary strings\n  const bits = words\n    .map((word): string => {\n      if (!(word in WORDS_MAP)) {\n        throw new Error(INVALID_MNEMONIC)\n      }\n\n      const index = WORDS_MAP[word]\n\n      return index.toString(2).padStart(11, '0')\n    })\n    .join('')\n\n  const dividerIndex = bits.length - (words.length / 3)\n  const entropyBits = bits.slice(0, dividerIndex)\n  const checksumBits = bits.slice(dividerIndex)\n\n  // calculate the checksum and compare\n  const matched = entropyBits.match(/(.{1,8})/g)\n  const entropyBytes = matched?.map(bin => parseInt(bin, 2))\n\n  if (!entropyBytes || (entropyBytes.length % 4 !== 0) || (entropyBytes.length < 16) || (entropyBytes.length > 32)) {\n    throw new Error(INVALID_ENTROPY)\n  }\n\n  const entropy = Uint8Array.from(entropyBytes)\n\n  if (sha256FirstNBits(entropy) !== checksumBits) {\n    throw new Error(INVALID_CHECKSUM)\n  }\n\n  return entropy\n}\n\nexport function entropyToMnemonic(entropy: Uint8Array): string {\n  // entropy length should be one of [16, 20, 24, 28, 32]\n  if ((entropy.length % 4 !== 0) || (entropy.length < 16) || (entropy.length > 32)) {\n    throw new Error(INVALID_ENTROPY)\n  }\n\n  const entropyInBinaryForm = Array.from(entropy)\n    .map(byte => byte.toString(2).padStart(8, '0')).join('')\n\n  const entropyWithChecksum = entropyInBinaryForm + sha256FirstNBits(entropy)\n\n  const splittedBy11BinaryDigits = entropyWithChecksum.match(/(.{1,11})/g)\n  const wordNumbers = splittedBy11BinaryDigits?.map(binary => parseInt(binary, 2))\n\n  if (!wordNumbers || (wordNumbers.length < 12)) {\n    throw new Error('Unable to map entropy to mnemonic')\n  }\n\n  const WORDLIST = DEFAULT_WORDLIST.split('|')\n  const words = wordNumbers.map((wordNumber) => WORDLIST[wordNumber])\n\n  return words.join(' ')\n}\n\nexport const generateMnemonic = (strengthInBits = 128): string => {\n  return entropyToMnemonic(randomBytes(strengthInBits / 8)).toString().trim()\n}\n\nexport const validateMnemonic = (mnemonic: string): {result: true, error: null} | {result: false, error: Error} => {\n  try {\n    mnemonicToEntropy(mnemonic)\n  } catch (e: any) {\n    return {\n      result: false,\n      error: e as Error,\n    }\n  }\n\n  return {\n    result: true,\n    error: null,\n  }\n}\nconst mnemonicToEntropyAndSalt = (mnemonic: string, password = ''): {entropy: Uint8Array, salt: Uint8Array} => {\n  const validationResult = validateMnemonic(mnemonic)\n  if (!validationResult.result) {\n    throw new Error(`Invalid bip39 mnemonic specified: ${validationResult.error.toString()}`)\n  }\n  const entropy: Uint8Array = mnemonicToEntropy(mnemonic)\n  const salt: Uint8Array = new TextEncoder().encode(`mnemonic${password}`)\n\n  return {entropy, salt}\n}\n\nexport const mnemonicToMiniSecretAsync = async(mnemonic: string, password = ''): Promise<Uint8Array> => {\n  const {entropy, salt} = mnemonicToEntropyAndSalt(mnemonic, password)\n  // return the first 32 bytes as the seed\n  const result = await pbkdf2Async(sha512, entropy, salt, {c: 2048, dkLen: 64})\n  return result.slice(0, 32)\n}\n\nexport const mnemonicToMiniSecret = (mnemonic: string, password = ''): Uint8Array => {\n  const {entropy, salt} = mnemonicToEntropyAndSalt(mnemonic, password)\n\n  // return the first 32 bytes as the seed\n  const result = pbkdf2(sha512, entropy, salt, {c: 2048, dkLen: 64})\n  return result.slice(0, 32)\n}\n","/**\n Converts a string to a Uint8Array\n @example b`hello world` // Uint8Array(11) [104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100]\n */\nexport const b = (tmpl: TemplateStringsArray, ...values: any[]): Uint8Array => {\n  return new TextEncoder().encode(String.raw(tmpl, ...values))\n}\n\n/**\n * Converts a hex string to a Uint8Array\n * @example hex`0x01020304` // Uint8Array(4) [1, 2, 3, 4]\n * @example hex`01020304`   // Uint8Array(4) [1, 2, 3, 4]\n */\nexport const hex = (tmpl: TemplateStringsArray, ...values: any[]): Uint8Array => {\n  let str = String.raw(tmpl, ...values)\n  if (str.startsWith('0x')) {\n    str = str.slice(2)\n  }\n  if (!str.match(/^[0-9a-fA-F]+$/)) {\n    throw new Error(`Invalid hex string: ${str}`)\n  }\n  return new Uint8Array((str.match(/.{1,2}/g) || []).map(b => parseInt(b, 16)))\n}\n","// translated from the original Rust version of Strobe128\n// https://github.com/dalek-cryptography/merlin/blob/53535f32e6d6de421372d67f56176af0c0f55fd7/src/strobe.rs\nimport {b} from '../templateLiteralFunctions'\n\nimport {keccakP} from '@noble/hashes/sha3'\nconst keccakF1600 = (state: Uint8Array) => {\n  keccakP(new Uint32Array(state.buffer, state.byteOffset, Math.floor(state.byteLength / 4)), 24)\n}\n\nconst STROBE_R = 166\n\nconst FLAG_I = 1\nconst FLAG_A = 1 << 1\nconst FLAG_C = 1 << 2\nconst FLAG_T = 1 << 3\nconst FLAG_M = 1 << 4\nconst FLAG_K = 1 << 5\n\nexport class Strobe128 {\n  private readonly state: Uint8Array\n  private pos: number\n  private pos_begin: number\n  private cur_flags: number\n\n  constructor(protocol_label: Uint8Array) {\n    const initial_state = new Uint8Array(200)\n    initial_state[0] = 1\n    initial_state[1] = STROBE_R + 2\n    initial_state[2] = 1\n    initial_state[3] = 0\n    initial_state[4] = 1\n    initial_state[5] = 96\n    initial_state.set(b`STROBEv1.0.2`, 6)\n    keccakF1600(initial_state)\n\n    this.state = initial_state\n    this.pos = 0\n    this.pos_begin = 0\n    this.cur_flags = 0\n\n    this.meta_ad(protocol_label, false)\n  }\n\n  /// /////////////////////////////////////\n  // public methods\n  /// /////////////////////////////////////\n\n  public meta_ad(data: Uint8Array, more: boolean): void {\n    this.begin_op(FLAG_M | FLAG_A, more)\n    this.absorb(data)\n  }\n\n  public ad(data: Uint8Array, more: boolean): void {\n    this.begin_op(FLAG_A, more)\n    this.absorb(data)\n  }\n\n  public prf(data: Uint8Array, more: boolean): void {\n    this.begin_op(FLAG_I | FLAG_A | FLAG_C, more)\n    this.squeeze(data)\n  }\n\n  public key(data: Uint8Array, more: boolean): void {\n    this.begin_op(FLAG_A | FLAG_C, more)\n    this.overwrite(data)\n  }\n\n  public clone(): Strobe128 {\n    const clone: Strobe128 = new Strobe128(new Uint8Array(0))\n    clone.state.set(this.state)\n    clone.pos = this.pos\n    clone.pos_begin = this.pos_begin\n    clone.cur_flags = this.cur_flags\n    return clone\n  }\n\n  public cloneState() {\n    return {\n      state: this.state.slice(),\n      pos: this.pos,\n      pos_begin: this.pos_begin,\n      cur_flags: this.cur_flags,\n    }\n  }\n\n  /// /////////////////////////////////////\n  // private methods\n  /// /////////////////////////////////////\n  private run_f(): void {\n    this.state[this.pos] ^= this.pos_begin\n    this.state[this.pos + 1] ^= 0x04\n    this.state[STROBE_R + 1] ^= 0x80\n    keccakF1600(this.state)\n    this.pos = 0\n    this.pos_begin = 0\n  }\n\n  private absorb(data: Uint8Array): void {\n    for (let i = 0; i < data.length; i++) {\n      this.state[this.pos] ^= data[i]\n      this.pos++\n      if (this.pos === STROBE_R) {\n        this.run_f()\n      }\n    }\n  }\n\n  private overwrite(data: Uint8Array): void {\n    for (let i = 0; i < data.length; i++) {\n      this.state[this.pos] = data[i]\n      this.pos++\n      if (this.pos === STROBE_R) {\n        this.run_f()\n      }\n    }\n  }\n\n  private squeeze(data: Uint8Array): void {\n    for (let i = 0; i < data.length; i++) {\n      data[i] = this.state[this.pos]\n      this.state[this.pos] = 0\n      this.pos++\n      if (this.pos === STROBE_R) {\n        this.run_f()\n      }\n    }\n  }\n\n  private begin_op(flags: number, more: boolean): void {\n    // Check if we're continuing an operation\n    if (more) {\n      if (this.cur_flags !== flags) {\n        throw new Error(`You tried to continue op ${this.cur_flags.toString(2)} but changed flags to ${flags.toString(2)}`)\n      }\n      return\n    }\n\n    // Skip adjusting direction information (we just use AD, PRF)\n    if ((flags & FLAG_T) !== 0) {\n      throw new Error('You used the T flag, which this implementation doesn\\'t support')\n    }\n\n    const old_begin = this.pos_begin\n    this.pos_begin = this.pos + 1\n    this.cur_flags = flags\n\n    this.absorb(new Uint8Array([old_begin, flags]))\n\n    // Force running F if C or K is set\n    const force_f = (flags & (FLAG_C | FLAG_K)) !== 0\n    if (force_f && this.pos !== 0) {\n      this.run_f()\n    }\n  }\n}\n","import {b} from '../templateLiteralFunctions'\n\nexport const MERLIN_PROTOCOL_LABEL = b`Merlin v1.0`\n","import {Strobe128} from './strobe128'\nimport {MERLIN_PROTOCOL_LABEL} from './constants'\nimport {b} from '../templateLiteralFunctions'\nimport {randomBytes} from '@noble/hashes/utils'\n\nconst encode_u64 = (x: bigint): Uint8Array => {\n  const buf = new Uint8Array(8)\n  buf[0] = Number(x & 255n)\n  buf[1] = Number((x >> 8n) & 255n)\n  buf[2] = Number((x >> 16n) & 255n)\n  buf[3] = Number((x >> 24n) & 255n)\n  buf[4] = Number((x >> 32n) & 255n)\n  buf[5] = Number((x >> 40n) & 255n)\n  buf[6] = Number((x >> 48n) & 255n)\n  buf[7] = Number((x >> 56n) & 255n)\n  return buf\n}\n\nconst encode_usize_as_u32 = (x: number): Uint8Array => {\n  if (x > 4294967295n) {\n    throw new Error('encode_usize_as_u32: x > 4294967295n')\n  }\n\n  const buf = new Uint8Array(4)\n\n  buf[0] = x & 255\n  buf[1] = (x >> 8) & 255\n  buf[2] = (x >> 16) & 255\n  buf[3] = (x >> 24) & 255\n\n  return buf\n}\n\nexport class Transcript {\n  private readonly strobe: Strobe128\n\n  constructor(label: Uint8Array) {\n    this.strobe = new Strobe128(MERLIN_PROTOCOL_LABEL)\n    this.append_message(b`dom-sep`, label)\n  }\n\n  cloneStrobe() {\n    return this.strobe.clone()\n  }\n\n  append_message(label: Uint8Array, message: Uint8Array) {\n    const data_len = encode_usize_as_u32(message.length)\n    this.strobe.meta_ad(label, false)\n    this.strobe.meta_ad(data_len, true)\n    this.strobe.ad(message, false)\n  }\n\n  append_u64(label: Uint8Array, x: bigint) {\n    this.append_message(label, encode_u64(x))\n  }\n\n  challenge_bytes(label: Uint8Array, dest: Uint8Array) {\n    const data_len = encode_usize_as_u32(dest.length)\n    this.strobe.meta_ad(label, false)\n    this.strobe.meta_ad(data_len, true)\n    this.strobe.prf(dest, false)\n  }\n\n  build_rng() {\n    return new TranscriptRngBuilder(this.strobe.clone())\n  }\n\n  fill_bytes(dest: Uint8Array) {\n    const data_len = encode_usize_as_u32(dest.length)\n    this.strobe.meta_ad(data_len, true)\n    this.strobe.prf(dest, false)\n  }\n\n  witness_bytes_rng(label: Uint8Array, dest: Uint8Array, nonce_seeds: Uint8Array[]) {\n    let br = this.build_rng()\n    for (const ns of nonce_seeds) {\n      br = br.rekey_with_witness_bytes(label, ns)\n    }\n    const r = br.finalize()\n    r.fill_bytes(dest)\n  }\n\n  witness_bytes(label: Uint8Array, dest: Uint8Array, nonce_seeds: Uint8Array[]) {\n    this.witness_bytes_rng(label, dest, nonce_seeds)\n  }\n\n  witness_scalar(label: Uint8Array, nonce_seeds: Uint8Array[]) {\n    const scalar_bytes = new Uint8Array(64)\n    this.witness_bytes(label, scalar_bytes, nonce_seeds)\n    // todo:\n  }\n}\n\nexport class TranscriptRngBuilder {\n  private readonly strobe: Strobe128\n\n  constructor(label: Uint8Array | Strobe128) {\n    if (label instanceof Uint8Array) {\n      this.strobe = new Strobe128(label)\n    } else if (label instanceof Strobe128) {\n      this.strobe = label\n    } else {\n      throw new Error('TranscriptRngBuilder constructor: label is not Uint8Array or Strobe128')\n    }\n  }\n\n  cloneStrobe() {\n    return this.strobe.clone()\n  }\n\n  rekey_with_witness_bytes(label: Uint8Array, witness: Uint8Array) {\n    const witness_len = encode_usize_as_u32(witness.length)\n    this.strobe.meta_ad(label, false)\n    this.strobe.meta_ad(witness_len, true)\n    this.strobe.key(witness, false)\n\n    return this\n  }\n\n  finalize(generateRandomBytes32?: () => Uint8Array) {\n    // let bytes = new Uint8Array(32)\n    const bytes = generateRandomBytes32 ? generateRandomBytes32() : randomBytes(32)\n\n    this.strobe.meta_ad(b`rng`, false)\n    this.strobe.key(bytes, false)\n    return new TranscriptRng(this.strobe)\n  }\n}\n\nexport class TranscriptRng {\n  private readonly strobe: Strobe128\n\n  constructor(strobe: Strobe128) {\n    this.strobe = strobe\n  }\n\n  cloneStrobe() {\n    return this.strobe.clone()\n  }\n\n  rekey_with_witness_bytes(label: Uint8Array, witness: Uint8Array) {\n    const witness_len = encode_usize_as_u32(witness.length)\n    this.strobe.meta_ad(label, false)\n    this.strobe.meta_ad(witness_len, true)\n    this.strobe.key(witness, false)\n  }\n\n  rekey_with_witness_u64(label: Uint8Array, witness: bigint) {\n    this.rekey_with_witness_bytes(label, encode_u64(witness))\n  }\n\n  fill_bytes(dest: Uint8Array) {\n    const data_len = encode_usize_as_u32(dest.length)\n    this.strobe.meta_ad(data_len, false)\n    this.strobe.prf(dest, false)\n  }\n}\n","import {bigIntToUint8Array, compactAddLength, hexStringToUint8Array, isHex} from './bytes'\nimport {blake2b} from '@noble/hashes/blake2b'\nimport {mnemonicToMiniSecretAsync, mnemonicToMiniSecret} from './mnemonic'\nimport {Keypair} from '../../src/keypair'\nimport {Transcript} from '../merlin/transcript'\nimport {SecretKey} from '../../src/signingContext'\nimport {b} from '../templateLiteralFunctions'\nimport {Scalar, ScalarAdd, ScalarBigintToBytesForm, ScalarBytesToBigintForm} from '../../src/scalar'\n\nexport const DEFAULT_MNEMONIC = 'bottom drive obey lake curtain smoke basket hold race lonely fit walk'\n\nconst REGEX_DIGITS_ONLY = /^\\d+$/\nexport interface Derivation { value: string, hard?: boolean, cc: Uint8Array }\n\nexport const parseUri = (uri: string): {mnemonic: string, password: string, derivations: Derivation[]} => {\n  const derivations: Derivation[] = []\n\n  const [beforePassword, password = ''] = uri.split('///')\n  const hardSeparatedParts = beforePassword.split('//')\n\n  let mnemonic = hardSeparatedParts.shift() || DEFAULT_MNEMONIC\n  const mnemonicParts = mnemonic.split('/')\n  mnemonic = mnemonicParts.shift() || ''\n  if (!mnemonic) {\n    throw new Error(`Invalid mnemonic: ${uri}`)\n  }\n  if (mnemonicParts.length) {\n    derivations.push(...mnemonicParts.map(value => ({value, cc: getChainCode(value)})))\n  }\n\n  for (const part of hardSeparatedParts) {\n    const softSeparatedParts = part.split('/')\n    const hard = softSeparatedParts.shift()\n    if (!hard) throw new Error('Invalid hard derivation')\n    derivations.push({value: hard, hard: true, cc: getChainCode(hard)})\n    derivations.push(...softSeparatedParts.map(value => ({value, cc: getChainCode(value)})))\n  }\n\n  return {\n    mnemonic,\n    password,\n    derivations,\n  }\n}\n\nconst textEncoder = new TextEncoder()\n\nexport const getChainCode = (str: string): Uint8Array => {\n  const value = REGEX_DIGITS_ONLY.test(str) ? BigInt(str) : str\n\n  let u8a: Uint8Array\n\n  if (typeof value === 'bigint') {\n    u8a = bigIntToUint8Array(value, {bitLength: 256, isLe: true})\n  } else { // value is string\n    u8a = isHex(value)\n      ? hexStringToUint8Array(value)\n      : compactAddLength(textEncoder.encode(value))\n  }\n\n  const chainCode = new Uint8Array(32)\n  chainCode.set(u8a.length > 32 ? blake2b(u8a, {dkLen: 32}) : u8a, 0)\n\n  return chainCode\n}\n\nexport const deriveHard = (keypair: Keypair, chainCode: Uint8Array): Keypair => {\n  const transcript = new Transcript(b`SchnorrRistrettoHDKD`)\n\n  transcript.append_message(b`sign-bytes`, new Uint8Array())\n  transcript.append_message(b`chain-code`, chainCode)\n  transcript.append_message(b`secret-key`, keypair.secretKey.key.bytes.slice())\n\n  const msk = new Uint8Array(32)\n  transcript.challenge_bytes(b`HDKD-hard`, msk)\n\n  const chaincode_2 = new Uint8Array(32)\n  transcript.challenge_bytes(b`HDKD-chaincode`, chaincode_2)\n\n  return Keypair.FromMiniSecret(msk)\n}\n\nexport const deriveSoft = (keypair: Keypair, chainCode: Uint8Array): Keypair => {\n  const transcript = new Transcript(b`SchnorrRistrettoHDKD`)\n  transcript.append_message(b`sign-bytes`, new Uint8Array())\n\n  transcript.append_message(b`chain-code`, chainCode)\n  transcript.append_message(b`public-key`, keypair.publicKey.key.slice())\n\n  const buf = new Uint8Array(64)\n  transcript.challenge_bytes(b`HDKD-scalar`, buf)\n  const scalar = Scalar.FromBytesModOrderWide(buf)\n\n  const chaincode_2 = new Uint8Array(32)\n  transcript.challenge_bytes(b`HDKD-chaincode`, chaincode_2)\n\n  const nonce = new Uint8Array(32)\n  transcript.witness_bytes(b`HDKD-nonce`, nonce, [keypair.secretKey.nonce.slice(), keypair.secretKey.ToBytes().slice()])\n\n  const derivedSecretKeyKey = Scalar.FromBytes(ScalarBigintToBytesForm(\n    ScalarAdd(\n      ScalarBytesToBigintForm(keypair.secretKey.key.bytes.slice()),\n      ScalarBytesToBigintForm(scalar),\n    ),\n  ))\n  const derivedSecretKey = SecretKey.FromScalarAndNonce(derivedSecretKeyKey, nonce)\n  const publicKey = derivedSecretKey.ToPublicKey()\n\n  return new Keypair(publicKey, derivedSecretKey)\n}\n\nconst processDerivations = (keypair: Keypair, derivations: Derivation[]): Keypair => {\n  for (const {hard, cc} of derivations) {\n    keypair = hard ? deriveHard(keypair, cc) : deriveSoft(keypair, cc)\n  }\n\n  return keypair\n}\n\nexport const parseUriAndDerive = (uri: string): Keypair => {\n  const {mnemonic, password, derivations} = parseUri(uri)\n\n  return processDerivations(\n    Keypair.FromMiniSecret(mnemonicToMiniSecret(mnemonic, password)),\n    derivations,\n  )\n}\n\nexport const parseUriAndDeriveAsync = async(uri: string): Promise<Keypair> => {\n  const {mnemonic, password, derivations} = parseUri(uri)\n\n  return processDerivations(\n    Keypair.FromMiniSecret(await mnemonicToMiniSecretAsync(mnemonic, password)),\n    derivations,\n  )\n}\n","import {PublicKey, SecretKey} from './signingContext'\nimport {Scalar} from './scalar'\nimport {parseUriAndDerive, parseUriAndDeriveAsync} from '../translated/mnemonic/uri'\n\nexport class Keypair {\n  publicKey: PublicKey\n  secretKey: SecretKey\n\n  constructor(publicKey: PublicKey, secretKey: SecretKey) {\n    this.publicKey = publicKey\n    this.secretKey = secretKey\n  }\n\n  static FromBytes(bytes: Uint8Array): Keypair {\n    const secretKey = SecretKey.FromBytes(bytes.slice(0, 64))\n    const publicKey = PublicKey.FromBytes(bytes.slice(64))\n    return new Keypair(publicKey, secretKey)\n  }\n\n  static FromSecretKeyBytes(secretKeyBytes: Uint8Array): Keypair {\n    if (secretKeyBytes.length !== 64) {\n      throw new Error(`Expected secret key with ${64} bytes, found ${secretKeyBytes.length}`)\n    }\n    const secretKey = SecretKey.FromBytes(secretKeyBytes)\n    const publicKey = secretKey.ToPublicKey()\n    return new Keypair(publicKey, secretKey)\n  }\n\n  static FromUri(uri: string): Keypair {\n    return parseUriAndDerive(uri)\n  }\n\n  static async FromUriAsync(uri: string): Promise<Keypair> {\n    return await parseUriAndDeriveAsync(uri)\n  }\n\n  static FromMiniSecret(miniSecret: Uint8Array): Keypair {\n    const secretKey = SecretKey.FromMiniSecret(miniSecret)\n    const publicKey = secretKey.ToPublicKey()\n    return new Keypair(publicKey, secretKey)\n  }\n\n  ToBytes(): Uint8Array {\n    const bytes = new Uint8Array(96)\n    bytes.set(this.secretKey.ToBytes())\n    bytes.set(this.publicKey.key, 64)\n    return bytes\n  }\n}\n","import {Keypair as SecretKeypair} from './keypair'\nimport {isHex, hexStringToUint8Array, uInt8ArrayToHex} from '../translated/mnemonic/bytes'\nimport {decodeSubstrateAddress, encodeSubstrateAddress} from './address'\nimport {parseUriAndDerive} from '../translated/mnemonic/uri'\n\nimport type {IUniqueSdkSigner, UNIQUE_SDK_SignTxResultResponse, UNIQUE_SDK_UnsignedTxPayloadBody} from './types'\nimport {PublicKey} from './signingContext'\nimport {generateMnemonic, mnemonicToMiniSecret} from '../translated/mnemonic/mnemonic'\n\nexport type {IUniqueSdkSigner}\n\nconst textEncoder = new TextEncoder()\nconst anyToU8a = (message: Uint8Array | string): Uint8Array => {\n  return typeof message === 'string'\n    ? isHex(message)\n      ? hexStringToUint8Array(message)\n      : textEncoder.encode(message)\n    : message\n}\nconst u8aOrHexToU8a = (message: Uint8Array | string): Uint8Array => {\n  if (message instanceof Uint8Array) {\n    return message\n  } else {\n    if (isHex(message)) {\n      return hexStringToUint8Array(message)\n    } else {\n      throw new Error('Invalid message: should be Uint8Array or hex string')\n    }\n  }\n}\n\n/**\n * private method, don't export\n * @param keypair\n */\nconst getAccountFromKeypair = (keypair: SecretKeypair) => {\n  return {\n    get publicKey() {\n      return keypair.publicKey.key.slice()\n    },\n    address: encodeSubstrateAddress(keypair.publicKey.key),\n    prefixedAddress(prefix: number = 42) {\n      return encodeSubstrateAddress(keypair.publicKey.key, prefix)\n    },\n\n    /**\n     * @name sign\n     * @param message [Uint8Array | string]; Hex string or UTF-8 string will be automatically converted to a byte array\n     * @returns [Uint8Array] - signature\n     */\n    sign(message: Uint8Array | string): Uint8Array {\n      return keypair.secretKey.sign(anyToU8a(message), keypair.publicKey).ToBytes()\n    },\n\n    /**\n     * @name verify\n     * @param message [Uint8Array | string]; Hex string or UTF-8 string will be automatically converted to a byte array\n     * @param signature [Uint8Array]\n     * @returns [boolean] - true if the signature is valid, false otherwise\n     */\n    verify(message: Uint8Array | string, signature: Uint8Array | string): boolean {\n      return keypair.publicKey.verify(anyToU8a(message), u8aOrHexToU8a(signature))\n    },\n\n    /**\n     * @name signer\n     * @description signer for @unique-nft/sdk\n     */\n    signer: {\n      async sign(payload: UNIQUE_SDK_UnsignedTxPayloadBody): Promise<UNIQUE_SDK_SignTxResultResponse> {\n        const message = hexStringToUint8Array(payload.signerPayloadHex)\n        const signatureBytes = keypair.secretKey.sign(message, keypair.publicKey).ToBytes()\n        const signature = uInt8ArrayToHex(signatureBytes)\n\n        // '01' is the prefix for sr25519 signature type\n        return {\n          signature: `0x01${signature.substring(2)}`,\n          signatureType: 'sr25519',\n        }\n      },\n    } satisfies IUniqueSdkSigner,\n  }\n}\n\nexport const verifySignature = (message: Uint8Array | string, signature: Uint8Array | string, signerAddressOrPublicKey: Uint8Array | string) => {\n  let publicKeyBytes: Uint8Array\n  if (signerAddressOrPublicKey instanceof Uint8Array) {\n    publicKeyBytes = signerAddressOrPublicKey\n  } else if (typeof signerAddressOrPublicKey === 'string') {\n    publicKeyBytes = isHex(signerAddressOrPublicKey)\n      ? hexStringToUint8Array(signerAddressOrPublicKey)\n      : decodeSubstrateAddress(signerAddressOrPublicKey)\n  } else {\n    throw new Error('Invalid signerAddressOrPublicKey: should be Uint8Array or hex string')\n  }\n\n  const publicKey = PublicKey.FromBytes(publicKeyBytes)\n\n  return publicKey.verify(anyToU8a(message), u8aOrHexToU8a(signature))\n}\n\nexport const dangerouslyParseUriAndGetFullKeypair = parseUriAndDerive\n\nexport const Sr25519Account = {\n  fromUri: (uri: string) => {\n    const keypair = SecretKeypair.FromUri(uri)\n    return getAccountFromKeypair(keypair)\n  },\n  verifySignature,\n  other: {\n    fromMiniSecret: (miniSecret: Uint8Array | string) => {\n      const keypair = SecretKeypair.FromMiniSecret(u8aOrHexToU8a(miniSecret))\n      return getAccountFromKeypair(keypair)\n    },\n    fromSecretKeyBytes: (secretKeyBytes: Uint8Array | string) => {\n      const keypair = SecretKeypair.FromSecretKeyBytes(u8aOrHexToU8a(secretKeyBytes))\n      return getAccountFromKeypair(keypair)\n    },\n    fromKeypair: getAccountFromKeypair,\n    mnemonicToMiniSecret,\n    dangerouslyParseUriAndGetFullKeypair,\n  },\n  utils: {\n    encodeSubstrateAddress,\n    decodeSubstrateAddress,\n  },\n  generateMnemonic,\n}\n\n/** @deprecated use Sr25519Account instead */\nexport const Account = Sr25519Account\n\nexport default Sr25519Account\n\nexport type ISr25519Account = ReturnType<typeof getAccountFromKeypair>\n"]}