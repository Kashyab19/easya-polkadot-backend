var UniqueSr25519 = (function (exports) {
  'use strict';

  var En=Object.create;var Qt=Object.defineProperty;var In=Object.getOwnPropertyDescriptor;var Mn=Object.getOwnPropertyNames;var Ln=Object.getPrototypeOf,Fn=Object.prototype.hasOwnProperty;var c=(n,t)=>Qt(n,"name",{value:t,configurable:!0});var Un=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports);var Xn=(n,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of Mn(t))!Fn.call(n,r)&&r!==e&&Qt(n,r,{get:()=>t[r],enumerable:!(s=In(t,r))||s.enumerable});return n};var Nn=(n,t,e)=>(e=n!=null?En(Ln(n)):{},Xn(t||!n||!n.__esModule?Qt(e,"default",{value:n,enumerable:!0}):e,n));var Oe=Un((Ii,De)=>{function ws(n){if(n.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),e=0;e<t.length;e++)t[e]=255;for(var s=0;s<n.length;s++){var r=n.charAt(s),i=r.charCodeAt(0);if(t[i]!==255)throw new TypeError(r+" is ambiguous");t[i]=s;}var o=n.length,a=n.charAt(0),l=Math.log(o)/Math.log(256),h=Math.log(256)/Math.log(o);function d(f){if(f instanceof Uint8Array||(ArrayBuffer.isView(f)?f=new Uint8Array(f.buffer,f.byteOffset,f.byteLength):Array.isArray(f)&&(f=Uint8Array.from(f))),!(f instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(f.length===0)return "";for(var m=0,w=0,x=0,q=f.length;x!==q&&f[x]===0;)x++,m++;for(var S=(q-x)*h+1>>>0,v=new Uint8Array(S);x!==q;){for(var A=f[x],B=0,U=S-1;(A!==0||B<w)&&U!==-1;U--,B++)A+=256*v[U]>>>0,v[U]=A%o>>>0,A=A/o>>>0;if(A!==0)throw new Error("Non-zero carry");w=B,x++;}for(var N=S-w;N!==S&&v[N]===0;)N++;for(var X=a.repeat(m);N<S;++N)X+=n.charAt(v[N]);return X}c(d,"encode");function u(f){if(typeof f!="string")throw new TypeError("Expected String");if(f.length===0)return new Uint8Array;for(var m=0,w=0,x=0;f[m]===a;)w++,m++;for(var q=(f.length-m)*l+1>>>0,S=new Uint8Array(q);f[m];){var v=t[f.charCodeAt(m)];if(v===255)return;for(var A=0,B=q-1;(v!==0||A<x)&&B!==-1;B--,A++)v+=o*S[B]>>>0,S[B]=v%256>>>0,v=v/256>>>0;if(v!==0)throw new Error("Non-zero carry");x=A,m++;}for(var U=q-x;U!==q&&S[U]===0;)U++;for(var N=new Uint8Array(w+(q-U)),X=w;U!==q;)N[X++]=S[U++];return N}c(u,"decodeUnsafe");function p(f){var m=u(f);if(m)return m;throw new Error("Non-base"+o+" character")}return c(p,"decode"),{encode:d,decodeUnsafe:u,decode:p}}c(ws,"base");De.exports=ws;});function P(n){if(!Number.isSafeInteger(n)||n<0)throw new Error(`positive integer expected, not ${n}`)}c(P,"number");function Pn(n){return n instanceof Uint8Array||n!=null&&typeof n=="object"&&n.constructor.name==="Uint8Array"}c(Pn,"isBytes");function st(n,...t){if(!Pn(n))throw new Error("Uint8Array expected");if(t.length>0&&!t.includes(n.length))throw new Error(`Uint8Array expected of length ${t}, not of length=${n.length}`)}c(st,"bytes");function Lt(n){if(typeof n!="function"||typeof n.create!="function")throw new Error("Hash should be wrapped by utils.wrapConstructor");P(n.outputLen),P(n.blockLen);}c(Lt,"hash");function C(n,t=!0){if(n.destroyed)throw new Error("Hash instance has been destroyed");if(t&&n.finished)throw new Error("Hash#digest() has already been called")}c(C,"exists");function lt(n,t){st(n);let e=t.outputLen;if(n.length<e)throw new Error(`digestInto() expects output buffer of length at least ${e}`)}c(lt,"output");var Ft=BigInt(4294967295),te=BigInt(32);function qe(n,t=!1){return t?{h:Number(n&Ft),l:Number(n>>te&Ft)}:{h:Number(n>>te&Ft)|0,l:Number(n&Ft)|0}}c(qe,"fromBig");function ee(n,t=!1){let e=new Uint32Array(n.length),s=new Uint32Array(n.length);for(let r=0;r<n.length;r++){let{h:i,l:o}=qe(n[r],t);[e[r],s[r]]=[i,o];}return [e,s]}c(ee,"split");var Cn=c((n,t)=>BigInt(n>>>0)<<te|BigInt(t>>>0),"toBig"),Yn=c((n,t,e)=>n>>>e,"shrSH"),Hn=c((n,t,e)=>n<<32-e|t>>>e,"shrSL"),Rn=c((n,t,e)=>n>>>e|t<<32-e,"rotrSH"),Dn=c((n,t,e)=>n<<32-e|t>>>e,"rotrSL"),On=c((n,t,e)=>n<<64-e|t>>>e-32,"rotrBH"),Zn=c((n,t,e)=>n>>>e-32|t<<64-e,"rotrBL"),Kn=c((n,t)=>t,"rotr32H"),Gn=c((n,t)=>n,"rotr32L"),ne=c((n,t,e)=>n<<e|t>>>32-e,"rotlSH"),se=c((n,t,e)=>t<<e|n>>>32-e,"rotlSL"),re=c((n,t,e)=>t<<e-32|n>>>64-e,"rotlBH"),ie=c((n,t,e)=>n<<e-32|t>>>64-e,"rotlBL");function Wn(n,t,e,s){let r=(t>>>0)+(s>>>0);return {h:n+e+(r/2**32|0)|0,l:r|0}}c(Wn,"add");var $n=c((n,t,e)=>(n>>>0)+(t>>>0)+(e>>>0),"add3L"),Vn=c((n,t,e,s)=>t+e+s+(n/2**32|0)|0,"add3H"),Jn=c((n,t,e,s)=>(n>>>0)+(t>>>0)+(e>>>0)+(s>>>0),"add4L"),Qn=c((n,t,e,s,r)=>t+e+s+r+(n/2**32|0)|0,"add4H"),ts=c((n,t,e,s,r)=>(n>>>0)+(t>>>0)+(e>>>0)+(s>>>0)+(r>>>0),"add5L"),es=c((n,t,e,s,r,i)=>t+e+s+r+i+(n/2**32|0)|0,"add5H");var ns={fromBig:qe,split:ee,toBig:Cn,shrSH:Yn,shrSL:Hn,rotrSH:Rn,rotrSL:Dn,rotrBH:On,rotrBL:Zn,rotr32H:Kn,rotr32L:Gn,rotlSH:ne,rotlSL:se,rotlBH:re,rotlBL:ie,add:Wn,add3L:$n,add3H:Vn,add4L:Jn,add4H:Qn,add5H:es,add5L:ts},k=ns;var Ut=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;var W=c(n=>new Uint32Array(n.buffer,n.byteOffset,Math.floor(n.byteLength/4)),"u32"),rt=c(n=>new DataView(n.buffer,n.byteOffset,n.byteLength),"createView"),R=c((n,t)=>n<<32-t|n>>>t,"rotr");var D=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68,ze=c(n=>n<<24&4278190080|n<<8&16711680|n>>>8&65280|n>>>24&255,"byteSwap"),O=D?n=>n:n=>ze(n);function Z(n){for(let t=0;t<n.length;t++)n[t]=ze(n[t]);}c(Z,"byteSwap32");var ss=c(async()=>{},"nextTick");async function _e(n,t,e){let s=Date.now();for(let r=0;r<n;r++){e(r);let i=Date.now()-s;i>=0&&i<t||(await ss(),s+=i);}}c(_e,"asyncLoop");function rs(n){if(typeof n!="string")throw new Error(`utf8ToBytes expected string, got ${typeof n}`);return new Uint8Array(new TextEncoder().encode(n))}c(rs,"utf8ToBytes");function E(n){return typeof n=="string"&&(n=rs(n)),st(n),n}c(E,"toBytes");var H=class{clone(){return this._cloneInto()}};c(H,"Hash");var is={}.toString;function Ae(n,t){if(t!==void 0&&is.call(t)!=="[object Object]")throw new Error("Options should be object or undefined");return Object.assign(n,t)}c(Ae,"checkOpts");function ht(n){let t=c(s=>n().update(E(s)).digest(),"hashC"),e=n();return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=()=>n(),t}c(ht,"wrapConstructor");function Be(n){let t=c((s,r)=>n(r).update(E(s)).digest(),"hashC"),e=n({});return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=s=>n(s),t}c(Be,"wrapConstructorWithOpts");function Se(n){let t=c((s,r)=>n(r).update(E(s)).digest(),"hashC"),e=n({});return t.outputLen=e.outputLen,t.blockLen=e.blockLen,t.create=s=>n(s),t}c(Se,"wrapXOFConstructorWithOpts");function ut(n=32){if(Ut&&typeof Ut.getRandomValues=="function")return Ut.getRandomValues(new Uint8Array(n));throw new Error("crypto.getRandomValues must be defined")}c(ut,"randomBytes");var Ie=[],Me=[],Le=[],os=BigInt(0),mt=BigInt(1),as=BigInt(2),cs=BigInt(7),ls=BigInt(256),hs=BigInt(113);for(let n=0,t=mt,e=1,s=0;n<24;n++){[e,s]=[s,(2*e+3*s)%5],Ie.push(2*(5*s+e)),Me.push((n+1)*(n+2)/2%64);let r=os;for(let i=0;i<7;i++)t=(t<<mt^(t>>cs)*hs)%ls,t&as&&(r^=mt<<(mt<<BigInt(i))-mt);Le.push(r);}var[us,ds]=ee(Le,!0),Te=c((n,t,e)=>e>32?re(n,t,e):ne(n,t,e),"rotlH"),Ee=c((n,t,e)=>e>32?ie(n,t,e):se(n,t,e),"rotlL");function yt(n,t=24){let e=new Uint32Array(10);for(let s=24-t;s<24;s++){for(let o=0;o<10;o++)e[o]=n[o]^n[o+10]^n[o+20]^n[o+30]^n[o+40];for(let o=0;o<10;o+=2){let a=(o+8)%10,l=(o+2)%10,h=e[l],d=e[l+1],u=Te(h,d,1)^e[a],p=Ee(h,d,1)^e[a+1];for(let f=0;f<50;f+=10)n[o+f]^=u,n[o+f+1]^=p;}let r=n[2],i=n[3];for(let o=0;o<24;o++){let a=Me[o],l=Te(r,i,a),h=Ee(r,i,a),d=Ie[o];r=n[d],i=n[d+1],n[d]=l,n[d+1]=h;}for(let o=0;o<50;o+=10){for(let a=0;a<10;a++)e[a]=n[o+a];for(let a=0;a<10;a++)n[o+a]^=~e[(a+2)%10]&e[(a+4)%10];}n[0]^=us[s],n[1]^=ds[s];}e.fill(0);}c(yt,"keccakP");var it=class extends H{constructor(t,e,s,r=!1,i=24){if(super(),this.blockLen=t,this.suffix=e,this.outputLen=s,this.enableXOF=r,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,P(s),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=W(this.state);}keccak(){D||Z(this.state32),yt(this.state32,this.rounds),D||Z(this.state32),this.posOut=0,this.pos=0;}update(t){C(this);let{blockLen:e,state:s}=this;t=E(t);let r=t.length;for(let i=0;i<r;){let o=Math.min(e-this.pos,r-i);for(let a=0;a<o;a++)s[this.pos++]^=t[i++];this.pos===e&&this.keccak();}return this}finish(){if(this.finished)return;this.finished=!0;let{state:t,suffix:e,pos:s,blockLen:r}=this;t[s]^=e,e&128&&s===r-1&&this.keccak(),t[r-1]^=128,this.keccak();}writeInto(t){C(this,!1),st(t),this.finish();let e=this.state,{blockLen:s}=this;for(let r=0,i=t.length;r<i;){this.posOut>=s&&this.keccak();let o=Math.min(s-this.posOut,i-r);t.set(e.subarray(this.posOut,this.posOut+o),r),this.posOut+=o,r+=o;}return t}xofInto(t){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(t)}xof(t){return P(t),this.xofInto(new Uint8Array(t))}digestInto(t){if(lt(t,this),this.finished)throw new Error("digest() was already called");return this.writeInto(t),this.destroy(),t}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0);}_cloneInto(t){let{blockLen:e,suffix:s,outputLen:r,rounds:i,enableXOF:o}=this;return t||(t=new it(e,s,r,o,i)),t.state32.set(this.state32),t.pos=this.pos,t.posOut=this.posOut,t.finished=this.finished,t.rounds=i,t.suffix=s,t.outputLen=r,t.enableXOF=o,t.destroyed=this.destroyed,t}};c(it,"Keccak");var $=c((n,t,e)=>ht(()=>new it(t,n,e)),"gen");$(6,144,224/8);$(6,136,256/8);$(6,104,384/8);$(6,72,512/8);$(1,144,224/8);$(1,136,256/8);$(1,104,384/8);$(1,72,512/8);var Fe=c((n,t,e)=>Se((s={})=>new it(t,n,s.dkLen===void 0?e:s.dkLen,!0)),"genShake");Fe(31,168,128/8);Fe(31,136,256/8);function fs(n,t,e,s){if(typeof n.setBigUint64=="function")return n.setBigUint64(t,e,s);let r=BigInt(32),i=BigInt(4294967295),o=Number(e>>r&i),a=Number(e&i),l=s?4:0,h=s?0:4;n.setUint32(t+l,o,s),n.setUint32(t+h,a,s);}c(fs,"setBigUint64");var Ue=c((n,t,e)=>n&t^~n&e,"Chi"),Xe=c((n,t,e)=>n&t^n&e^t&e,"Maj"),ot=class extends H{constructor(t,e,s,r){super(),this.blockLen=t,this.outputLen=e,this.padOffset=s,this.isLE=r,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=rt(this.buffer);}update(t){C(this);let{view:e,buffer:s,blockLen:r}=this;t=E(t);let i=t.length;for(let o=0;o<i;){let a=Math.min(r-this.pos,i-o);if(a===r){let l=rt(t);for(;r<=i-o;o+=r)this.process(l,o);continue}s.set(t.subarray(o,o+a),this.pos),this.pos+=a,o+=a,this.pos===r&&(this.process(e,0),this.pos=0);}return this.length+=t.length,this.roundClean(),this}digestInto(t){C(this),lt(t,this),this.finished=!0;let{buffer:e,view:s,blockLen:r,isLE:i}=this,{pos:o}=this;e[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>r-o&&(this.process(s,0),o=0);for(let u=o;u<r;u++)e[u]=0;fs(s,r-8,BigInt(this.length*8),i),this.process(s,0);let a=rt(t),l=this.outputLen;if(l%4)throw new Error("_sha2: outputLen should be aligned to 32bit");let h=l/4,d=this.get();if(h>d.length)throw new Error("_sha2: outputLen bigger than state");for(let u=0;u<h;u++)a.setUint32(4*u,d[u],i);}digest(){let{buffer:t,outputLen:e}=this;this.digestInto(t);let s=t.slice(0,e);return this.destroy(),s}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());let{blockLen:e,buffer:s,length:r,finished:i,destroyed:o,pos:a}=this;return t.length=r,t.pos=a,t.finished=i,t.destroyed=o,r%e&&t.buffer.set(s),t}};c(ot,"HashMD");var[ps,gs]=(()=>k.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(n=>BigInt(n))))(),V=new Uint32Array(80),J=new Uint32Array(80),Xt=class extends ot{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209;}get(){let{Ah:t,Al:e,Bh:s,Bl:r,Ch:i,Cl:o,Dh:a,Dl:l,Eh:h,El:d,Fh:u,Fl:p,Gh:f,Gl:m,Hh:w,Hl:x}=this;return [t,e,s,r,i,o,a,l,h,d,u,p,f,m,w,x]}set(t,e,s,r,i,o,a,l,h,d,u,p,f,m,w,x){this.Ah=t|0,this.Al=e|0,this.Bh=s|0,this.Bl=r|0,this.Ch=i|0,this.Cl=o|0,this.Dh=a|0,this.Dl=l|0,this.Eh=h|0,this.El=d|0,this.Fh=u|0,this.Fl=p|0,this.Gh=f|0,this.Gl=m|0,this.Hh=w|0,this.Hl=x|0;}process(t,e){for(let v=0;v<16;v++,e+=4)V[v]=t.getUint32(e),J[v]=t.getUint32(e+=4);for(let v=16;v<80;v++){let A=V[v-15]|0,B=J[v-15]|0,U=k.rotrSH(A,B,1)^k.rotrSH(A,B,8)^k.shrSH(A,B,7),N=k.rotrSL(A,B,1)^k.rotrSL(A,B,8)^k.shrSL(A,B,7),X=V[v-2]|0,G=J[v-2]|0,It=k.rotrSH(X,G,19)^k.rotrBH(X,G,61)^k.shrSH(X,G,6),Vt=k.rotrSL(X,G,19)^k.rotrBL(X,G,61)^k.shrSL(X,G,6),Mt=k.add4L(N,Vt,J[v-7],J[v-16]),Jt=k.add4H(Mt,U,It,V[v-7],V[v-16]);V[v]=Jt|0,J[v]=Mt|0;}let{Ah:s,Al:r,Bh:i,Bl:o,Ch:a,Cl:l,Dh:h,Dl:d,Eh:u,El:p,Fh:f,Fl:m,Gh:w,Gl:x,Hh:q,Hl:S}=this;for(let v=0;v<80;v++){let A=k.rotrSH(u,p,14)^k.rotrSH(u,p,18)^k.rotrBH(u,p,41),B=k.rotrSL(u,p,14)^k.rotrSL(u,p,18)^k.rotrBL(u,p,41),U=u&f^~u&w,N=p&m^~p&x,X=k.add5L(S,B,N,gs[v],J[v]),G=k.add5H(X,q,A,U,ps[v],V[v]),It=X|0,Vt=k.rotrSH(s,r,28)^k.rotrBH(s,r,34)^k.rotrBH(s,r,39),Mt=k.rotrSL(s,r,28)^k.rotrBL(s,r,34)^k.rotrBL(s,r,39),Jt=s&i^s&a^i&a,Tn=r&o^r&l^o&l;q=w|0,S=x|0,w=f|0,x=m|0,f=u|0,m=p|0,{h:u,l:p}=k.add(h|0,d|0,G|0,It|0),h=a|0,d=l|0,a=i|0,l=o|0,i=s|0,o=r|0;let je=k.add3L(It,Mt,Tn);s=k.add3H(je,G,Vt,Jt),r=je|0;}(({h:s,l:r}=k.add(this.Ah|0,this.Al|0,s|0,r|0))),{h:i,l:o}=k.add(this.Bh|0,this.Bl|0,i|0,o|0),{h:a,l}=k.add(this.Ch|0,this.Cl|0,a|0,l|0),{h,l:d}=k.add(this.Dh|0,this.Dl|0,h|0,d|0),{h:u,l:p}=k.add(this.Eh|0,this.El|0,u|0,p|0),{h:f,l:m}=k.add(this.Fh|0,this.Fl|0,f|0,m|0),{h:w,l:x}=k.add(this.Gh|0,this.Gl|0,w|0,x|0),{h:q,l:S}=k.add(this.Hh|0,this.Hl|0,q|0,S|0),this.set(s,r,i,o,a,l,h,d,u,p,f,m,w,x,q,S);}roundClean(){V.fill(0),J.fill(0);}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);}};c(Xt,"SHA512");var wt=ht(()=>new Xt);var Ne=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]),kt=class extends H{constructor(t,e,s={},r,i,o){if(super(),this.blockLen=t,this.outputLen=e,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,P(t),P(e),P(r),e<0||e>r)throw new Error("outputLen bigger than keyLen");if(s.key!==void 0&&(s.key.length<1||s.key.length>r))throw new Error(`key must be up 1..${r} byte long or undefined`);if(s.salt!==void 0&&s.salt.length!==i)throw new Error(`salt must be ${i} byte long or undefined`);if(s.personalization!==void 0&&s.personalization.length!==o)throw new Error(`personalization must be ${o} byte long or undefined`);this.buffer32=W(this.buffer=new Uint8Array(t));}update(t){C(this);let{blockLen:e,buffer:s,buffer32:r}=this;t=E(t);let i=t.length,o=t.byteOffset,a=t.buffer;for(let l=0;l<i;){this.pos===e&&(D||Z(r),this.compress(r,0,!1),D||Z(r),this.pos=0);let h=Math.min(e-this.pos,i-l),d=o+l;if(h===e&&!(d%4)&&l+h<i){let u=new Uint32Array(a,d,Math.floor((i-l)/4));D||Z(u);for(let p=0;l+e<i;p+=r.length,l+=e)this.length+=e,this.compress(u,p,!1);D||Z(u);continue}s.set(t.subarray(l,l+h),this.pos),this.pos+=h,this.length+=h,l+=h;}return this}digestInto(t){C(this),lt(t,this);let{pos:e,buffer32:s}=this;this.finished=!0,this.buffer.subarray(e).fill(0),D||Z(s),this.compress(s,0,!0),D||Z(s);let r=W(t);this.get().forEach((i,o)=>r[o]=O(i));}digest(){let{buffer:t,outputLen:e}=this;this.digestInto(t);let s=t.slice(0,e);return this.destroy(),s}_cloneInto(t){let{buffer:e,length:s,finished:r,destroyed:i,outputLen:o,pos:a}=this;return t||(t=new this.constructor({dkLen:o})),t.set(...this.get()),t.length=s,t.finished=r,t.destroyed=i,t.outputLen=o,t.buffer.set(e),t.pos=a,t}};c(kt,"BLAKE");var T=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),b=new Uint32Array(32);function Q(n,t,e,s,r,i){let o=r[i],a=r[i+1],l=b[2*n],h=b[2*n+1],d=b[2*t],u=b[2*t+1],p=b[2*e],f=b[2*e+1],m=b[2*s],w=b[2*s+1],x=k.add3L(l,d,o);h=k.add3H(x,h,u,a),l=x|0,{Dh:w,Dl:m}={Dh:w^h,Dl:m^l},{Dh:w,Dl:m}={Dh:k.rotr32H(w,m),Dl:k.rotr32L(w,m)},{h:f,l:p}=k.add(f,p,w,m),{Bh:u,Bl:d}={Bh:u^f,Bl:d^p},{Bh:u,Bl:d}={Bh:k.rotrSH(u,d,24),Bl:k.rotrSL(u,d,24)},b[2*n]=l,b[2*n+1]=h,b[2*t]=d,b[2*t+1]=u,b[2*e]=p,b[2*e+1]=f,b[2*s]=m,b[2*s+1]=w;}c(Q,"G1b");function tt(n,t,e,s,r,i){let o=r[i],a=r[i+1],l=b[2*n],h=b[2*n+1],d=b[2*t],u=b[2*t+1],p=b[2*e],f=b[2*e+1],m=b[2*s],w=b[2*s+1],x=k.add3L(l,d,o);h=k.add3H(x,h,u,a),l=x|0,{Dh:w,Dl:m}={Dh:w^h,Dl:m^l},{Dh:w,Dl:m}={Dh:k.rotrSH(w,m,16),Dl:k.rotrSL(w,m,16)},{h:f,l:p}=k.add(f,p,w,m),{Bh:u,Bl:d}={Bh:u^f,Bl:d^p},{Bh:u,Bl:d}={Bh:k.rotrBH(u,d,63),Bl:k.rotrBL(u,d,63)},b[2*n]=l,b[2*n+1]=h,b[2*t]=d,b[2*t+1]=u,b[2*e]=p,b[2*e+1]=f,b[2*s]=m,b[2*s+1]=w;}c(tt,"G2b");var bs=c(class extends kt{constructor(t={}){super(128,t.dkLen===void 0?64:t.dkLen,t,64,16,16),this.v0l=T[0]|0,this.v0h=T[1]|0,this.v1l=T[2]|0,this.v1h=T[3]|0,this.v2l=T[4]|0,this.v2h=T[5]|0,this.v3l=T[6]|0,this.v3h=T[7]|0,this.v4l=T[8]|0,this.v4h=T[9]|0,this.v5l=T[10]|0,this.v5h=T[11]|0,this.v6l=T[12]|0,this.v6h=T[13]|0,this.v7l=T[14]|0,this.v7h=T[15]|0;let e=t.key?t.key.length:0;if(this.v0l^=this.outputLen|e<<8|65536|1<<24,t.salt){let s=W(E(t.salt));this.v4l^=O(s[0]),this.v4h^=O(s[1]),this.v5l^=O(s[2]),this.v5h^=O(s[3]);}if(t.personalization){let s=W(E(t.personalization));this.v6l^=O(s[0]),this.v6h^=O(s[1]),this.v7l^=O(s[2]),this.v7h^=O(s[3]);}if(t.key){let s=new Uint8Array(this.blockLen);s.set(E(t.key)),this.update(s);}}get(){let{v0l:t,v0h:e,v1l:s,v1h:r,v2l:i,v2h:o,v3l:a,v3h:l,v4l:h,v4h:d,v5l:u,v5h:p,v6l:f,v6h:m,v7l:w,v7h:x}=this;return [t,e,s,r,i,o,a,l,h,d,u,p,f,m,w,x]}set(t,e,s,r,i,o,a,l,h,d,u,p,f,m,w,x){this.v0l=t|0,this.v0h=e|0,this.v1l=s|0,this.v1h=r|0,this.v2l=i|0,this.v2h=o|0,this.v3l=a|0,this.v3h=l|0,this.v4l=h|0,this.v4h=d|0,this.v5l=u|0,this.v5h=p|0,this.v6l=f|0,this.v6h=m|0,this.v7l=w|0,this.v7h=x|0;}compress(t,e,s){this.get().forEach((l,h)=>b[h]=l),b.set(T,16);let{h:r,l:i}=k.fromBig(BigInt(this.length));b[24]=T[8]^i,b[25]=T[9]^r,s&&(b[28]=~b[28],b[29]=~b[29]);let o=0,a=Ne;for(let l=0;l<12;l++)Q(0,4,8,12,t,e+2*a[o++]),tt(0,4,8,12,t,e+2*a[o++]),Q(1,5,9,13,t,e+2*a[o++]),tt(1,5,9,13,t,e+2*a[o++]),Q(2,6,10,14,t,e+2*a[o++]),tt(2,6,10,14,t,e+2*a[o++]),Q(3,7,11,15,t,e+2*a[o++]),tt(3,7,11,15,t,e+2*a[o++]),Q(0,5,10,15,t,e+2*a[o++]),tt(0,5,10,15,t,e+2*a[o++]),Q(1,6,11,12,t,e+2*a[o++]),tt(1,6,11,12,t,e+2*a[o++]),Q(2,7,8,13,t,e+2*a[o++]),tt(2,7,8,13,t,e+2*a[o++]),Q(3,4,9,14,t,e+2*a[o++]),tt(3,4,9,14,t,e+2*a[o++]);this.v0l^=b[0]^b[16],this.v0h^=b[1]^b[17],this.v1l^=b[2]^b[18],this.v1h^=b[3]^b[19],this.v2l^=b[4]^b[20],this.v2h^=b[5]^b[21],this.v3l^=b[6]^b[22],this.v3h^=b[7]^b[23],this.v4l^=b[8]^b[24],this.v4h^=b[9]^b[25],this.v5l^=b[10]^b[26],this.v5h^=b[11]^b[27],this.v6l^=b[12]^b[28],this.v6h^=b[13]^b[29],this.v7l^=b[14]^b[30],this.v7h^=b[15]^b[31],b.fill(0);}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);}},"BLAKE2b"),Nt=Be(n=>new bs(n));var ms=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),et=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),nt=new Uint32Array(64),ys=c(class extends ot{constructor(){super(64,32,8,!1),this.A=et[0]|0,this.B=et[1]|0,this.C=et[2]|0,this.D=et[3]|0,this.E=et[4]|0,this.F=et[5]|0,this.G=et[6]|0,this.H=et[7]|0;}get(){let{A:t,B:e,C:s,D:r,E:i,F:o,G:a,H:l}=this;return [t,e,s,r,i,o,a,l]}set(t,e,s,r,i,o,a,l){this.A=t|0,this.B=e|0,this.C=s|0,this.D=r|0,this.E=i|0,this.F=o|0,this.G=a|0,this.H=l|0;}process(t,e){for(let u=0;u<16;u++,e+=4)nt[u]=t.getUint32(e,!1);for(let u=16;u<64;u++){let p=nt[u-15],f=nt[u-2],m=R(p,7)^R(p,18)^p>>>3,w=R(f,17)^R(f,19)^f>>>10;nt[u]=w+nt[u-7]+m+nt[u-16]|0;}let{A:s,B:r,C:i,D:o,E:a,F:l,G:h,H:d}=this;for(let u=0;u<64;u++){let p=R(a,6)^R(a,11)^R(a,25),f=d+p+Ue(a,l,h)+ms[u]+nt[u]|0,w=(R(s,2)^R(s,13)^R(s,22))+Xe(s,r,i)|0;d=h,h=l,l=a,a=o+f|0,o=i,i=r,r=s,s=f+w|0;}s=s+this.A|0,r=r+this.B|0,i=i+this.C|0,o=o+this.D|0,a=a+this.E|0,l=l+this.F|0,h=h+this.G|0,d=d+this.H|0,this.set(s,r,i,o,a,l,h,d);}roundClean(){nt.fill(0);}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0);}},"SHA256");var Pe=ht(()=>new ys);var xt=class extends H{constructor(t,e){super(),this.finished=!1,this.destroyed=!1,Lt(t);let s=E(e);if(this.iHash=t.create(),typeof this.iHash.update!="function")throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let r=this.blockLen,i=new Uint8Array(r);i.set(s.length>r?t.create().update(s).digest():s);for(let o=0;o<i.length;o++)i[o]^=54;this.iHash.update(i),this.oHash=t.create();for(let o=0;o<i.length;o++)i[o]^=106;this.oHash.update(i),i.fill(0);}update(t){return C(this),this.iHash.update(t),this}digestInto(t){C(this),st(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy();}digest(){let t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));let{oHash:e,iHash:s,finished:r,destroyed:i,blockLen:o,outputLen:a}=this;return t=t,t.finished=r,t.destroyed=i,t.blockLen=o,t.outputLen=a,t.oHash=e._cloneInto(t.oHash),t.iHash=s._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy();}};c(xt,"HMAC");var oe=c((n,t,e)=>new xt(n,t).update(e).digest(),"hmac");oe.create=(n,t)=>new xt(n,t);function Ce(n,t,e,s){Lt(n);let r=Ae({dkLen:32,asyncTick:10},s),{c:i,dkLen:o,asyncTick:a}=r;if(P(i),P(o),P(a),i<1)throw new Error("PBKDF2: iterations (c) should be >= 1");let l=E(t),h=E(e),d=new Uint8Array(o),u=oe.create(n,l),p=u._cloneInto().update(h);return {c:i,dkLen:o,asyncTick:a,DK:d,PRF:u,PRFSalt:p}}c(Ce,"pbkdf2Init");function Ye(n,t,e,s,r){return n.destroy(),t.destroy(),s&&s.destroy(),r.fill(0),e}c(Ye,"pbkdf2Output");function He(n,t,e,s){let{c:r,dkLen:i,DK:o,PRF:a,PRFSalt:l}=Ce(n,t,e,s),h,d=new Uint8Array(4),u=rt(d),p=new Uint8Array(a.outputLen);for(let f=1,m=0;m<i;f++,m+=a.outputLen){let w=o.subarray(m,m+a.outputLen);u.setInt32(0,f,!1),(h=l._cloneInto(h)).update(d).digestInto(p),w.set(p.subarray(0,w.length));for(let x=1;x<r;x++){a._cloneInto(h).update(p).digestInto(p);for(let q=0;q<w.length;q++)w[q]^=p[q];}}return Ye(a,l,o,h,p)}c(He,"pbkdf2");async function Re(n,t,e,s){let{c:r,dkLen:i,asyncTick:o,DK:a,PRF:l,PRFSalt:h}=Ce(n,t,e,s),d,u=new Uint8Array(4),p=rt(u),f=new Uint8Array(l.outputLen);for(let m=1,w=0;w<i;m++,w+=l.outputLen){let x=a.subarray(w,w+l.outputLen);p.setInt32(0,m,!1),(d=h._cloneInto(d)).update(u).digestInto(f),x.set(f.subarray(0,x.length)),await _e(r-1,o,()=>{l._cloneInto(d).update(f).digestInto(f);for(let q=0;q<x.length;q++)x[q]^=f[q];});}return Ye(l,h,a,d,f)}c(Re,"pbkdf2Async");var ve=Nn(Oe(),1);var ks=Object.defineProperty,xs=c((n,t,e)=>t in n?ks(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e,"__defNormalProp"),y=c((n,t,e)=>(xs(n,typeof t!="symbol"?t+"":t,e),e),"__publicField"),vs=c(n=>{yt(new Uint32Array(n.buffer,n.byteOffset,Math.floor(n.byteLength/4)),24);},"keccakF1600"),Y={[0]:2,[1]:6,[2]:7,[3]:10,[4]:11,[5]:14,[6]:15,[7]:12,[8]:13,[9]:4},js=new TextEncoder,qs=c(class tn{constructor(){y(this,"state"),y(this,"initialized"),y(this,"pos"),y(this,"posBegin"),y(this,"strobeR"),y(this,"curFlags"),y(this,"i0"),y(this,"MacLen",16);}strobe_init(t){this.initialized=!1;let e=1600/8-128/4;this.strobeR=e-2;let s=Uint8Array.from([1,this.strobeR+2,1,0,1,12*8]),r=new TextEncoder().encode("STROBEv1.0.2"),i=new Uint8Array(s.length+r.length);i.set(s),i.set(r,s.length),this.posBegin=0,this.pos=0,this.state=new Uint8Array(200),this.strobe_duplex(i,0,i.byteLength,!1,!1,!0),this.initialized=!0;let o=js.encode(t);this.operate(!0,Y[0],o,0,o.length,0,!1);}clone(){let t=new tn;return t.state=Uint8Array.from(this.state),t.initialized=this.initialized,t.pos=this.pos,t.posBegin=this.posBegin,t.strobeR=this.strobeR,t.curFlags=this.curFlags,t.i0=this.i0,t}run_f(){this.initialized&&(this.state[this.pos]^=this.posBegin,this.state[this.pos+1]^=4,this.state[this.strobeR+1]^=128),vs(this.state),this.posBegin=0,this.pos=0;}strobe_mark(t,e){}strobe_duplex(t,e,s,r,i,o){let a=t.slice(e,s);for(let l=0;l<a.byteLength;l++)r&&(a[l]^=this.state[this.pos]),this.state[this.pos]^=a[l],i&&(a[l]=this.state[this.pos]),this.pos+=1,this.pos===this.strobeR&&this.run_f();return o&&this.pos!==0&&this.run_f(),a}operate(t,e,s,r,i,o,a){t&&(e|=16);let l;(e&9)!==9&&(e&3)!==2?l=new Uint8Array(o):l=s,a?this.curFlags:(this.begin_op(e),this.curFlags=e);let h=(e&13)===12,d=(e&4)!==0&&!h,u=this.duplex(l,r,o===0?i:o,d,h,!1);if((e&3)===3||(e&9)===8)return u;if((e&11)===9){let p=0;return u.forEach(f=>{p|=f;}),Uint8Array.from([p])}return null}begin_op(t){t&8&&(this.i0===2&&(this.i0=t&1),t^=this.i0);let e=this.posBegin;this.posBegin=this.pos+1;let s=(t&36)!==0,r=new Uint8Array(2);r[0]=e%255,r[1]=t,this.duplex(r,0,r.length,!1,!1,s);}duplex(t,e,s,r,i,o){let a=t.slice();for(let l=0;l<a.length;l++)r&&(a[l]^=this.state[this.pos]),this.state[this.pos]^=a[l],i&&(a[l]=this.state[this.pos]),this.pos+=1,this.pos===this.strobeR&&this.run_f();return o&&this.pos!==0&&this.run_f(),a}ad(t,e){this.ad_f(t,e,0,e.length);}ad_f(t,e,s,r){this.operate(t,Y[0],e,s,r,0,!1);}send_clr(t,e){return this.send_clr_f(t,e,0,e.length)}send_clr_f(t,e,s,r){return this.operate(t,Y[3],e,s,r,0,!1)}recv_clr(t,e){return this.recv_clr_f(t,e,0,e.length)}recv_clr_f(t,e,s,r){return this.operate(t,Y[4],e,s,r,0,!1)}send_mac(t,e){return this.operate(t,Y[7],new Uint8Array(0),0,0,e,!1)}recv_mac(t,e){return this.recv_mac_f(t,e,0,e.length)}recv_mac_f(t,e,s,r){let i=this.operate(t,Y[8],e,s,r,0,!1);return i===null?!1:i[0]===0}ratchet(t){this.operate(!1,Y[9],new Uint8Array(0),0,0,t,!1);}send_enc_unauthenticated(t,e){return this.send_enc_unauthenticated_f(t,e,0,e.length)}send_enc_unauthenticated_f(t,e,s,r){return this.operate(t,Y[5],e,s,r,0,!1)}},"_Strobe"),le=new TextEncoder;function Bt(n){let t=new Uint8Array(4);return t[0]=n%256,t[1]=n<<8%256,t[2]=n<<16%256,t[3]=n<<24%256,t}c(Bt,"getBytesU32");var zs=c(class{constructor(n){y(this,"strobe"),this.strobe=n;}RekeyWithWitnessBytes(n,t){return this.strobe.MetaAd(n,!1),this.strobe.MetaAd(Bt(t.length),!0),this.strobe.Key(t,!1),this}Finalize(n){let t=n.GetRandomArrayU8_32(),e=this.strobe.Clone();return e.MetaAd(le.encode("rng"),!1),e.Key(t,!1),e}},"TranscriptRngBuilder"),_s=c(class en{constructor(){y(this,"obj"),y(this,"MERLIN_PROTOCOL_LABEL","Merlin v1.0");}Init(t){this.obj=new qs,this.obj.strobe_init(this.MERLIN_PROTOCOL_LABEL),this.AppendMessage(le.encode("dom-sep"),le.encode(t));}GetStrobe(){return this.obj.clone()}Clone(){let t=new en;return t.obj=this.obj.clone(),t}AppendMessage(t,e){this.MetaAd(t,!1),this.MetaAd(Bt(e.length),!0),this.Ad(e,!1);}MetaAd(t,e){this.obj.operate(!0,Y[0],t,0,t.length,0,e);}Ad(t,e){this.obj.operate(!1,Y[0],t,0,t.length,0,e);}Prf(t,e){let s=new Uint8Array(0),r=this.obj.operate(!1,Y[2],s,0,0,t,e);if(r===null)throw new Error("Error in Prf: result is null");return r}Key(t,e){this.obj.operate(!1,Y[1],t,0,t.length,0,e);}AppendU64(t,e){this.AppendMessage(t,e);}ChallengeBytes(t,e){let s=Bt(e);return this.MetaAd(t,!1),this.MetaAd(s,!0),this.Prf(e,!1)}WitnessBytes(t,e,s){let r=new Array(1);return r[0]=e,this.WitnessBytesRngL(t,r,s)}WitnessBytesRngL(t,e,s){let r=this.BuildRng();return e.forEach(i=>{r=r.RekeyWithWitnessBytes(t,i);}),r.Finalize(s)}WitnessBytesHdkd(t,e,s){let r=new Uint8Array(e),i=this.BuildRng();for(let a of s)i=i.RekeyWithWitnessBytes(t,a);return i.Finalize(new dn).FillBytes(r),r}BuildRng(){return new zs(this.Clone())}FillBytes(t){let e=Bt(t.length);this.MetaAd(e,!1),this.Prf(t.length,!1);}},"_Transcript"),As=0x51da312547e1b,$t=BigUint64Array.from([0x0002631a5cf5d3edn,0x000dea2f79cd6581n,0x000000000014def9n,0x0000000000000000n,0x0000100000000000n]),Bs=BigUint64Array.from([0x000f48bd6721e6edn,0x0003bab5ac67e45an,0x000fffffeb35e51bn,0x000fffffffffffffn,0x00000fffffffffffn]),nn=BigUint64Array.from([0x0009d265e952d13bn,0x000d63c715bea69fn,0x0005be65cb687604n,0x0003dceec73d217fn,0x000009411b7c309an]),I=BigInt(2**64),sn=c(class{constructor(n,t){y(this,"i0"),y(this,"i1"),this.i0=n,this.i1=t;}},"Tuple2");function j(n){return Number(n%256n)}c(j,"AsU8bn");function ye(n){let t=new Uint8Array(32);return t[0]=j(n[0]>>0n),t[1]=j(n[0]>>8n),t[2]=j(n[0]>>16n),t[3]=j(n[0]>>24n),t[4]=j(n[0]>>32n),t[5]=j(n[0]>>40n),t[6]=j(n[0]>>48n|n[1]<<4n),t[7]=j(n[1]>>4n),t[8]=j(n[1]>>12n),t[9]=j(n[1]>>20n),t[10]=j(n[1]>>28n),t[11]=j(n[1]>>36n),t[12]=j(n[1]>>44n),t[13]=j(n[2]>>0n),t[14]=j(n[2]>>8n),t[15]=j(n[2]>>16n),t[16]=j(n[2]>>24n),t[17]=j(n[2]>>32n),t[18]=j(n[2]>>40n),t[19]=j(n[2]>>48n|n[3]<<4n),t[20]=j(n[3]>>4n),t[21]=j(n[3]>>12n),t[22]=j(n[3]>>20n),t[23]=j(n[3]>>28n),t[24]=j(n[3]>>36n),t[25]=j(n[3]>>44n),t[26]=j(n[4]>>0n),t[27]=j(n[4]>>8n),t[28]=j(n[4]>>16n),t[29]=j(n[4]>>24n),t[30]=j(n[4]>>32n),t[31]=j(n[4]>>40n),t}c(ye,"ScalarBigintToBytesForm");function St(n){let t=new BigUint64Array(5);for(let i=0;i<4;i++)for(let o=0;o<8;o++)t[i]|=(BigInt(n[i*8+o])<<BigInt(o*8))%I;let e=(1n<<52n)-1n,s=(1n<<48n)-1n,r=new BigUint64Array(5);return r[0]=t[0]&e,r[1]=(t[0]>>52n|t[1]<<12n)&e,r[2]=(t[1]>>40n|t[2]<<24n)&e,r[3]=(t[2]>>28n|t[3]<<36n)&e,r[4]=t[3]>>16n&s,r}c(St,"ScalarBytesToBigintForm");function Ze(n,t){let e=(n-t)%I;return e>0?e:I+e}c(Ze,"WrappingSub");function rn(n,t){let e=new BigUint64Array(5),s=(1n<<52n)-1n,r=0n;for(let a=0;a<5;a++)r=Ze(n[a],t[a]+(r>>63n)),e[a]=(r&s)%I;let i=Ze(r>>63n^1n,1n),o=0n;for(let a=0;a<5;a++)o=BigInt((o>>52n)+e[a]+($t[a]&i)),e[a]=o&s;return e}c(rn,"ScalarSub");function we(n,t){let e=new BigUint64Array(5),s=(1n<<52n)-1n,r=0n;for(let i=0;i<5;i++)r=BigInt(n[i])+BigInt(t[i])+(r>>52n),e[i]=r&s;return rn(e,$t)}c(we,"ScalarAdd");function Ss(n,t){let e=he(ue(n,t));return he(ue(e,nn))}c(Ss,"ScalarMul");function g(n,t){return BigInt(n)*BigInt(t)}c(g,"_m");function vt(n){let t=n*BigInt(As)&(1n<<52n)-1n;return new sn(t,n+g(t,BigInt($t[0]))>>52n)}c(vt,"_part1");function Pt(n){let t=n%I&(1n<<52n)-1n;return new sn(t,n>>52n)}c(Pt,"_part2");function he(n){let t=$t,e=vt(n[0]),s=vt(e.i1+n[1]+g(e.i0,BigInt(t[1]))),r=vt(s.i1+n[2]+g(e.i0,BigInt(t[2]))+g(s.i0,BigInt(t[1]))),i=vt(r.i1+n[3]+g(s.i0,BigInt(t[2]))+g(r.i0,BigInt(t[1]))),o=vt(i.i1+n[4]+g(e.i0,BigInt(t[4]))+g(r.i0,BigInt(t[2]))+g(i.i0,BigInt(t[1]))),a=Pt(o.i1+n[5]+g(s.i0,BigInt(t[4]))+g(i.i0,BigInt(t[2]))+g(o.i0,BigInt(t[1]))),l=Pt(a.i1+n[6]+g(r.i0,BigInt(t[4]))+g(o.i0,BigInt(t[2]))),h=Pt(l.i1+n[7]+g(i.i0,BigInt(t[4]))),d=Pt(h.i1+n[8]+g(o.i0,BigInt(t[4]))),u=d.i1;return rn(BigUint64Array.from([a.i0,l.i0,h.i0,d.i0,u]),t)}c(he,"MontgomeryReduce");function ue(n,t){let e=Array(9);return e[0]=g(n[0],t[0]),e[1]=g(n[0],t[1])+g(n[1],t[0]),e[2]=g(n[0],t[2])+g(n[1],t[1])+g(n[2],t[0]),e[3]=g(n[0],t[3])+g(n[1],t[2])+g(n[2],t[1])+g(n[3],t[0]),e[4]=g(n[0],t[4])+g(n[1],t[3])+g(n[2],t[2])+g(n[3],t[1])+g(n[4],t[0]),e[5]=g(n[1],t[4])+g(n[2],t[3])+g(n[3],t[2])+g(n[4],t[1]),e[6]=g(n[2],t[4])+g(n[3],t[3])+g(n[4],t[2]),e[7]=g(n[3],t[4])+g(n[4],t[3]),e[8]=g(n[4],t[4]),e}c(ue,"MulInternal");function Ke(n,t){return he(ue(n,t))}c(Ke,"MontgomeryMul");function Ts(n){let t=new BigUint64Array(8);for(let i=0;i<8;i++)for(let o=0;o<8;o++)t[i]|=(BigInt(n[i*8+o])<<BigInt(o*8))%I;let e=(1n<<52n)-1n,s=new BigUint64Array(5),r=new BigUint64Array(5);return s[0]=t[0]&e,s[1]=(t[0]>>52n|t[1]<<12n)&e,s[2]=(t[1]>>40n|t[2]<<24n)&e,s[3]=(t[2]>>28n|t[3]<<36n)&e,s[4]=(t[3]>>16n|t[4]<<48n)&e,r[0]=t[4]>>4n&e,r[1]=(t[4]>>56n|t[5]<<8n)&e,r[2]=(t[5]>>44n|t[6]<<20n)&e,r[3]=(t[6]>>32n|t[7]<<32n)&e,r[4]=t[7]>>20n,s=Ke(s,Bs),r=Ke(r,nn),we(r,s)}c(Ts,"FromBytesWide");function Es(n){let t=[];for(let e=0;e<n.length;e+=8){let s=0n;for(let r=e+7;r>=e;r--)s=s<<8n|BigInt(n[r]);t.push(s);}return t}c(Es,"readUint8ArrayIntoBigIntArray");var L=c(class de{constructor(){y(this,"bytes");}static FromBytes(t){if(t.length!==32)throw new Error(`Invalid size of data: should be 32, got ${t.length}`);let e=new de;return e.bytes=t,e}static FromBits(t){if(t.length!==32)throw new Error(`Invalid size of data: should be 32, got ${t.length}`);let e=new de;return e.bytes=t,e.bytes[31]&=127,e}ToBytes(){return this.bytes.slice()}static FromBytesModOrderWide(t){let e=Ts(t);return ye(e)}static ToRadix16(t){let e=[];for(let s=0;s<32;s++)e[2*s]=t[s]&15,e[2*s+1]=t[s]>>4&15;for(let s=0;s<63;s++){let r=e[s]+8>>4;e[s]-=r<<4,e[s+1]+=r;}return e}static DivideScalarBytesByCofactor(t){let e=new Uint8Array(t.length),s=0;for(let r=t.length-1;r>=0;r--){let i=t[r]&7;t[r]>>=3,t[r]+=s,e[r]=t[r],s=(i<<5)%256;}return e}static MultiplyScalarBytesByCofactor(t){let e=new Uint8Array(t.length),s=0;for(let r=0;r<t.length;r++){let i=t[r]&224;t[r]=t[r]<<3,t[r]+=s,e[r]=t[r],s=i>>5;}return e}NonAdjacentForm(t){let e=new Array(256).fill(0),s=Es(this.ToBytes()),r=[...s,...new Array(5-s.length).fill(0n)],i=1n<<BigInt(t),o=i-1n,a=0,l=0n;for(;a<256;){let h=Math.floor(a/64),d=a%64,u;d<64-t?u=r[Number(h)]>>BigInt(d):u=r[h]>>BigInt(d)|r[h+1]<<BigInt(64-d);let p=l+(u&o);if((p&1n)===0n){a+=1;continue}p<i/2n?(l=0n,e[a]=Number(p)):(l=1n,e[a]=Number(p-i)),a+=t;}return e}},"_Scalar"),_=(1n<<51n)-1n;function jt(n){return BigInt(n[0])|BigInt(n[1])<<8n|BigInt(n[2])<<16n|BigInt(n[3])<<24n|BigInt(n[4])<<32n|BigInt(n[5])<<40n|BigInt(n[6])<<48n|BigInt(n[7])<<56n}c(jt,"uint8ArrayToBigIntLE");var Is=c(class{constructor(){y(this,"i0"),y(this,"i1");}},"WrappedRes");function on(n){let t=n.Square(),e=t.Square().Square(),s=n.Mul(e),r=t.Mul(s),i=r.Square(),o=s.Mul(i),l=o.Pow2k(5).Mul(o),d=l.Pow2k(10).Mul(l),m=d.Pow2k(20).Mul(d).Pow2k(10).Mul(l),x=m.Pow2k(50).Mul(m),A=x.Pow2k(100).Mul(x).Pow2k(50).Mul(m),B=Array(2);return B[0]=A,B[1]=r,B}c(on,"pow22501");function Ms(n){let e=on(n)[0].Pow2k(2);return n.Mul(e)}c(Ms,"powP58");var z=c(class K{constructor(t){y(this,"data",Array(5)),this.data[0]=t[0],this.data[1]=t[1],this.data[2]=t[2],this.data[3]=t[3],this.data[4]=t[4];}static FromBytes(t){let e=this.Zero();return e.data[0]=jt(t.slice(0,8))&_,e.data[1]=jt(t.slice(6,6+8))>>3n&_,e.data[2]=jt(t.slice(12,12+8))>>6n&_,e.data[3]=jt(t.slice(19,19+8))>>1n&_,e.data[4]=jt(t.slice(24,24+8))>>12n&_,e}Clone(){return new K(this.data.slice())}CtEq(t){let e=this.ToBytes(),s=t.ToBytes();if(e.length!==s.length)return !1;for(let r=0;r<e.length;r++)if(e[r]!==s[r])return !1;return !0}Negate(){return this.Reduce([36028797018963664n-this.data[0],36028797018963952n-this.data[1],36028797018963952n-this.data[2],36028797018963952n-this.data[3],36028797018963952n-this.data[4]])}static SqrtRatioI(t,e){let s=e.Square().Mul(e),r=s.Square().Mul(e),i=t.Mul(s).Mul(Ms(t.Mul(r))),o=e.Mul(i.Square()),a=Gt,l=o.CtEq(t),h=o.CtEq(t.Negate()),d=o.CtEq(t.Negate().Mul(a)),u=i.Mul(Gt);i.ConditionalAssign(u,h||d),i.IsNegative()&&(i=i.Negate());let f=l||h,m=new Is;return m.i0=f,m.i1=i,m}ConditionalNegate(t){let e=this.Negate();this.ConditionalAssign(e,t);}IsNegative(){let t=this.data[0]%256n;return (Number(t)&1)>0}ConditionalAssign(t,e){this.data[0]=e?t.data[0]:this.data[0],this.data[1]=e?t.data[1]:this.data[1],this.data[2]=e?t.data[2]:this.data[2],this.data[3]=e?t.data[3]:this.data[3],this.data[4]=e?t.data[4]:this.data[4];}Pow2k(t){let e=this.Clone().data;for(;;){let s=19n*e[3],r=19n*e[4],i=g(e[0],e[0])+2n*(g(e[1],r)+g(e[2],s)),o=g(e[3],s)+2n*(g(e[0],e[1])+g(e[2],r)),a=g(e[1],e[1])+2n*(g(e[0],e[2])+g(e[4],s)),l=g(e[4],r)+2n*(g(e[0],e[3])+g(e[1],e[2])),h=g(e[2],e[2])+2n*(g(e[0],e[4])+g(e[1],e[3]));o+=i>>51n,e[0]=i%I&_,a+=o>>51n,e[1]=o%I&_,l+=a>>51n,e[2]=a%I&_,h+=l>>51n,e[3]=l%I&_;let d=h>>51n;if(e[4]=h%I&_,e[0]=e[0]+d*19n%I,e[1]+=e[0]>>51n,e[0]&=_,t--,t===0)break}return new K(e)}static One(){return new K([1n,0n,0n,0n,0n])}static Zero(){return new K([0n,0n,0n,0n,0n])}Mul(t){let e=this.data,s=t,r=s.data[1]*19n,i=s.data[2]*19n,o=s.data[3]*19n,a=s.data[4]*19n,l=g(e[0],s.data[0])+g(e[4],r)+g(e[3],i)+g(e[2],o)+g(e[1],a),h=g(e[1],s.data[0])+g(e[0],s.data[1])+g(e[4],i)+g(e[3],o)+g(e[2],a),d=g(e[2],s.data[0])+g(e[1],s.data[1])+g(e[0],s.data[2])+g(e[4],o)+g(e[3],a),u=g(e[3],s.data[0])+g(e[2],s.data[1])+g(e[1],s.data[2])+g(e[0],s.data[3])+g(e[4],a),p=g(e[4],s.data[0])+g(e[3],s.data[1])+g(e[2],s.data[2])+g(e[1],s.data[3])+g(e[0],s.data[4]),f=Array(5);h+=l>>51n,f[0]=(l&_)%I,d+=h>>51n,f[1]=(h&_)%I,u+=d>>51n,f[2]=(d&_)%I,p+=u>>51n,f[3]=(u&_)%I;let m=(p>>51n)%I;return f[4]=(p&_)%I,f[0]=f[0]+m*19n,f[1]+=f[0]>>51n,f[0]&=_,new K(f)}Reduce(t){let e=t[0]>>51n,s=t[1]>>51n,r=t[2]>>51n,i=t[3]>>51n,o=t[4]>>51n;return t[0]&=_,t[1]&=_,t[2]&=_,t[3]&=_,t[4]&=_,t[0]+=o*19n,t[1]+=e,t[2]+=s,t[3]+=r,t[4]+=i,new K(t)}Add(t){let e=new K(this.data);for(let s=0;s<5;s++)e.data[s]+=t.data[s];return e}Sub(t){return this.Reduce([this.data[0]+36028797018963664n-t.data[0],this.data[1]+36028797018963952n-t.data[1],this.data[2]+36028797018963952n-t.data[2],this.data[3]+36028797018963952n-t.data[3],this.data[4]+36028797018963952n-t.data[4]])}Square(){return this.Pow2k(1)}Square2(){let t=this.Pow2k(1);for(let e=0;e<5;e++)t.data[e]*=2n;return t}BitXor(t){let e=new K(this.data);return e.data[0]^=t.data[0],e.data[1]^=t.data[1],e.data[2]^=t.data[2],e.data[3]^=t.data[3],e.data[4]^=t.data[4],e}BitAnd(t){let e=new K(this.data);return e.data[0]&=t,e.data[1]&=t,e.data[2]&=t,e.data[3]&=t,e.data[4]&=t,e}ToBytes(){let e=this.Clone().Reduce(this.Clone().data).data,s=e[0]+19n>>51n;s=e[1]+s>>51n,s=e[2]+s>>51n,s=e[3]+s>>51n,s=e[4]+s>>51n,e[0]+=19n*s;let r=(1n<<51n)-1n;e[1]+=e[0]>>51n,e[0]=e[0]&r,e[2]+=e[1]>>51n,e[1]=e[1]&r,e[3]+=e[2]>>51n,e[2]=e[2]&r,e[4]+=e[3]>>51n,e[3]=e[3]&r,e[4]=e[4]&r;let i=new Uint8Array(32);return i[0]=Number(e[0]%256n),i[1]=Number((e[0]>>8n)%256n),i[2]=Number((e[0]>>16n)%256n),i[3]=Number((e[0]>>24n)%256n),i[4]=Number((e[0]>>32n)%256n),i[5]=Number((e[0]>>40n)%256n),i[6]=Number((e[0]>>48n)%256n|(e[1]<<3n)%256n),i[7]=Number((e[1]>>5n)%256n),i[8]=Number((e[1]>>13n)%256n),i[9]=Number((e[1]>>21n)%256n),i[10]=Number((e[1]>>29n)%256n),i[11]=Number((e[1]>>37n)%256n),i[12]=Number((e[1]>>45n|e[2]<<6n)%256n),i[13]=Number((e[2]>>2n)%256n),i[14]=Number((e[2]>>10n)%256n),i[15]=Number((e[2]>>18n)%256n),i[16]=Number((e[2]>>26n)%256n),i[17]=Number((e[2]>>34n)%256n),i[18]=Number((e[2]>>42n)%256n),i[19]=Number((e[2]>>50n|e[3]<<1n)%256n),i[20]=Number((e[3]>>7n)%256n),i[21]=Number((e[3]>>15n)%256n),i[22]=Number((e[3]>>23n)%256n),i[23]=Number((e[3]>>31n)%256n),i[24]=Number((e[3]>>39n)%256n),i[25]=Number((e[3]>>47n|e[4]<<4n)%256n),i[26]=Number((e[4]>>4n)%256n),i[27]=Number((e[4]>>12n)%256n),i[28]=Number((e[4]>>20n)%256n),i[29]=Number((e[4]>>28n)%256n),i[30]=Number((e[4]>>36n)%256n),i[31]=Number((e[4]>>44n)%256n),i}Invert(){let t=on(this);return t[0].Pow2k(5).Mul(t[1])}},"_FieldElement"),Gt=new z([1718705420411056n,234908883556509n,2233514472574048n,2117202627021982n,765476049583133n]),ke=c(class an{constructor(){y(this,"X"),y(this,"Y"),y(this,"Z");}Double(){let t=this.X.Square(),e=this.Y.Square(),s=this.Z.Square2(),i=this.X.Add(this.Y).Square(),o=e.Add(t),a=e.Sub(t),l=new zt;return l.X=i.Sub(o),l.Y=o,l.Z=a,l.T=s.Sub(a),l}static Identity(){let t=new an;return t.X=z.Zero(),t.Y=z.One(),t.Z=z.One(),t}ToExtended(){return pt.EdwardsPointFromElems(this.X.Mul(this.Z),this.Y.Mul(this.Z),this.Z.Square(),this.X.Mul(this.Y))}},"_ProjectivePoint"),zt=c(class{constructor(){y(this,"X"),y(this,"Y"),y(this,"Z"),y(this,"T");}ToProjective(){let n=new ke;return n.X=this.X.Mul(this.T),n.Y=this.Y.Mul(this.Z),n.Z=this.Z.Mul(this.T),n}ToExtended(){return pt.EdwardsPointFromElems(this.X.Mul(this.T),this.Y.Mul(this.Z),this.Z.Mul(this.T),this.X.Mul(this.Y))}},"CompletedPoint"),Tt=c(class dt{constructor(){y(this,"Y_plus_X"),y(this,"Y_minus_X"),y(this,"XY2d"),this.Y_plus_X=z.One(),this.Y_minus_X=z.One(),this.XY2d=z.Zero();}static FromElements(t,e,s){let r=new dt;return r.Y_plus_X=t,r.Y_minus_X=e,r.XY2d=s,r}static FromArray(t){if(t.length!==15)throw new Error("Array length must be 15");return dt.FromElements(new z(t.slice(0,5)),new z(t.slice(5,10)),new z(t.slice(10,15)))}static FromStringInRadix36Form(t){let e=t.split(",").map(s=>BigInt(parseInt(s,36)));if(e.length!==15)throw new Error("Array length must be 15");return dt.FromElements(new z(e.slice(0,5)),new z(e.slice(5,10)),new z(e.slice(10,15)))}ConditionalAssign(t,e){this.Y_plus_X.ConditionalAssign(t.Y_plus_X,e),this.Y_minus_X.ConditionalAssign(t.Y_minus_X,e),this.XY2d.ConditionalAssign(t.XY2d,e);}BitXor(t){let e=new dt;return e.Y_plus_X=this.Y_plus_X.BitXor(t.Y_plus_X),e.Y_minus_X=this.Y_minus_X.BitXor(t.Y_minus_X),e.XY2d=this.XY2d.BitXor(this.XY2d),e}ConditionalNegate(t){let e=this.Negate();this.ConditionalAssign(e,t);}Negate(){let t=new dt;return t.Y_plus_X=this.Y_minus_X.Clone(),t.Y_minus_X=this.Y_plus_X.Clone(),t.XY2d=this.XY2d.Negate(),t}},"_AffineNielsPoint"),Ls=c(class _t{constructor(){y(this,"Y_plus_X"),y(this,"Y_minus_X"),y(this,"Z"),y(this,"T2d"),this.Y_plus_X=z.Zero(),this.Y_minus_X=z.Zero(),this.Z=z.Zero(),this.T2d=z.Zero();}BitXor(t){let e=new _t;return e.Y_plus_X=this.Y_plus_X.BitXor(t.Y_plus_X),e.Y_minus_X=this.Y_minus_X.BitXor(t.Y_minus_X),e.Z=this.Z.BitXor(t.Z),e.T2d=this.T2d.BitXor(t.T2d),e}BitAnd(t){let e=BigInt(t),s=new _t;return s.Y_plus_X=this.Y_plus_X.BitAnd(e),s.Y_minus_X=this.Y_minus_X.BitAnd(e),s.Z=this.Z.BitAnd(e),s.T2d=this.T2d.BitAnd(e),s}Negate(){let t=new _t;return t.Y_plus_X=this.Y_plus_X.Negate(),t.Y_minus_X=this.Y_minus_X.Negate(),t.Z=this.Z.Negate(),t.T2d=this.T2d.Negate(),t}Copy(){let t=new _t;return t.Y_plus_X=this.Y_plus_X.Clone(),t.Y_minus_X=this.Y_minus_X.Clone(),t.Z=this.Z.Clone(),t.T2d=this.T2d.Clone(),t}GetPoint(){return this}FromPoint(t){this.Y_plus_X=t.Y_plus_X,this.Y_minus_X=t.Y_minus_X,this.Z=t.Z,this.T2d=t.T2d;}ConditionalAssign(t,e){let s=e?65535:0;this.FromPoint(this.GetPoint().BitXor(this.BitXor(t).BitAnd(s)));}ConditionalNegate(t){let e=this.GetPoint();this.ConditionalAssign(e,t);}},"_ProjectiveNielsPoint"),Ge=new z([1859910466990425n,932731440258426n,1072319116312658n,1815898335770999n,633789495995903n]),Fs=new z([929955233495203n,466365720129213n,1662059464998953n,2033849074728123n,1442794654840575n]),pt=c(class at{constructor(){y(this,"X"),y(this,"Y"),y(this,"Z"),y(this,"T");}FromElems(t,e,s,r){this.X=t,this.Y=e,this.Z=s,this.T=r;}static EdwardsPointFromElems(t,e,s,r){let i=new at;return i.X=t,i.Y=e,i.Z=s,i.T=r,i}Equals(t){let e=!0;for(let s=0;s<5;s++)e=e&&this.X.data[s]===t.X.data[s]&&this.Y.data[s]===t.Y.data[s]&&this.Z.data[s]===t.Z.data[s]&&this.T.data[s]===t.T.data[s];return e}Copy(){let t=new at;return t.FromElems(this.X,this.Y,this.Z,this.T),t}static FromCompressedPoint(t){let e=z.FromBytes(t);if(e.IsNegative())throw new Error("Compressed point decompression error: s is negative");let s=z.One(),r=e.Square(),i=s.Sub(r),o=s.Add(r),a=o.Square(),h=Fs.Negate().Mul(i.Square()).Sub(a),d=z.SqrtRatioI(z.One(),h.Mul(a)),u=d.i1.Mul(o),p=d.i1.Mul(u).Mul(h),f=e.Add(e).Mul(u),m=f.IsNegative();f.ConditionalNegate(m);let w=i.Mul(p),x=f.Mul(w);return at.EdwardsPointFromElems(f,w,s,x)}static Double(t){return t.ToProjective().Double().ToExtended()}MulByPow2(t){let e,s=this.ToProjective();for(let r=0;r<t-1;r++)e=s.Double(),s=e.ToProjective();return s.Double().ToExtended()}static Identity(){return at.EdwardsPointFromElems(z.Zero(),z.One(),z.One(),z.Zero())}Negate(){return at.EdwardsPointFromElems(this.X.Negate(),this.Y,this.Z,this.T.Negate())}ToExtended(){return at.EdwardsPointFromElems(this.X.Mul(this.T),this.Y.Mul(this.Z),this.Z.Mul(this.T),this.X.Mul(this.Y))}AddPnp(t){let e=this.Y.Add(this.X),s=this.Y.Sub(this.X),r=e.Mul(t.Y_plus_X),i=s.Mul(t.Y_minus_X),o=this.T.Mul(t.T2d),a=this.Z.Mul(t.Z),l=a.Add(a),h=new zt;return h.X=r.Sub(i),h.Y=r.Add(i),h.Z=l.Add(o),h.T=l.Sub(o),h}AddAnp(t){let e=this.Y.Add(this.X),s=this.Y.Sub(this.X),r=e.Mul(t.Y_plus_X),i=s.Mul(t.Y_minus_X),o=this.T.Mul(t.XY2d),a=this.Z.Add(this.Z),l=new zt;return l.X=r.Sub(i),l.Y=r.Add(i),l.Z=a.Add(o),l.T=a.Sub(o),l}AddEp(t){return this.AddPnp(t.ToProjectiveNiels()).ToExtended()}SubAnp(t){let e=this.Y.Add(this.X),s=this.Y.Sub(this.X),r=e.Mul(t.Y_minus_X),i=s.Mul(t.Y_plus_X),o=this.T.Mul(t.XY2d),a=this.Z.Add(this.Z),l=new zt;return l.X=r.Sub(i),l.Y=r.Add(i),l.Z=a.Sub(o),l.T=a.Add(o),l}SubPnp(t){let e=this.Y.Add(this.X),s=this.Y.Sub(this.X),r=e.Mul(t.Y_minus_X),i=s.Mul(t.Y_plus_X),o=this.T.Mul(t.T2d),a=this.Z.Mul(t.Z),l=a.Add(a),h=new zt;return h.X=r.Sub(i),h.Y=r.Add(i),h.Z=l.Sub(o),h.T=l.Add(o),h}ToProjectiveNiels(){let t=new Ls;return t.Y_plus_X=this.Y.Add(this.X),t.Y_minus_X=this.Y.Sub(this.X),t.Z=this.Z,t.T2d=this.T.Mul(Ge),t}ToProjective(){let t=new ke;return t.X=this.X,t.Y=this.Y,t.Z=this.Z,t}ToAffineNiels(){let t=this.X.Mul(this.Y).Mul(Ge),e=new Tt;return e.Y_plus_X=this.Y.Add(this.X),e.Y_minus_X=this.Y.Sub(this.X),e.XY2d=t,e}},"_EdwardsPoint"),Us=c(class{constructor(){y(this,"Pnp");}Select(n){return this.Pnp[n/2]}},"NafLookupTable5PNP"),Xs=c(class{constructor(){y(this,"lookupTable");}NafLookupTable(n){this.lookupTable=n;}Select(n){return this.lookupTable.affineNielsPoints[n/2]}static FromEdwardsPoint(n){let t=new Array(8);for(let r=0;r<8;r++)t[r]=n.ToProjectiveNiels();let e=pt.Double(n);for(let r=0;r<=6;r++)t[r+1]=e.AddPnp(t[r]).ToExtended().ToProjectiveNiels();let s=new Us;return s.Pnp=t,s}},"NafLookupTable"),Ns=c(class{constructor(n=[]){y(this,"lt"),this.lt=n;}Mul(n){let t=L.ToRadix16(n.bytes),e=pt.Identity();for(let s=0;s<64;s++)if(s%2===1){let r=this.lt[Math.floor(s/2)].Select(t[s]);e=e.AddAnp(r).ToExtended();}e=e.MulByPow2(4);for(let s=0;s<64;s++)s%2===0&&(e=e.AddAnp(this.lt[Math.floor(s/2)].Select(t[s])).ToExtended());return e}},"EdwardsBasepointTable"),fe=c(class At{constructor(){y(this,"ep"),y(this,"affineNielsPoints");}static FromEdward(t){let e=new At;e.ep=t,e.affineNielsPoints=new Tt[8],e.affineNielsPoints[0]=t.ToAffineNiels();for(let s=0;s<7;s++)e.affineNielsPoints[s+1]=t.AddAnp(e.affineNielsPoints[s]).ToExtended().ToAffineNiels();return e}static FromANPArray(t){let e=new At;return e.affineNielsPoints=t,e}static FromArrayOfStringsInRadix36Form(t){return At.FromANPArray(t.map(Tt.FromStringInRadix36Form))}Select(t){let e=t>>7,s=t+e^e,r=new Tt;for(let o=1;o<9;o++)r.ConditionalAssign(this.affineNielsPoints[o-1],s===o);let i=e&1;return r.ConditionalNegate(i===1),r}static From(t){return At.FromEdward(t)}},"_LookupTable");y(fe,"FromBigintMatrix",n=>fe.FromANPArray(n.map(Tt.FromArray)));var cn=fe,Ps=["yuw1d7ohv6,ola5qtbuuu,otp7yucl9y,eel1loivjl,niwkyful3f,m82pv8bwe,20jxbhurhe,67rvlup4sc,3bz0fuxjck,by7j4n28ox,2ysqonijjc,cehg3i7i49,e03f4y6pb4,7u8rkjn3se,j8m0w4201y","frq2ailels,gxz46s5gbo,b5aa5uikgg,ykznlfkz0v,l5boa0000e,347l7ponl1,lfz2mxs0jw,edbuo29w7j,ee2gvkgb9s,7eezzyyw8t,i81aass13d,bteze6jfdh,ailvyozgy4,6mak0o2ime,fm7k0we3yz","7kxaay9xcw,nhboz4phdu,uheea0ahwi,vrheeurh9o,tbkhe6zztr,46qlyo30sa,5zok62dgqa,4cvifd3adv,88yofi7wik,3oro8ffagl,ap1mri4l8l,2pgzzemq3b,jargu8y0ps,95gyia98jx,bpyqr4m56j","spx3qe9gvz,kc46eic4te,ptfkdlcy50,pmm0dv1b0z,c56yziv3yg,jvt0ojrgz5,6nvh5lhwel,138rxhmg79,awzdbtmwnd,53jicbsoc1,9i3yxjowwy,2fk3hg4j74,56ksm07bel,wlu2lpmwc,l8o6pnqdbt","hr02oe750c,ge5o3jqsth,s0lg0ous8p,l9t5w68ici,vazqjajg0n,gzp84xu3xg,j1f4oro2nh,f6prasj1fq,hemmy8tylv,crwnd7st6x,dlt6ghwh0b,e30hlvnowm,kav1ue4fm7,fa24ztrmq1,k1uavs9yq0","15ktisvac4e,rddovhgagm,fy0qknlrzu,lqfanx7ix7,bifpfmu860,kdw44w8vuw,ed565x982z,6590l3oybx,ae316ww59x,49u344m9gc,8sruvztk2x,bi13ys5b0l,c8g574sbte,cv2gdefopm,ap7za1r6qn","o9uxyv9cod,vfbfmqiqct,bf56j3ele5,pap8r9vd6l,6479gg0tbi,jewgn6k043,3btj8f7lzh,7i8wuca3e7,6g7n65qkwl,ezrwnxsle,1qscpkpp4o,ha0d9ytsa4,icucsapuai,bmiiwauatk,cq8ejgx193","iu5r5lhnkw,qpj1lg7grd,llo02ho3yh,9xmibug31c,gye4dq6iu6,ajfbo5w3kb,cj26raoadd,it3cgbu0ry,kfqc2hccn7,bq8fuh6ltx,6tm0eai6ty,4xap23rhdf,kd4go6hw3h,bfyn01dlft,e1tobl2cst","hx02gbaa9a,qxq3ecca54,ha55qiq2de,ubzy8tz22f,1534xj1z3wk,9rnqltgkuf,7v84to2802,hi3nx4x5ts,b69dcd5tw4,joqzx5zcsi,46q09qv4us,k3aavs166m,g9h4731is1,erw61jubep,cch1k0r08e","kqgabxlbfv,dnu20ziqni,zruqa25sqw,ls0ujq8jq1,g1gnq67nc9,emgk3codaf,a2ev4o4akw,4yptk3bcfv,9h7y7zcg03,5tg50j0u3i,2m8sk1i2jr,bqsies6qaq,ve0qcnjoq,563z0spa4o,ch39cvygpu","yz6vqt5upg,ccls2549z7,fuo6ojngjn,z8iyzg621w,10xi777yih1,d6jdqoigl,dts5af06el,5p2galm1wq,h51bdpvjm8,kmsz5qp0pw,87cujat71b,jxedl02d6q,i98j7hgx9x,8eovezbh73,fnjhvfi3x6","1085eflcsxv,czlyoai7u9,4wciwdngx4,q8tte073bj,bw8ywvn2m0,gah4tcp1eh,8xof3ddrvg,18p4y4xlyo,gzxggm81gt,a0qtrglbx,14kbhkqvsz,58u9281ya4,14wz9zrx5l,lktkxbysn2,3n94gveac2","axv9tdfg9x,jurj6cjh73,ibi0cmkon0,yttj1qagwi,14qht6c1spk,483bz3438o,9lq3bwy1ah,2cblh330nn,gakatd37ra,kwdfpugl0f,km6rfs1unq,7fkaudlzbr,dzhi1ksp8t,i0nwparsve,jt5adaqy51","6nq4vsekz6,s2cfwwl4zs,bv9eakscpf,r7ndz1juf9,l0eygd6ntq,h4v8uj740,csjsb5whm8,b75e1miunm,f423hi3yqs,db4h1tub8f,ir3gowe4wj,fnpq702cta,24hkm6qrhy,k4dep4cdqd,jemdvtkh54","naee4qp81a,kao7fvgmls,il1zozbrj7,ld2mok2spo,ndg1noik7k,a1ktpfqq7o,ces1bm0qv7,3lzplgcfip,5rhdjvxtes,3elpg8om0d,9lqw48pucl,ai28oxlqaa,4hg8wstcg,bns5yamn70,af5w7n0m27","e3frcj98nn,jxqp4ecic5,10w009a6l0v,apla2o383y,l8j0basrlz,95el11jr5t,2igc22c8f1,701rj40zlv,221r4zwmw8,1tp7uyfomv,83z1ufzd2g,gr5re0kiy,2286jvriu9,au9d7ja3yr,6zydddis6n","mr98nclixe,wgkkmbt0b2,jqgfx7ib8f,ibuhk6h885,uzvskmreu1,fea6yi6zzx,i5kdshnvd6,j7gric29pu,8z4437mt25,kj4hdfvrbr,e253fcb33e,11nf5knv4h,f3q0y4xu4,bzhu0dgr1d,ewr22x0z4i","ywd19ly9q6,nbdtngcbnk,pa0nmqh3ro,i97iixhffv,macyh5gxck,7r4aike2mt,kqiabxvlr8,b4pxmzpcpy,h7uj0it8tn,iyc8apfng,5g7ske2e96,23n72h1fa,n3tdwb73a,68l13wmc6h,5o6x1z5o4l","9s9nlfgome,123dlh2dq96,fwr2gflrsf,ord7n1o5wh,k9v17xxk17,2gz4iy699c,gk3v0atjx8,ezhhvr83xo,48zjaowtq4,i9nh5hr4vy,638isuo2ev,cdquf4szpt,1zxv2r4m08,cm075c0d2,epw412y4c5","gh73lsamw6,nq73q4a1h1,pyf1gxc58n,r6qdlz22px,wtpaqpu644,frdnyhcl3h,a1enkeyj1r,a9bttrf2ge,gjo38dbasz,kxx9t92lwd,8t8l4lybu3,11m5f6jthi,9xyvl8k4tx,34o9skrhhs,jkbrg0wqyw","hdqn96chtz,s6xplkk4pc,phr0uocbva,dng7v1g232,lhkogfzt6w,b9ru4rt6xh,lsjyzali04,eo1o0kb21x,6jqiw9as9m,b508dnpq4s,jqma6034wa,h46h366wbn,44h4uakuju,acgytivsre,5oslg9eo6k","lilbgzzubp,cw3l4jf26p,orefmiauxa,13c2j33ujt3,tptrgk4vl9,dud2j09077,h9yltwwe5q,bxkhslsxkn,huo5p42ch7,9tpjj5ds50,t2vka0lzx,g7lkyb3cu0,61bo5ux45m,cx6jvab5ax,sptmo9db5","nixjr0f31t,3z5iljkmdl,fq994pvt55,t2vizuusgs,l0utp5sx2e,hzggnikzge,2z5mnjks8e,ej0guqi2xx,8aol6t14a8,e5xw48m2ci,6j14wapx1d,g8mjzwt0o9,abhl0890u5,66wx4tj6xx,iul0zrmrmc","hoi4cnduo6,30s1vlrxmn,sssh46o8tm,rkypp0ea6n,ga7t5t78wz,kgg314tvhf,23die76xu8,6n7n9ty2w8,8mc1ekaude,kaejpt4cvi,dzi8t7fyjl,a61rafw4vq,d7o8r6ac37,d749aym99r,jkvq3j6l30","anrr6zjf0c,p25ag7porx,12ai91caoi7,gg2dkq67kz,xicih3tqpm,w1z8ofbt8,i3mwtzwxvf,5mi8hnu51v,g5b5ijoyer,2j8e7z2atz,f1tjl5o0i2,exlpcnwdfc,7qyv2jmg1k,ef4sfnbrsq,gl7wtu68yr","7zlbthbs7i,renlhq9t02,hf3bdblzkj,t92foykinm,8oauw468h1,hkkqj74lwl,49suqx520d,bof6fkfdm3,eqbcgzniqg,h1vh7g1z6c,46m8vf3xio,dcnr0za9np,416ymceh6p,4hiprsu6to,fx6jouqojc","oemw5db5rs,rdj35mmt1p,mxg84cjoix,14fxik5lqz4,cyj9x14j6i,fxbsr5dkv8,h589xgxeo3,6kh9thuii4,kojj8ix6kb,a5w54eqiqp,h9q0fitm2p,2fnihwjk4x,hwvtrum0ox,79d2p0a44p,a7w8kuy90o","hcs0sb3awi,6mtl0kbo04,k8a8ws3gj4,k36exobex3,txmtk95k0p,g0sfuchmji,glr617fhfc,cwbhuukksn,734a7qrn86,2yd34prhzm,2cfcv9texw,e6ljsluuig,202raasg0o,e5njk1307k,zzioie2kz","insqk5wz3k,j1nsc020ha,107ifl1u06n,oz31epigxc,71byjiqb1c,504x4pmohb,gnitxe51y7,lct14zo0pk,a6x5kxiipx,j2gvlfsbyw,3ufy35vu0v,dosk1e0e7g,dmapybao43,4ajqsnrzcq,ij56k93hsa","10wf58wzlq1,khxnbktarf,wcahofe5w9,kkvi8zy72f,pf4tdqbk01,2ejikb4ipt,cpk95d4qet,ilhlc8gdme,c5e05fr3eu,2dgvszt2ir,cgti6rb3f3,bay37x3342,8njv5euf7a,hvmij3xrot,8y6o6b2at1","otw4gj46fy,9e0a2bif6w,jukb0ihluy,ddi8b75xz7,rx2mq0qpug,m1yf09pnn6,39ayo6a3fl,45oj9q0qju,el2ina37vs,63q8pxnktd,de4zyzrt6p,hflyglpnxa,dqiab16xbr,hv0dji6plq,55b6cd5rtg","ppsxyuy9iu,6yoz7af3om,cxsmjwo6m3,sqsd3cn1tq,laazra6rpt,97dbsjnsdr,49qurk4ji6,gcq7td0yh7,jdqjar2v6n,8lsddyyzhm,9bp6u2e02,48qhu3ibr1,et8eo2j2ar,hccl0xg9zm,5c6x9c0qhu","hcmfu1tcfh,urck10gr5r,zn5jjudqg1,sni7cqmuhq,dwd9fq9f35,5asuwwn3ou,e1dgbswfiv,5sjfkc70qk,eqnwts1shu,frx8lgr2yo,8xofbesi7r,jc1mqaaxc3,6686hieia7,cbcpxp3sau,9g98idtp9b","d58ox9jwgt,sfn35a4dc9,q4fpaxhxfa,r86vqku8gu,98sdd8k4m3,2x65u6w1mw,k5sklfk8yr,kg1gfs7f3n,28qqca6pg5,frvt68uogb,fi8d3uxihn,dmopfieq2f,3vjdf9fh4r,lc4jgubvx7,fagc0qczxg","fy47gffz5v,fioe1nzw96,tvwco8x1fp,h34ewzx1of,n6w55k0pbe,a305d4bhye,9f9cd7xrw2,gn7ernvjgl,kp5vjtaf6c,anqa4u6xht,ifj9tmt7pp,gxgy1zmh9c,flhqdbaoqe,8400brfsz9,m3g5njae1x","6bmenc17zj,wtwuk66t7n,306pkjligj,phsbbkztx9,lwl048zlse,h2pj74maj5,2key6n0moq,1jpp0dwxqb,9dncspw57r,26zdhyfygl,by0hkbitcz,2tnkbg5kkf,kz37k9votm,31atnpsgam,bzm0pwxfhv","x31ep9rzk3,i5gm1mh5sr,fdko8svth9,ao9e048vpj,idjd0xaafd,4jb163320q,jdnganfsar,4w69dcmbh8,65rgythenz,lfn71gyvyf,gaxk4tmz85,k1wruyxeip,6k8hqbs0bv,fwq4frkba3,eus12nzoi5","m44eczuqsl,af4zdegxtw,eb0c4syp1i,1302ddbifio,g2xlxl71ww,9pqji09v07,eua4uwfkmi,ceu32n1xm5,kech4vh7nq,6upaz0bgmh,cx6wb3zsuf,g3noldwah3,8vpob2ld8p,5reomvrp80,c7s2lq5954","ms5a3os4tr,etunynf1qf,9t2ek8392f,69niqx8yh8,eqxcp9aljd,2viq909wb6,bet25bk9x0,kb4ut8j3fe,j5tix8msuh,h80zog1a32,6g2dnfr6ji,f18myjo6sf,jrcvnwm2za,lm180od7bt,eaodkm18z4","toqqpzy8sp,t2c0twsp2p,pg9aw7mh9n,op2viguj6r,pfahols9pf,g14dlw83ob,kesfz2od3m,g7w53ada5q,8faywlic5j,hb7c4qzgpw,fwsbyj9w8v,2pl0w930aw,98dhlpfoek,cxlg2dmh2i,bokgb4z9lu","fs8oa8qbnq,keiaaeg0fu,gnzs3f8o3i,ojtrxfuyfg,capr3kh9bl,3yifl880q,5vgq99zacm,lmjhr27pg3,33kfox995v,aumqp86g2l,dvgroggi3r,osrcul6v2,6rwue2umkw,cw9l1ws1rg,1h9vlnywj6","jk09yjv35s,6t6xuz9fkc,depzn1a0l1,y24qkcs7p6,ah0gnotoml,bu2hcywcrh,lnejoxgm2w,bujopbtlq2,4tf7606v62,lppesk3en5,k198nuarva,kgdegjo177,1gmcbhnqpl,esntqhegkq,4nqawz7urb","4nbdlgo9bs,73hwyp408x,ryx536vusb,v0v4yqjawz,rqdzc0g1w1,2hufv8r04b,1nnuhr7dm9,51esuu7dmf,afc2ms9b0v,g7rgc8gyk1,5uxxy4xcff,eomj79fkor,2vcutm1lt6,fg8ae61ram,a5lfr7zg80","yao322pm6r,f19dhmxkzm,rcpymt262y,4i6ref1vvx,at03wazwv4,ca0s2tj6zy,submp774f,5862dt39c4,1m0exb6o27,j7hapnm1p6,1vw4w2ypo7,5b6z2c6ii1,a24qbyojuy,a3wf315m1k,hgludctxjx","14t58h8j5rb,5t78q90nku,13pxwq85g18,m7leylg8g2,qkzaky3rwi,lq69wn3bkg,5gc87slhpd,1seiujxuje,bcqxlk4j5s,7nz98bd4r7,gsu2m4al3f,ike19uvid3,8re5gmm8qk,5f071027sd,9wwibm5au4","vlx4hm1urm,k64s4794iu,xidey8o2tr,94ncv4bdwj,15cpjtnvavn,9rnlko0fo5,4orqr5oncn,jfllqdz6xg,jxwi02r0ma,lhkfi156q6,d87k6surb1,cyhz41ar0z,ik5qo7gy3z,hdys9omw6f,lmz0liiges","ut84l1278i,17gzve0r8le,ipl63h3f8r,f1wvaabtw3,le62ka79ao,hglo2za5xf,mx1sehcdb,d475c3zbx9,7dbgivcvbl,8tff0ukel3,jp8li5k158,5dqoxtx8ia,453o9gjh84,1xae0lj65n,jaapfvwwds","7bf5c1tyg6,xl51qxter3,pikk42akql,nfnk8bkp4i,trayq2wcru,1mtn00i3jn,14tvrk52g7,airzskdu3x,i54v15xuga,je3bvw8ss3,5g4wqmxkbt,2b1g5squm9,4rr8qm5pl1,c73wp9je1e,jvbgosxx8k","pf85kzidhf,c9ck4gfhql,ytrn10j4ny,i26bg8tlxd,93itsyd59j,i9od14i61s,8rhtalkt9i,hdjgc5417q,1y5fxen5bi,gx0xkr3uev,cl2jxykvim,inepwvt9k6,9q1h2maw4t,1qvvj6xhh0,7p15nbvwr1","jnqiyc6j9j,bqhm5kemg9,bw02ba11gz,r8evj7cfep,ov5doea7nc,7yqdb8hxmx,9r7sh2j7ao,aoec0sn67n,ambgwgbsr1,2i7ufonmmh,62avy1hks5,5rqi5ggov7,6ttc2t23k2,jcdbvum730,danhah4jnx","wxjih1ixzw,73ct2gcjrm,ofduscqi72,k1pp5yaewu,juisbrk65p,d632arpgni,jjb3wf2a2n,7clwhxyp31,40e4oqdu3k,h4y3btye50,1dx974ivb1,agwi7nodl7,b6u44tm3cm,3nvlu9bgyv,4cw2ynxnxi","my6ybkqyp5,3pkc6nt45i,k0hx8qrwcr,ens3aoajay,cyxpavkgwv,cpb3g01bn4,lc3nx0ehcx,86x259d9fi,8kq770022s,krewnij9n3,iu0321hep3,8by8hkikje,k4j76j9egm,9s2livlpl5,45baaoxohd","q3rlduci2u,rbwk5gavcj,p0a1l2w31w,pd3uituzex,kwelqrqfjw,bd2t7zjnte,96a1vlnyyx,g82q84f5hg,8ivz5xcfc2,ao6i8uz7ah,9pmmusxdc4,ezmcx0odyl,jlphwa79bb,4xrxugx4l7,1ydjp3zcmz","eqfn3yrfxr,13apbwpubun,xa7xqkqth0,s3x8w1dxkm,wyeban4dow,7xkd2p6i4h,iml0c9yhmf,fmjpo5s9jx,73yxoqfqm1,3q1mtdhwdk,fn9205cj33,9mg28z7mym,d37533otoi,kditg7x188,fm6xmpckxn","oitm0jrpdu,jjvdx1nujr,myjgtjarqk,14tbbgd0eue,otmy4t1236,62aeofazf0,m44l1v2naa,4r1yzn9frx,kov0thhvho,c7v8fckmov,e5tbh3lqzx,8lwh39s77b,fyj20hzgxt,8j0y7rbinj,a8stcuy2fx","nntldk0j4s,p3e0y5hof3,ojl66ab4h3,n7xz8yniu3,vjpkw0fq8c,iug99xiee1,jgug8u5xmf,jfc4gqn8ik,g8x3n5dmnq,irkf3439i3,8g742g8scm,61ut7iwzlx,atrqcu686c,69sovq8wa2,ajf7vnnu3w","103qguqczpo,zb04kw3fq5,nd5mmxh498,pvqyjfbcwz,yajy3rpsou,jmvd2xikz4,ln51ch334y,m99c6erhl,ezm22zhwtl,9d6hwibwcx,8e43nurbv1,493bemt3ep,3nf6pex43x,4b48jb15tl,66k1o9mwgl","ho9balwpdo,pgzbfadui4,d0u7xt9bbj,8fgv5vi7pc,q47isompyp,96xif0v2am,rnra14k8d,9499g30imd,ehnmg47wk6,bz6vbi31k,ekdhzcug57,20a17vbd2g,6hw0yqo1k3,fq1yt4muj,cjfzllmd0z","fofrvr3fh9,vryc1c9cwx,n3bgjlbdt9,pdqi1vx2f5,svud70layj,lihyqu80j7,exv7teegw2,fc8rvsclcu,ldfc0j4nq5,7cwfm4njcq,hy9nl4872m,b6m3j2x4g3,h1of0wd82t,a5outw7ye4,kwpxh0g17h","d96n9evb59,k7m9xuiuy3,gx0x4jbsyc,oj6lmxy90q,y7k7y4l2oh,46kjemqtxp,2rmgxochzz,662aixugk4,9qzt60m1t0,do7puyyvy,1w7b69q5qi,adxdndzrjx,5r1mwlrj64,e98okzefzp,l0o2dkp81c","v7mu0s99qv,yhqsvwzix2,5x8yjg23yv,e0cex24atn,kvu2dxjdax,fsc82zd6jz,kcdxd5vek3,hmdbfdvigm,l4l7pksruu,jjtu8gzocu,3gzxsy8r7o,8fr7483t76,7tf85byb66,x5t00s54m,c15zpq3u7b","har9bt55f1,8z6jvmz57l,qnqaviphq3,13gc1sfzyga,83jvqvwkau,arsxe6zn4r,ioi5q7lu3g,eszfuxcmr4,ipvazwtka6,2w8l5vcmv5,5scksevemw,azw76qcmmf,3dq37xsi48,97z6ejwjrp,g6nqtysir8","y8rc5e30ei,2mzwb06wec,t31080lj1w,w0v9nnpxxn,11ans137o2l,k3yiz7mfuj,ernfpnjrv,gi7bokk180,d4uoogsv0a,hdw38e7i7q,eb6oeby1h6,fm48jnmf51,egtrg24vdb,cqwvunfmz8,k4607addbf","htm6bblpft,ddhqxcsvlz,jl68jep7rb,mt1rrs47rd,tqdvr1zahn,idhd4ywqpo,gdmsr5xsdo,e5ma9u2kxs,5at6tqxn0m,bxvby5tgyj,hf53cry47d,fdoqgji3cq,b34ow2oku,5a2e9gow68,jghbivvd5r"],Cs=[["yuw1d7ohv6,ola5qtbuuu,otp7yucl9y,eel1loivjl,niwkyful3f,m82pv8bwe,20jxbhurhe,67rvlup4sc,3bz0fuxjck,by7j4n28ox,2ysqonijjc,cehg3i7i49,e03f4y6pb4,7u8rkjn3se,j8m0w4201y","zrpka7v3dj,7sbrcgoldv,kcrfmh0vw6,jngdnwzuuo,ffaecgsnv6,4k88ogi46g,49hadqy2xf,fuxafdco3o,7e669e1ryw,innyjc2u1e,7dascowxnj,a68qwx78n3,dqubw8eh0v,fv8bqjp8g5,jf2tu0y91s","frq2ailels,gxz46s5gbo,b5aa5uikgg,ykznlfkz0v,l5boa0000e,347l7ponl1,lfz2mxs0jw,edbuo29w7j,ee2gvkgb9s,7eezzyyw8t,i81aass13d,bteze6jfdh,ailvyozgy4,6mak0o2ime,fm7k0we3yz","976bdqo49r,i6o7kyisy6,bjkv11el23,9wyqgwxvr1,i0w0oduamw,gom08balz3,h3bs88zvlr,6xxchgwc9x,6dpia17pmr,6uscau35ga,b1i6z45vk9,1wdab57cci,1vgby0s3j9,jmvf5zev7s,m3sark80nn","7kxaay9xcw,nhboz4phdu,uheea0ahwi,vrheeurh9o,tbkhe6zztr,46qlyo30sa,5zok62dgqa,4cvifd3adv,88yofi7wik,3oro8ffagl,ap1mri4l8l,2pgzzemq3b,jargu8y0ps,95gyia98jx,bpyqr4m56j","do7rqc9jxt,34a8sjcu9t,q1yoxvgthy,c40ypqqa98,e6p5gi72yr,2m6pd0of8,1fts58kysz,302urp1gne,bsyoypjlao,9tngdr3z87,bmqpyk419t,14m2btshit,2l5mzeky2o,2m6qi9m8hw,2wa1bbu2ty","spx3qe9gvz,kc46eic4te,ptfkdlcy50,pmm0dv1b0z,c56yziv3yg,jvt0ojrgz5,6nvh5lhwel,138rxhmg79,awzdbtmwnd,53jicbsoc1,9i3yxjowwy,2fk3hg4j74,56ksm07bel,wlu2lpmwc,l8o6pnqdbt","16jgl91bzp8,15j6ks3tgdx,9fhif3p6h8,76qaf20ai7,nqupotu3ta,kf13c5xmft,azuwoqpn8,2lra2g7d22,2fx5kaqxiv,a56zc86msg,5fld5lo0ey,jl8dh0lgxk,7vzo5h3dtx,k7j7dsp6dj,6ohfdu4z44"],["dh94ohfifx,tycn8u1pll,qha367lj2x,l3h9zz7ob7,j0v63797fy,9e1biswn6m,ar77a6qoq3,dz9niuls0i,7xl7ctwsdp,8gkkcm3goh,btmwauwh53,7514qfds8,efiv5xmct6,g770la6s6s,2wm161yxr8","h39e6n1w4y,cagoklpsic,bv1rxwuk2z,9lzirqtx5p,mtkkpb2zr4,afruobzra6,fmhdqjnd02,2395vmts1q,jg6pjdkc9v,6kc0syvmnj,ar2temfuh0,fhjo0h9luq,sp86x9vpr,30gyrb7wfa,eyydfd7dda","10qzurpzvlp,evnq937me7,yfa28ayg5g,p68gaoq5vc,pt1lomuhbu,l6kzhf7r5g,7i4eq3ko92,gmden4taaj,83qu5uvq2n,8xpuyf3mpv,k5qkk8llg4,1npu3bjkwq,fafobvmq9m,3cuut5imgt,3jwe4rm8jp","jis49op0v9,ju1jn7jepo,nfw2mjwkmu,123nm83ftra,n7iq2u5j2u,9ngpfvgqma,guxzvxdz3c,5srd4n7cc8,20f1kuh4ta,8ae4t5rdqw,1y12ekxn19,4h7w66ddp3,jc3ckokyvi,kt4lt5a578,9kboobjzo1","nsksfoqlxs,m7aza9cj1j,xzdvj32uz4,he1sm0dy6b,ip82beuzgn,77kcybzftl,ghj2lrrilz,lhm6mqkrx5,dauohdqtje,5hyggq6g7j,kpk50tyufe,jb1rae3nxw,71hsavl7y7,ebpsldplxp,egzqbb2ut","c7ahiyqjf5,h6ff20410i,7gxr2ptf0y,13v3g2tjhxc,m6rizjv8ph,lz74dsk7f8,9pzfj6a1wn,ktwyoy3iql,hwzrtbwrxb,b0rdx2s96q,35hgkho0tw,992cnj1jf1,6bj12nrz8f,j04q998c7k,38ogomgl1q","vtwnssh1n6,c8fbfb7r38,cblmi1qfrg,ap69q97pyy,jb9oy3z71o,2q4i5vqs0d,f4rgiv2o8u,cunqgen4sp,lsgpzcven,k75hlmu13m,87fllxn1tx,h8f33ur9pn,b26yhl2khz,1tqv5htj3r,2qkp5u3hmq","7tmvqshpad,i7qjolxq66,mp3ulfhl4p,cj0m1oqvr4,baoo9bayzv,etf8rdk7yc,bugmszg495,5j9fa9j8hm,2p8qujissk,cn9figu4wh,4r85ivc4j4,ku2xy8s9w6,aod0vdyax,2vnyedwyof,bdwhaxjkcx"],["vb9ytzdhnf,l5akheyksj,ebznnnm4c4,jk8mqzojyy,nzuhhx50h5,1ctlndaym6,6yhs52ebkt,dnnwi0noff,jcrgav8zf4,dmv1tosst7,4qjuybh5l5,k7u9vc6ee8,kc4gpo98e0,631o9u4zyk,aw9a8d1qal","t10hg4c4d4,uyuer1zywu,bb5of9crmw,mfo80opxpt,lp8j934ex4,6h0wyj2ylz,9txsjvs0xm,9rlhiav77p,7zacvfl9l5,3dms9021oy,7snasyzbhc,97cibxlx4r,84be3f1ec2,hboe9cuolv,3k5gr7bq8u","jwxio5507u,16speki3txm,11fzdtrcjkl,ok98ohurar,t0whu1mhgp,codjgcxanb,lt9g988l3o,fagtgcjdaq,ge55wqkls4,b2s45fi6sb,6o4p6ssdwm,9qrzxc3ghh,hw83ls0dw2,ad81uldrbk,b9gajp7kqu","psdqdinq91,pb2jtljyub,t0ry9lxexm,seylhe8j6n,mewr6urg09,7m4szujz1m,hvhyo4g192,3ky37kfo6o,5ba6ldgut9,7pne2aulmd,1s3fxpb1py,1nvt14itki,7dahobfaw6,c319824nqk,ffnvx6itik","qvwp0ba5i5,kb8hmjuiba,t23ygncn87,pp4r5f8tpc,ckro8ei0w0,jjj5dv9fy2,amj56h7z1h,aebtidorb9,gcemflo4zz,apuncmpkaf,5puqmbag33,i59iusqq12,bla6w1j0b2,kfota1xuvg,ct7ofzdnez","exa47nndi3,fidsx13bmz,evc5p0p4be,o1xel2hrfs,nbjs7f2yk4,cr56nb0r10,gvtpqs8vma,5de5e0y1dh,k14ztl3dlk,ewegkpvwkm,29s2yltw3a,axb7huzwx,7hnaqdh079,3uhag68u18,5n9lpyw778","xopgcwupej,orhbwtik0d,16396kx0h2n,u8trrclfsf,163lwo7so60,kp6qaxlshr,fgtakbrn76,carjeb4kw,jmj9r1fe5l,p1ewi6t0n,8sxyyp2no2,5ehm7mrs4p,8bng4igtgj,j4h6d8ls0b,fwpm5s2ww3","yumy326k2y,c1ae74862f,i6iu0u8d2e,bbsio5eb12,fvy2f0ulxb,7t8dni20g2,cyagn3icqb,jf4850gtht,iq52s4r8dj,3bwmuovnd6,5f133dkuym,7nzqbl1kx8,kblfo5gtxj,14xw81o79p,k3p91wb7ke"],["728ujlmhj0,542xg70llv,khfxrrrq8s,5c46q8xkdt,7mh5fw4v5c,2krqb9m34e,hoeee5g5bd,eqlk9sxvxn,4x559ap8ik,3twefztckq,jnyd55qnwd,gwqfna81ep,gl1f4qxgjo,g6wewru102,iadvqgkzmz","10p6zwpv60l,mxgsku1nh6,x61ksck1oy,jpuc2se4nt,tbdqmkh602,jwuiuek5hr,75g7szubab,33s3ing83o,afafdkho9x,e9cef0yqyt,gu6136t8m9,inr6l79wbx,17y7fkavhe,ba1wksh3fn,fttc92dxde","rp9oi1miih,ajwblcnb0c,ngt37lkevy,j63v0fafbi,ubqvyke0ff,f8w8v1hk09,4csangzcq4,9tsc750itc,5g1hnxjipt,6ckk7f1xij,e8e9q1rakg,lwvpodjoso,907ip3u661,ahf9boas3g,gcix9x92kj","xzg8mt2ry9,mepoxd00lg,mttfre6pis,mqmfn6wqhi,rqi74zk76e,8mueljsjdk,5glgfurhg6,9yqs90cyot,89qp4tdr5f,dxec0xxfbx,6x7jmcfi35,ch22wodk8a,1monltos2t,4smgulww7r,9yhgp887kw","fz982kuprb,bdwofrmltu,14kqy7771hs,pe581svl1d,kmqj6nxvrv,3apgxi2awi,4timaloa3c,19s7okrfd2,gxz4sjzoah,63nyc8ayue,g7ngp1w0iv,hbagdw5tzj,71ctuy4m0d,ei0y4fhgnj,8uo0i6si9d","pgdm4rk23g,p31el0h4g9,go5mderafd,8ze6s379u0,qt8h854asa,hu0k21oczq,aix1yi512a,2unlrpvzmn,jl0xsj1juw,8i3v2aqnkv,8x90ef673c,krgmukw211,499s5qqsi8,1he4jqg4rp,gtrjtz0kuj","944chbyjhh,mdsdbfzofg,147dwxjlae3,5x3bptpis0,ptzter8hhs,ekjgb1s8zx,h4draqaer7,obzmkzmvr,l4vfq815uw,ca9cdvv08f,ig0oo6rlk,996vz5xqiv,32lplj5a0y,l81im0hy3,c4h4hzxlj7","si8vt4qr9a,p124j63nml,jtqxhpuazi,pbi2uku6pm,q1rioppswx,19uqeh4kuk,j14hedgpqh,bl4f7gih4x,3x3d7n7kpq,bj08r5quk9,k7d6yhfd31,1771oaxr0p,k62lr5pobr,c5uorc37z5,53zpuw0jpv"],["1208u3kae39,q9l6ljzisr,dap8me5rq5,k2mp4jjwge,wa7byme12w,i3e7jt0ggv,evaq065nhi,8x8rs8kurh,hxihccw0iu,5kepqvog5p,5ow60y44lu,k19ybwoli2,kyng07k2j7,4pq54f4km1,lmh7hfcd1a","g2x0lft8tc,ukhfklfsuk,f8znpwgy43,cguusz2s9l,x2o7ko1wi5,4jtyuynvsm,hknxhkwz24,fv64rbs8mg,cu7gyvnw50,6yti5msjwg,a88fl043sg,dj638puel,7ezg785ga5,b6peazqb22,5v5te3lrpe","101g8dyb7p6,lm2266qmog,ln95gu8y9t,agfmt5r1y9,g75mjgz01i,1nzmtslag,g81fuu1lzg,abbr7ein8l,ixvdq46wi1,21d4uloe29,h8hr0ww1vv,dezgdbkz65,imk4qzjfli,9iggin7g72,a3auzi4zrt","o9lb5bg2bc,b0a35ca4xq,ig9ar35vrk,zzswpny9mi,nglfdtaluh,69q9sv1fqy,cfevgm1lk8,3ukwl1s76v,gdmsx06kem,5j70vftk9q,54l0sifqil,e8o5qiobfw,2p1cihnrwz,fes5pm3cm0,a1cnbtd5a8","vamfenucwe,xwo8hd0xf6,789i34xkvm,nzfkun7vh2,13sukyxepum,ef6btlw6n0,elxvi4wsmt,eylly9621p,bfoxhylow9,3zvurxi26h,9t3i9avt99,7u8b4j60v9,1978va177x,3dzr23mhsn,623jnqcr0u","tg1vpluba1,ljtfkj8pxb,jb872ugg1m,eu0xl7yc3n,xiar83fnv0,64t09vg3ij,c03fwao5jf,cnfzhg6osg,9k0ihpx5pr,3gfer5pkyq,kcz8wmdn64,gir007f8ec,kjgplqq6kd,2beh4thnme,dy1hova7r1","ry7r33f4jn,p76cjwcssi,4ihlr92fmp,s3m0sa6bp2,wasb2pb07e,6oi5yu0qx7,juufpddzy8,w8yfkwg4c,a3zc2djx1y,623ftl246y,2yrx6kpe9i,as35aquv0w,bu6bntua9z,6cejktn8mx,g7tz1aer27","bx69crdgy3,dy58vclrs4,sxjajoo9j4,yfk3xcd57a,witus0wwxk,b6jdb4r533,gkorhkms82,7kn1mfx1t7,kjo3ak9fja,8v6j1awt17,jeuf32h1xo,3ygqomxhns,4f0wfut2an,dvmdbthx25,byludmjapn"],["dfiexkbqrj,ioluac0wsu,loxl40yixv,nlralha22b,dah9zg04oa,aai46jf52t,8212x8uqj3,67hxrdeohz,ggovkkeius,7y4oemnzut,4bybqkhubx,3syck2ujh6,dm4miizmko,31ujc6g5gv,lqllxpyozr","y9ubifn1xw,v8jcjxuyzy,ne54ajlb49,svqoex18o0,dsgg0gkpe4,jq9xfqdvr5,1oaaxzopr1,b8ht8wu17n,emjch868st,fhuonqae0l,76qa1xat7s,ciaigcl0s2,17q3m2fr6o,476145xt4e,lm9l0mctr4","cikxrs5dog,k4nzhbda3l,moo8mja2v5,10eg5moawj4,vgasd49u6j,hcfrqsa9sn,5qs89uopzo,fmfuuovgfp,l8m24du6pp,biz4nej2fg,8kwunchhgn,ihyutarbr6,m2nvkzcgss,5el7npjpnt,6slnf1f1li","p3jjxfhqoj,dgbvikbar7,yzfexbp2sh,5j5q9c55gl,f3llekyd37,9uc7804l5f,b5k1zz9cuw,kiz93qkma5,4md9cyarss,6olwllthvn,lk355o3z5q,6w24kkzkz3,42b9cjvo9v,ejxu1i9ufp,m3o5s23j5o","1315inxddn4,o6nkuzdill,100hlyuw3u0,q761yw8zlu,unfa9i6yeo,509prpl4wn,9iqwt52j9l,m0ulz0gng4,46hkr7zz4h,kkl2qv5rtr,26fanfol8l,bdrwckiuyp,4u3h6tydm5,5c9tfb229z,85jc9i001z","nop5j43xds,csrlxp5kw8,q1jdteso2e,af42745vml,9teifw4x27,5i6gxp59u9,5n6a7a2tpj,g1oyvp513m,ds70ar4doj,g7soe9pu46,il8695ya7v,28zyol7364,eghr3umska,95usa8k5gi,61h0f8s8m6","c22587dea6,fj0aarcuzh,lqap8u0pgr,65uuon03rd,oxf8zg6evy,alifr1t23d,az1htkb7az,1ue32xhk7t,2grxpkk6jd,ik8r6qvfyk,8vwpkc3prv,r7edmpbdn,gbope2cbhy,dzfki5ty9e,d73r9cbkzk","b4egc9emzx,ysmigysabj,9tcnxfine1,opltbhyyg1,xi50331xt5,66vbgzdu2t,j4qzka97xd,4lte2xl9su,ark24967tb,2bg3mtqxt7,2c5rqc9xo0,4mgppfwclx,ew3i9ntitz,c85l7vadcd,4cj9kfhoxq"],["139pdy5l620,75j7vms0l7,i1v2hk6yhb,g1l7ku790b,sbj8n7udz9,jb1299poa9,4w6pgp3yde,isz93l8bdj,cionuyynyy,luuh0u37bg,f4u182kqb4,ddoe4rzxnq,kzbhrczyoj,85rezzzsn5,joxpn6dout","66z5yc2pc3,atif0mw30o,8qijiipey0,106n6lgjqah,m900xomxl4,hu588vprfh,esdf2oo7nd,lspowuv9pj,3jghlbrh78,cw4endbmk,25lgjhnurk,bwns91mydi,j578vwqucw,b4so3sed2t,d7tcotnpjp","dhm6ond6jh,dr0dvf8u75,13k2i0tg0w8,lp4r278g1m,w02o12vsop,lypuarnc21,d9vy7iruvy,le7obpi0gm,e1nyupawvv,4dgbo21nbb,7pz9aoau7j,91h5cp3kl6,cnc0n72eex,d1iat7vtb0,ifq7dtag2c","pbhylrlj9i,s1k70vmdp1,k2djkocszj,fbzkl6tjf2,3d7g6pup9a,iq5iimhotn,jqj5l8whmw,g0bbtubwfg,9l35e1fdmv,kfmm01htop,dia5023r2p,a9h5353i21,j75zcarar2,hmxbz9fvmp,dadgh4wi5","6rlbepw3fw,anq6gzt8kr,sijzelpwu2,pj1ki9vk9q,pjzhn85ywz,ki9f1gshsk,9v4ntfjha,1fmp0hzsde,gn8ph8mfbc,id6gujuz2e,afn52eoflk,layy8mw4vu,e6jlqe5u20,hf3x5bv719,8kbuj0h2b1","120q03i3kcx,7nish003b4,kos9pzofo3,5f88nqm209,irgi2csj6s,jxqmckfoa0,47c9ihvhut,5uyggfgi5d,4n9dvxhgpe,5wsnz02qko,5w53fq475t,egeothsm78,bqi1xopawz,es6yt2iiw0,cmb7pmugis","gy3c3uegzk,cg63zj3sm6,qfpdnq9o13,de2q21a6c9,11ju0bj3e07,731r1crdfr,3vfwlqx0bd,1awwxnhket,f71l18k295,hwz2nf3p8k,3wiepcly6w,hu2krabau7,df12jjw8of,kufbz6h0h0,4wjgyf3fx3","hugu2jv1j8,ia2kncxyst,18v9tew10m,wdiivbhjng,jg48418np1,6emkiaqrp7,b787uieytr,kxbu5ivc4z,gzp0chwhhz,l0r8ae4m78,558nrx2d2r,c861t4299u,h63a03skm0,lxjrbvu5jj,glwgez6rz5"],["47ogs4k06t,grqke30emn,flys1y8pyt,10bkc442tg0,to0jqliuhl,34ra0md63e,2fyh7ldkgb,elahe091x3,31mok6d3j1,ce3um93dp3,cjz2eel5zi,523mvzur0j,3g1e1f430m,6s0zuvnvl0,grg7uq10nu","wmlg5nztw1,vn24o1nf9g,pcaatsgkv9,wgtwunsfa4,jjo4841085,fcjydv2lf5,jbse4jyxkb,d66fepetl4,es7fzphkru,2wda3v0poc,8231bbb0wr,ic32gswspd,666tv4cl8b,5ncdt3klrs,h87p28mfe7","jkp0zxfstz,wtrtpoac3c,i23tin1790,10hw0sl0xdz,6tmflwlqa9,l4vis5v0b7,5ragb8hqy3,4kte9vabx2,li5jn0ce73,2chu75s2dy,b476o0vquh,ln31ksit76,2lzgwevz21,9khwddiqne,jj62hvufiu","cpr1my4hz4,pxetcmeq7u,guo478yuuz,hvg2tpwbnq,uyhe864rir,4dkuz6rvv2,easj6pp67g,kt96thcem2,6cp7eg0cz7,7z8es0btc8,m2z97xh7j8,ditagbgvng,9ws4yefv1l,l55xybu2ts,bca90hu4ys","13d03cbgv8h,14zug1hjct0,k8wooiderd,po43nx7kd5,utuwityxp7,1m19j0qluy,14wxgn7fke,bdrulk36zv,inp8fsa0no,jei1wmkxp5,6pqpychwj8,2mpu28in74,dja93viahy,6ad58q8adx,6d1udj332q","maxsmezrko,n7uraqyjb2,j58ikca9ea,14b4ezyifgx,ofz1yrogxg,2kekizif2b,8eqlvz1yyd,8zuw7rrw40,1o193kybf,2rcba6e2dk,71kuoswo9r,bjwukkkzln,hscxz0pu2y,inkte25783,3xeer7agj5","r3fvijdep9,11w30ynodgq,dzhdq4fuyh,vvfahvn2vl,3v3ypn5tuo,kn4arh23wd,ixh6vgoy1n,7ryzd26rvs,47googppcb,35rafrlxc2,izc5n7928q,emo3vcru33,i84fvfokhf,5fk5nosh5o,kxmcp0awjj","ksocyhxpxd,theyvdcvo3,m8htinrto7,j7m43v7qcj,n36zonnq60,3s2zm4wz8q,8gtq737sla,8fak6f8k98,a0jh4sch6r,7tjdsmcn8x,rhw06iwu0,9u8221tfcp,4sxb429nmq,a7y8x9hycz,3c6sxt1j2y"],["stgmvetdsl,oshxqfdspw,854o557g3p,du17nbu8od,hjlbhs07v0,9uyymiymm6,3ffb4hkoiq,gerk2j8mlm,8qx4t3l77c,5puvsyutcd,j3illjf0dd,dvrjqg6doz,5fvdbusr6l,3s2c8y6q51,1vllgb5gp7","lfpo1adpc5,e668s3xyhk,y2f6mw7vwp,lyor0d4obk,dr5kqz9sih,6nyo2tsytz,iii2nnjjbc,k5i2nhjcwi,8qxmdpve2j,czardejcw3,eg01ji96hq,62q2nr5sv9,6f804lw6v0,7gfwjhuinc,21kydkctxi","111tkfxo68m,n7k42xn570,r13rewd5nx,ar27vuaug7,hr0cwub4dv,i96jrbrr9k,ihxicpf8qz,f1muklplso,a1fdxl5vq5,b3zxg778ff,jc5pj24f5u,2w0s0vux80,6vdtpnr4fl,9pgsayjcfw,7u8toxff10","q9xgi971q8,q0bfucmka5,cxxybzay03,h83r8cjad6,xm22m7anfn,e2b6qqm1ej,a42y8vtlvi,3021vsvbz5,4cgt18qq9w,hwwpouvy99,20n9pmuwqv,fb5hhcd2xz,24pt18ibiz,2lmseojppa,k5mvjsn83z","j1oy2es85z,dpvmbx76yu,r98xq45w68,xkkac28v6r,nd3nepnpi3,6io6y57pa5,2tn0qxnylm,b56hc6zogo,824r1u8wa7,4nn7dmqq4v,6k01ayujpm,in2qpr6wz2,7yitydkgaa,2q46wirbhp,fe6s2kwtf0","9b1p8dezrp,rcqv4m7zjz,d1ds4ojrul,gew3jtrz7c,nomhcnepxx,k02zmeeb18,20b6r1o4qq,1ofkq2h6mz,9nx14id1su,8b0sj29z6n,ejeexq19q2,8988bkcq2l,iakxivd844,juywdvxfjs,34eb36pubz","ee2u2m3lyv,fre3i57nmf,l8n23c4ict,gg6y5n3vd4,nfhh933udv,cqiton6t6q,l3unjtkl82,af5olas9tw,23w2v1tqyy,9bn6ku6bfd,3ikir84et0,cpkscgl2i7,54rkwtggl3,epxa8yvrfx,7vwrujxh0t","rqv8yfg60e,82r4gp6ngr,9siagnzmuc,pe5woocwyl,n30mf1hipr,62srsevzm1,g9mftsst67,iabrw85i3j,aot8ggu1kq,81r7fbpq7u,7lkzrvtpz5,d158anuke5,6p7saejp60,8duyqfc575,d06q2rbu61"],["c06wcmx4u0,sjljw2ft1r,myeuszrf6h,la9me6lxdn,q5phjhls9y,d2q47n1zzu,d5e8me8cyg,dstk95usqg,5hucqouw54,f9wt743bmu,4418r4owys,e2vjpryn5y,3wfc6equ4r,j3u7yw9qcn,23uu9i7kmg","chhh66n5f6,le1jhs4tdk,f3q7bsxvlt,hcbr3jkoru,11u0wiolv7x,g0qyz7sw1z,lry4fgp0eh,itvmgsvrso,bqg3s34igt,ljc48aysmc,bbc77xq4hp,3q8h13kdul,85o4jpyt8q,lufnkcq93i,p21oczeey","yywyljyzlq,10c55xaral2,11ax659hq6z,k81n529ijh,w3ngs3gqz2,k3djkz9u52,3xmpbqkio3,687uexyiir,8lbtuhc9tf,c5wsi3iz89,lrueivv6os,l2hop2v8dr,98qrv6z6dy,4gwsqo4ve,khyypexstp","d1o62kz2sf,phna3kbmg7,bnoxlidz1c,wx5ls7psje,mngvqkahdi,i66litdgk7,c18e4gu2ly,1hgvfk4bwm,iz2oxltree,bpseo6du8r,amo6tb6ssl,lt9sejajnt,iqrbr8d8b1,hdpw9iw2c,30d27vja6g","n3qxq70yii,ztj9wsfgw6,wmouk4gkoh,mj5j7duqy1,udph3plap9,e3luzdl6zu,4c3gsl8ivd,dqpreqnxbx,jgqrm9gsgy,978hhrvgyg,crm5fz8hxa,kd53pnr4ie,iatqpzv3t9,eoywsuls70,m0js13eoyq","eoa09tgsgf,iavyxs3cbs,10baumefm3n,p2m3me745a,y2g2eumw1w,cmlfc0kezw,7az5ktbosv,jys1mf9kx5,53yshxz543,hzh91y0lpl,f0uzavkpyv,74iwyybwjz,fqc6c36vi3,2erwj6sd44,espkcwb17b","nagzso2dce,ybiqwzfiv1,st5ce1wiqn,kth0rllnec,ntb542jiyv,k3plob0io2,lib1y95zb1,g2zpw6h8nw,ks6a5nl7r7,k608jkc2lg,4ybi04nkx0,7hi1skoayx,jykd4o0tk5,6kdqju5rln,f5lfjj7my0","iv83n889pn,v6rbj2hbj3,8p2obkib7i,3ktogj6py8,jgfzkfztop,6ocf28xone,5m986kg93w,ft15v9yw2w,l5bgi0clrp,gsqyvziyd4,e698ey8w5i,llwwha4347,871yco426s,5j1jmt8foa,5r6qcdo0mt"],["o0tzptdjou,6ph1rgq4fm,j1d6omw3wo,ifw816d12o,qz8h8wy41j,dx15cv3g8j,41mr63ymgu,dradx46fag,40pcykwij6,fp83kv884j,kp5nxmgh9d,7310jtbfl8,ekhpkg9t8p,at1i413u98,ctndfl4yhh","vg4pkib5wb,wp8ih558qo,jrjk5tu4iy,mvcragzqkz,dz5avpyvw9,baf8xudndl,gd4b2ov1lo,405mzusoyl,5k2xvawmdl,ax5a1dqvir,lsy301fied,bh729deqbt,im3y4lc9lk,19dpvcw3p,4cptd63jct","tlenixg77v,gevwkz5nu2,f2m4gjt35n,x775hp8niq,lb4nm15fe3,62262tfim4,f05qr30w14,8ewznm423z,kcq3f7eckb,hdr7hyvvi2,arzc929h1f,hou728leah,8kgu0didic,jy00x7p215,gq8ytuevkg","j7p2eo3m8b,ivbsabhvnf,o4e22f9x56,ispltby3mi,j35m17z6fb,9zjpn6rk31,8k36ai7s3i,hagbtx1qqf,d578ql7hdk,f7my3xec8q,7iu2fu0tpt,fsfbf9gdlb,1g1dedf6ud,i5eei1kod5,9e9i4nspyz","sebn99z1v,7j07c6e7z7,wk7mvki2mh,qsj68ufl7h,s980r2kwii,qeni1cog4,7acak65905,h6n2wql2od,75yb570amy,cmspullw9s,56evhxrwsm,gz105656rq,ejcteeevuo,5ne393gelc,1bg8bchguq","rijaxppb8y,jk9kybcvp4,bg31bfldf1,qwvg4htrl4,rj8ol1uh39,mq9sxy4tw,c7imxivzoy,dec3ibimj4,26wpzut4lh,m4npksg0n,hnmtn279ws,wah8nwjah,p5c4nbqy1,l95lgz5b2k,f4u3j7k6gv","io0vkhzoj2,zwn8snaduw,h0pw6oj13b,xelkninwnp,rpzpn820hg,1e3v3ift8v,wet2fuheg,apdsq17cub,i0jeh68yp5,bqzpodtetb,fv4t8kf1s5,9d02thndpt,4x38fbzcrm,jpj0ixp4mj,vjfm2ziec","xvouler2sq,liabzk5a7o,wf4w2phey7,jvfmmem8ih,guvhiqbrq2,8lsmu9drbw,aqlkcacmso,gtmtbgitxt,6mbqucbldi,d020tugm1b,eur0p83lw6,b56fpyu4bi,zzvtp9a63,47thab779l,5j4ziqkz5c"],["tmbnzko7eb,oiio5wfpsp,l18pv6qs4f,grapbqr1gm,t3n3xeexj4,hjdmdsrkpi,gpr9rofwmy,dlnvi122j8,1q3n2mzf25,elp5wp1oqu,lf5n2ifs7c,6z8pqqlx7h,9er7xa6rr2,jdfvfqpn03,jwgi50hq8m","x5h8xzvor8,odoalc1xq5,90olkkl0dx,5uiae0uhec,rpbhltbx8m,e7k3z04t3j,3uwp4tm5zm,lh1ncc62zs,4kny26herl,fp26lo01fe,8dlr5u9rz9,358b3akrm2,3874tfemdl,7al4bkax9l,62kooc5s0","kzzyqf6hxc,rga3efxk3h,mnj66sg0n6,s5vra4ux86,ylfeq8kfun,f0moagm302,9lbrtfll7q,2w0ir6bl7y,1gk24g6ywn,1cwiv7slgr,b1dyzea782,keder94pvj,cgltvi17e4,g88j1zk0dp,4vwdvpn7fo","ndk05f05s6,w8sigv6zsk,jpe591j9mz,jv4g07i4nf,vy9b1ax3bm,6g5gn74kei,bib4cwyl96,5o1wp38ydq,8x2bsyvljg,4w3b31gm3y,j8o9iu1b8a,kuf6rzm42t,3bui7clkik,brackpbgze,128o6nk7pg","gvu9qmof77,1682pqvkjjp,ih4d6grs1p,k91mtvvmyc,g7engrqjgi,11q5y14mfh,m5ca4c643,ewgzsmf12b,7y5dju00c2,6vdnx0sa,jpy8xs5hsb,c8tt7u3evr,emr9jg12j1,lifhd9ip25,3q5ynss5aj","9303n4j9vr,aq72leaz28,3you6zgfj2,b52be3ndnj,cpd5stdc9h,ie5et2erxd,71lhqd6a3h,e61bcf5d4,leadnwxir7,6frdz9ojq0,1lqnogx1xp,1spyr94a79,qm9a4wezi,4w6o2t2epy,1bgbtluypn","150v42tlhee,fucc7zpltl,jkk0jiacv5,eyo80i4n3t,hwum2ml7lk,j6z379aby7,aixhcurelc,j3dk496s5o,f8strc90dk,j1golhwckf,h1f1mqaj77,dpvm9yz0d2,fq51pb7zri,43gymyvd4m,e2rv5cafh1","3jpg9o4yma,rkdytaw8iu,oaj9zj7wco,s1oua5a4wu,pg4r98vh8c,gvg3xgnrl,ezm5mq317u,4b5jhas3r1,80juo1z1jf,3b2ses3d49,cptzqsb9ym,af1by5ekv5,3ysl5ecrwt,df9a9cjxul,kqficj0fzd"],["n90o99ys9d,1327d326njm,ay93ytktbv,k5h1wbqdgs,nhs7rja3rp,l8l7zzyme6,lxljtc3z8t,ieitrcs4g6,7fkx6l0fpn,h9trt2kxma,i6dtu5453c,z1zmxlb7q,dwnxis9ywc,1oqlo06bc2,au4quhvu28","n016t8dgkp,r3bulr4b9p,46wyohjiax,hcvwkxn6o9,s7fik3hzrs,8jsfsup4t0,gro088uw35,j865em8nwp,1j7021eb4,ke4ynetxvo,55f6bgubh2,3yh46j0093,duzg4n8pii,jwvjyh3gc5,1k8nmuz7nd","618rcfagft,ql2ol225ja,rstlbqzmwr,efxp4hxe4v,h0ozw2f33m,gz1xaaj1r0,lqyn22ma3d,gx8u2um4q4,jftienhec6,brb9ne6w2l,ccjoe0d5ls,9ml9nfznye,jsr4nwhi41,hk8rtfbf1v,f0wppzo94w","oglj2fjs0v,j6qbllr3a9,i2krl8kcry,a5oav0lhpn,mt1smp5plx,7jzyirm7sb,7favyf1xhh,ezxcrkbj4z,4agiykq8em,51qfoq73gh,cd764solcv,gqrt41maal,bhgdbxzsff,bkjnlb09vy,bq5fw7q46s","plyh3h5h75,d5xj3870o9,ej60rk522s,z6o5ou6up6,mn2mvn8dhb,8n1z3jmpiz,le7g0bqsa3,2oiuwrudkx,gap6cip0kw,8q5462tmra,3p7mwm75ki,240r1pqqok,5n2tjmnp5l,5mteh2xqd2,6v9gz9x3o3","bibbraiszl,841a0smaat,16khubgrzll,7rcep3nl83,s2q91gqsw2,j6js68ehs8,k8ef8yl8qc,lpl32swa58,22miog59xm,7qto3s7z7u,iux9xfyeog,1jgugfsy7x,6g7215mzy9,5u66cmyu65,lbqvjp5wjz","gzxo0wpeh8,b0zdouxckl,izue0qdhte,mi7wmo4osv,i33rny6jal,867jahhp2c,24xwsy96s2,glu5okut14,d9gbqsl1xi,gz1lluasat,3s81o3qd8a,6rj9bahbp2,lrsx50fvsb,2ia0gmezd3,c9k9yilc6o","ca84lefg31,15neiv17l7r,nzdfxxzo56,7xwl919xd6,p0g3y1bl58,e9nkyksum1,dkk39q3bg,l1c7umi8vc,l4v99rw6sl,751qfm9tbp,bu1qhy5hef,7vq1w42d8l,grpqth2i0n,9ti7gi1vqo,iapg2oobta"],["pojy2atzhp,tviw635z4v,gwzbfawtx1,zvp4mk6ely,6j2oo98l8e,7h9kmhpjng,9yywyjm2oc,3heke8g0f6,2f87may8tc,jzpj6517i2,k3cvz38nl0,8qza2lse5o,cs9cs4o2r3,hrqom3sa9b,3hi9ugi8ro","inp6qpd4uo,10kv1cf69wd,quczqbdkj6,olusahccsy,8n7skumdqf,21ph0gvixj,4lgx01bwv,830p6dlxas,9y65y0cn3a,gr33wyn62y,25l5cwks3z,59316nw8ot,c55cgmbx31,4a7p5zs9fb,ev3if4gmds","14rqezx47jz,wj5ucc7lsd,y4d5h2sdt2,nu5zp1ejz7,qqg5r4l4tb,2y19wt9e8o,fp5o72mjnz,8jp8keqt5t,2jdemtlle1,hrtnis29hl,hsh03pfawc,knzvy1r05j,dcvvodabfi,ecx0ht13xc,3f9otjzl20","dt33f4hwu8,11j773iw6u3,9xihqs5ez6,bauyqcendo,dzhuezd9wb,6jwhk4u6rd,2p1kf4de13,7vb0ear406,8cpgyhhit2,hu3s2z28or,egibefh9g1,7llqn6ccgd,j0r53l9bso,7vf5c2k6tu,561f1ntam5","lw29smtf9j,sdnrs24v2q,l4579jumcn,u7rmcgnyz3,w9aqxljbjj,cgz1spuc8t,1jfj8z29ys,ck6h2kqsa3,4epk6mlpd0,2hqw96fjef,jwtd6t77dz,1c9buwyq5t,hqats6iv9i,br86iu3fd7,8kzectc6u2","icagasppxh,8dv5wxqu24,eyjvxhrrdl,11d2mdufchl,104trfh9zkf,c3ckmt4sgp,3afuzj2moe,5s9wtbox69,49pavgphp9,5xvtq1axn9,177hbgfrop,i5etdegvy0,grpds4ojbj,4wgitz0r4e,zus1hmexd","qonzwzyl7o,p1bcqdwyrz,eayolg8k6u,rlhd10u7k7,f4x7txi23d,5r4hypbo5n,3qxlcx78au,14pghmfpz0,6g7gn24s15,ksl99je750,9te7ny1lcv,l5r8c8pcke,9ytjvea7em,aknnupso4a,gmcv3jfxnf","v9jmmsm4od,kj3wu8mt2y,rddwfypl0o,ftcp0k8vbv,tf1xlr613g,gps7n54z31,d5c8ffpfsh,86o0pu9aps,9cjg056oeb,2ucun1l8d2,dz1bv6t5n4,d1vkjsckl1,5xj3xbaoom,kr6ouhupgk,cxtwmggqmj"],["lo8qr1lcp5,lgtwwd6x95,n4tcixofej,g2zs92bgjz,uj4eish9le,bjwwr0n89f,8265zff6tr,guf2sq9kx,93khoofzs5,78ooujpsp6,868wwpar7s,ikrgifbapq,frhcv34199,eiv178pc4v,2tmavfp1s9","11p8hhagfo0,wbmb3dz0a2,nlk545nes9,15im4oku4j2,rro9d014dt,2qohzdy353,4soekoajpa,94v42n1saf,1s5yb5oo76,fx4zhuudnr,bq6pf8ffjt,99hsk4ukua,ftl69w53dh,8hfwiiyeo7,6hhb21hac1","ign62yodhj,e1v7i8of8l,tb3duscy5q,v1vnjwuchv,sfdoveg3kn,64sefkb9md,iqvsfwy4m7,ixi10pkiwt,eyzydn7lte,apcf70hxkg,90yw8rrmy,gocf9a376j,f0z56nx67n,18n5h8iw0h,1fhvbdg9gf","oabcokc3i3,926rybf33e,159u10tztkd,y3rkmu67zo,n0czt90ywn,jr5kmd0aiy,78g9c9b5j3,2i9hchp1er,duglgv5loe,2ctqmhtmra,fy4m6osnh1,iwdn8721n3,dd5kxx448q,f0silor7o9,cwfpvllaj5","wf46sue0y3,gs6dgkjudz,s4qski1g5l,joj1jhqptu,cx464qz1u6,jns20xrdsl,i5rjdbp0no,9pbc3kcfi4,bhaaek0tq8,32f54716b5,faxh2k2ja,louuiezt99,b7b8ch3n19,h2iteu4i72,dqhehtj64c","6litqelg8f,rn5qy4nhuk,qthppaa5s5,l32z2ifh14,8cy8jlypat,lmuiful4sk,7tjfamgpur,a566s3b6q1,2mv8ohoq6m,k3aeoawvk0,huhecvek3l,fufmbn54cv,gt1loy9z0t,2jnc6pqoq7,9t2jmji5zi","f60m6ns2s5,hdio6ritkn,htmmdek8x8,v9nqg4ebio,sppb51gbc2,d14lg9ol3i,cfl44jj6vz,8l0ovwnjt8,afrlirnf01,guxqrngip2,gp8mynee7i,dpbit708vb,5zss15u09k,a6nswdjiuf,hj8aus6umc","dgrwj0ek92,175x8m76h88,8rlqvkkc8f,isngbv53ff,ou77azy9wb,5vt4e6aulv,eb81nissa,j4h09vca4x,bo7w4lmdto,32twwnigup,iwdhfczow6,c5lhdyjyc0,ai664bkkgr,9xgp3nc1rx,da434dqgj4"],["kpeqewx5l5,11mt8qalgcx,fhsu30cl97,mct81ss31j,lzajmo14fl,i95wb98jla,2vgr2au0j,3g52blhkib,7msd5dlmbf,h957m4t9l4,dyc4z0mf2b,73p6wx1u2i,4z9j346r0j,3oasjho95j,2kqpbpg6sg","lj4reg0r28,m5syyyd6ng,9zq6doi77k,qwcanxgokl,mztgbzje9l,chicm7aoo8,5ik4m3gau1,7wi9oh3518,lrg38mub69,b4jrz8cxqs,622bch9jp4,919kzfx9ko,8nji5il8el,9n079q1sw2,98qisyh53r","551iulhrmg,wgn06b0z1c,imqtjizqq5,isah2p85nh,ka7i2etkx6,hpxl6svwtw,8zbo0g784j,97dfemgb7,496dzjt9x9,2pbr93n2ek,yzhlv0xf6,l47gbgwm8h,isbcegbhj6,7zndyhhmg4,cfig4cidmd","hn0leti3e8,gvectolcos,nc5bshzaxe,ij7zm87ktd,1k389fqtzc,bzoe3xvyvc,lelllfskko,jkb21ord1h,do1n71xd0j,4hvxey2qx,g96pqrldjk,b6rserqo95,h1zex766fo,78aiohqze6,cc48gq40v1","pueq5z2ci1,rcg26m5qpm,ku5pkulugm,r3xoyun0iv,irz50x7pl8,7wowpzf314,8k0i6os3fe,3449w6e6ov,9afvw1qceu,5mhctcfzuk,28q7jst79o,hhvsfcfsrt,66tk0xwvfu,4i2fsm6hfq,k3smu92euc","80w62kzflg,v5uwbt7qib,wj4cascn9g,d8yb0dqosu,5bzmczvmwz,fk518p2a25,ihp055mkdo,8ftzywxiep,6xdlvn3sku,lhq3xcy70z,ievz192x0b,pimxk2syk,hk3mgcpfmk,62bnkrhb7c,a72uibrmc6","tdb5oumb7q,8fzydqwblj,ao6gw2m2mu,9vgvvy8ak9,gxeynugw2y,3puqnuxwj6,fkrjrigwa9,7x0cro4ptp,k14mkemrtr,6c81vewdx5,1qq52n9u7d,fhug1gqovu,57dyvvmr3h,hvr98o7uoj,ex2lsl84ge","ilk9xu1c5y,ztvwi2fah4,154dje33apo,h1s29xdw44,lylpomd3gu,4d63jy51s3,2avf7c4501,lnnre5chcw,9yo9h0fwtd,9lhscvdkux,i6h5zjfsuf,j77mo1wrcb,6lxqmhrhx1,j62fqyg1xt,izvmrvdlmh"],["8d6a2xofpr,dvvgdgk8av,mwcf1w4ftb,g5x5s3kosj,toe6912bej,6tasizs0uf,74e1zufq3r,g4my652vhd,7d7z7cc49u,3alo5n5kl9,845cdrawu,m0idb5mdjn,gcxuv8r9v0,944w2kxwqk,bulgu3u2fx","u28e8yaqpn,138li6h4e42,ge0ouqqytv,qrzzj7186q,12e6oydeds6,8w4gtt4uxq,47eq9zrl13,5ix9r8lq41,ijxtd3jv36,iuiaed0lzf,d8h4ujg3wq,jb3d482lw2,eydsyzmwmz,hjhmvqin9i,feo3uvan02","st0esdxgc6,jhu9brkaju,xqsu3a5s44,boyqwa4kmh,ij2rusvm44,ivl2weg8rs,atbvm0uuch,23qvaomgu,jp4lpy2jmn,f5ehldtxdt,vufo39u0,6omuk6pwec,27r6se0w60,25urad61em,jf6i19macs","2o7huosz6b,zhta37y8pv,pkdwqfyuxm,ju8c5getlh,jr597w0v2t,1wz27k238t,52b5v8f4hh,863gshhqjc,gi8mqg6z96,7z5owp9oao,ji163uz12t,j6qja536o7,1hwh4wu624,1a2ihj957y,2j3cwqxlgv","ibdrqw8grf,j2gitjet31,qpn53qc90s,htylpo8cy5,vllhw6a5eb,7ue6rhy2zx,f706aw8dpz,es0uxd86yt,gf0idwgz01,5wfoeete7r,bc5yud13bo,l15hmu091j,79vq8348t7,356jh7etdg,bbuwzk36vn","h1m28rcel7,teyk10wlef,dfrhprru2j,qa3co9m2hj,vatu7nj5yk,a0kpcwt6o0,pd56vfyf,m0008z8vw5,6485bogxhs,kzxddtrexe,ffqyhdphos,a0s66az2k8,5kdp22ugci,861q71423w,30wpv2ze1y","2gahfqvnhh,es8q4mbvqq,vi7a9ot2r4,9atd3vke3y,rm3ihg62kw,kktxksaqor,i98kbca6c5,l6tab9jjmv,l2hlydwad1,1k14k67k5x,d6jwr9vlre,irvb32tr10,eyn4kdqpsm,14wf0evd2z,dpsqg54ryo","zlwx1jmk2t,112ak47ods4,iyyw9pwfz1,k3n84ipyih,v8g8zpi632,ik4dnk095g,5x7g4o2zkn,63udk0jxip,amns1hgihn,bu3meqe1v3,8a2ynmfv5o,761ea7ji96,cu0oqme376,55co81nzmr,2w9rvwr5vt"],["pnle0mclzv,fqkl5ljlwm,x88eb5gou3,153oeaijy9k,qar9z198lv,3jk3qfdvoc,1s4mwo6raj,8hgfocp1ib,25k6z8e556,5o1jaejfjp,7fsh2chcoa,8ya9yxj11a,76sh8g6o44,97w6g8w7j2,jrpdsdvqsc","fuh8vugeye,pqs1e310hf,d5bwvav5zc,u2455cppqw,rkei80dvmb,9ox36bkas3,815g66m9b0,g75pkzp8wj,gc3cilqta1,glum3ots0s,gpubjcif8q,5wlxqr6roa,avj64egcuf,86eqcovabn,4ji596xx5","bia6m9o0ti,8u96izvb9k,4k63pqibqf,p5g2t86q6r,jrwk2ufc7g,ia86643z6e,6od2mxhu05,iwna4auktb,cegr3k6bng,jor64n2zb,bepdjamr7d,4ox9xl1890,1r95t7cyul,culcghc22p,10nww1yf75","lflwy7kua8,11p3kcizeev,js96q1pl4i,jtbzajib22,kxcs5gwhos,84kx18q256,l423tr7ia8,iyjudnaalf,iuvgjxihqh,a04hyqgvq0,hske3lkiug,f3w9zfix11,3f4f5rfe5u,bcztxl65tk,2m412nyf3","vunujjwpil,qf1qk707ug,loicmswjpg,u7xs4rhd05,lt0krs952u,290qnh67fg,8ineoezrr0,3ixhgsjgqk,1kkvg2ahmg,deb0fmon06,2azxvkto0b,lya3z804pa,lf2q4s10ll,drc5e5xai1,ika1sjwl4y","x4a75l4wsq,onto1kep6k,whxn7z50fg,nlzl2b5wyt,c6nq4f2xtt,ayt0ds9qjb,aclvimsysk,aar1wsyzkw,jsyww89z3n,glp2cfub4j,adn9mxses9,ifqscyhig8,1sk19jkt7x,ahagx3nh7z,zjl1kbyfq","z1a3ewrpfm,g0z7242ari,mo9nx6t3fl,ax72e4xy1l,uqnnqilels,10y4ce3e9p,f91nxfqzh4,lwj8g36t7u,k8ekc2y3pa,a9zwnnm4q9,24u36az4oy,6yplwy0gnq,1vl8iq8nyd,9l8rc7fyms,dtbpomjuib","yrkm78rx8t,pkequf4upx,ov80qxzrji,148d6lnqu9d,68x16cqnnf,3dva8854sf,ctli5yntbt,5kxtng0pv9,k72g7xrhh8,35xqdn8gbc,4mmhvl15mc,fxr8069ben,joz1ntn5h3,2l93nuvzp,b04m45gfow"],["owsjmhdgcg,htow849x1e,hfz9l6jdrq,zsnuwst77z,sx52r4h95s,5oj6gh9tcu,hn0gam90vn,lfwrpzavxy,1pvde70cd4,dwovvhiek6,8ssp671l0x,btthjjb5w5,ezmlpff3np,kka5rh9nr,b4p1k7k4o3","429975y11m,clvt99m6w4,lzmpqs4low,mb80sj2lmp,pfqeglhslo,2l1jdo1biu,9r3uhvz248,56rjvqc6lu,5mmyzxtq8e,3higy7ggub,hx9ectbnm7,8ol4q07iw,f8on0daamd,3k55lzqlt,4qb2y3c68q","jx7bxd7xkh,sgbc7x1zeh,kqol38frny,rnxdum719k,gmancy1cwx,b9knufz1ht,5y99x3rb2j,f7hse90ulm,iygtr4dccr,661gudk302,ixcnwnihk8,jvk62ugqib,hhp7r6vbn1,9f2c1diip6,crsgzzxtf","rj98stdv92,a8lr1ae1id,usz84pw3g2,t63q7606za,y5kiwensx7,kn8760hq4,k1mvfvux9v,kuxxq790ob,bqf0a9di6p,gmrg40is3,2oieb3qwv3,dj3nct15uc,lyicroiv0w,adb6c9q4mw,dc1zi9lm7s","iakohj7uvm,h9zzs0cg28,uw8ka47t4l,exesxpjqwl,fs6j6zarir,br1df5q6ta,8veywr1c2e,9ucree545v,4pafftt8yn,3l41corp85,8q60le6tye,f5a200l71b,fnt33hbhvc,j59zfh1g9l,88tapwg5ua","tlnxvpy2ni,gux3lzdv41,12y3bp0lssb,tk5qmpqgft,ra5y1jlrmb,cwavrv65w6,eeafajh5le,22xafokyj6,f7ih7tnkjl,a4ab3evq7e,7wpt1yzoey,ik3t1elh9r,dd9lomwy3m,m3rqi4uar3,772ksm0krp","syj6cxcela,i13yiq1hf2,zpnqwa7qji,x2cautioxm,inafd3zxbw,6uu3ehm20i,eppr3upcgi,79m1ktsun8,69kvgsdyqg,94rjwru30u,j6wip8z5md,avhfeltzyl,7pq4yj30i7,h7fe29uj4i,jpvhpl1wwx","ftqz9nlpf9,redn9p0rs5,ead9ai4uom,11quxfu6wpr,4vupe4rv75,aiw66g3n28,jrdtgen2xy,b5zj1iombx,g4w48x6tq3,k8krxc15de,lvsv5pkyv5,if3xiasjrh,iju9bbcusx,d8fma1qv75,cz78my5ajh"],["1j70yhhji5,6pfh7cyzqg,3u6d1ei56x,l11tz2imqt,q72vzy3bbx,2rpc5p39l,1wxafl4nry,ke92iaq963,ahq47p8wxk,g79y71e9cr,5w5s6hgbj,g81jf70z8q,fk14pwf1i8,4apjelbgx0,16wyt8wtm2","wdvilz6kb7,rro7djo5ic,p3t8biltt9,11io2e69idm,m1dsx1xtfa,1vjsh44yeb,6mi9n6qzh6,3c3czl04p6,3bp7e0u1cg,8eg86vj386,hd8jhlik97,7jp8cu3lrw,d0apimy05x,omt8kml2k,8gex6m9cer","yw6x8lel31,ecbzjx2xlh,x0c5kgcuko,dnccs9y14o,yb808ij714,3ltqcou9ir,56c4by8buz,e9ue3iqfmm,bng0wjdrk7,1tx0zh4rdl,a1bw7rsj2,4j7f2h5vgy,hpxjompxl0,je1juzrv02,acu97ax1np","nptgb4ij7j,11zj0y0k970,ge9m6kyz2l,pashv05acv,dmidgi4753,jdtq91ew4,lrdslg6cda,brl4fr884s,59q5exo9vt,exi3wn365t,em66ap2juq,1ydivfxbvh,liz065mhxo,62y9p0g8f8,6dif00jf0q","l5auwd8f45,r3fybw93w9,sjbhfmc315,pn1tso4oxd,enjp5ymtir,1khx046x3a,ihk9qyt0xp,63bnxzt480,a3xbnky247,beipsik3fx,h6e0mfpe0e,jc7618lvf1,glk5g3unwy,ld3x3q3jzc,cnvzzc5tqn","mz96dr92n5,12lfl1kla65,12lsv4vn8a9,fsxijzcw3y,dbxsyncwt4,fry988tgvb,4bsytsvz1a,lv1pxcqgv7,6h74pkgy91,1jt894zt2m,a4uo078hx9,ncfq40bxs,567aqlznjk,eou2jp72ki,edwjwg6xrs","q6waukk4gb,kvv5x7zquk,8ztwmw7rgr,iiaucuiesk,ojn8njp3az,bo7vlebpk5,dcs5spvaix,5rca7wzs9s,107b5g6u3q,hnjda4q0l3,jcyidf47s3,lyhgcsw3vw,e1gvarco8h,2kkqu7kwll,ghlyfd4be","n85hbiozt8,uvvzjdwfco,mfvj5mjz13,lwny7j6ydp,vo13rtyt0n,h1aw8uzfs2,4921lupifw,i17uhdkm3v,did13r1qo5,akvsvufclc,eaald3o7yv,a1idxx9wlp,c3whwuwi7x,bkhem7cepb,84tlcwsl8i"],["ipgyabowup,frvw82grtp,99epye35k2,mzeyv3izkz,f66urf0u5b,l1e54icmho,ko7p4bghqe,gnc70vp097,bzm9s7lg1g,85r90b5em2,7jd3wom9dt,4jxlm5cwyr,9ts72ybiqe,5dnz4a2v5j,ls9ol8x1nu","mmpexyqlug,uyl3zwama6,cmfay5df6h,eop6vyh21b,qvvmt07yo,hqk0byvhs3,h2t19vjtte,chq5mzei5o,1n745w3qev,lzqsnbzqoc,jo2rcb9yvt,abqe8dn8l7,2p6k5zf8c,i9ni1d4389,m2x4rea231","bfjnzrz16i,r0tf5t5v0z,ld4vm9ql2c,vsc2zcrhry,hfq2te3ur0,dd15tokulk,76gdzsldnq,hcqr44ev9f,dg2rf7vh4q,1s9c7tvya5,amz330lhqx,bdhi840vyu,i7c6rcgb16,64ojbiswjo,18aoe4itfn","bnvo2yk5rl,2frwbkywld,szja8fx844,u8v9xsqob3,ljttodn59w,jw7xldeg3v,1zp1n9xx0g,adbfgsz6p0,k8z9qydk68,7nu4avt6sn,2c5i2pxen3,cvrg54qwvy,c3vvjcuxcw,739jsvqm4r,jae5a0kzwq","r8yeci18rv,mcge22n3s4,gwy8u29tlw,fftt6d1mhv,mmuixtmcb7,2rsjuz1wp1,d3s10fvjo,8jajjhtexz,lvqej85tem,cp4hh758ca,cl34ei9i1m,4vddjnu9dg,cfdcit3pft,fj30i1hrl8,iliomuht9n","3h55hxutcy,i0p86u721r,ay2qapk5o9,nw7qi92gko,3zbeqrcm36,kbprvsloyc,gep3ikxdze,dz389ieovl,4m5wxxy9mv,1vw60vbvcn,gwmcyre2xu,ib395etlox,hef1tnfkqy,murygmdms,b00y1by3v1","vv3k494zyp,ni3k7gdzkq,lv5lib41ou,gyp3cagnol,o1pt168vzh,2xxjxo8g72,bhccs7lk36,bm8kzbp336,d9rcmtg9id,dwui5g3ec0,b98t0039ul,8xaz8sdpep,lfok98k9yw,kfmrmnaw3o,379ojnezs1","t9s0srayr8,swtrxoyocz,zp1floez7y,llf462ushu,dnnz30frst,447bvk0uci,71gws8l3ur,ehr0xt1gmv,lcozgjzt0l,98fd75mwhg,a9x3ygj245,l3rqeup5uk,lr816v912z,4r08cqyhqs,8cfm6iuydu"],["camz7c0bc4,efdc0mzwl3,rhw88xqwak,moz4lojha3,oqv7weqd0s,aesiiulykd,63w1jb72f6,4jnqg2ufgi,jtd5ahq9nl,2xdfamste2,ae3a3k3rl3,fajnwve0sq,evkjca7erf,eh8f8n51fl,c2o7st12vf","10vf04v8jip,tycdlck2j6,xw1y6adrbk,zup1ovn9aw,124kzsvvm75,gnrsw47mp,9w5lt65uso,ie5zxui5s7,1peny5oz9t,5sp9r6p96f,at6sxn8gf,anmgq27081,5og58mi29w,7xvtkm9tce,cz28plgbsb","qb6lepojur,10vjob1np5t,nsr9h1t1cn,14qbgpmsup5,kc55tog56q,azgk977bxq,i9b4hocrej,tp9u0jtey,jf2ttasyhx,4i5jz8yjn7,gq8fc1f0s2,e4powwb4ya,ao4jav6tz2,98me4tmz3x,3ck1kh7yfi","jna7t2ghrf,8z3lfno14o,nsc01ygdrg,8f7ff5klmx,11nzp2082yy,2dokcm8ie0,31w94ww5cu,byzs62tcde,dv6511yyig,l2yz4lb3qb,cy6mt0xqfl,75twg9rvne,dfb3xuixca,gfkzxb3fx5,drpyeb9hwz","mwsipmkjjf,w64dgewe9k,i7o9se2o6j,159sx33fd6g,qjq31dx45l,k7xthxhj5a,jxln2shc98,lzq757827w,jtc7510svd,8laijz75fc,bzhhyr5x1u,5wnejuymd1,doqokvza46,ehqk1kk45u,7a5t73g5ng","133af8lj8yv,fd5kqbg0kl,v2sv2c80z6,dynd8c8qmr,n3nrb9ja1t,kzwq78l39e,23zoiflody,esoh1m7erg,jascib9amg,dbxy2goo1u,357robc4ae,ky4ddeu80z,72duc71ut6,6j56hyrecy,34vu2owd5u","q63viqkzpl,jax7i8rpoq,sqr2gtylq9,10vazn4h1fr,eacwg1rzrm,9bpp9bjdlj,36leydkl23,emnx8zbqwg,769bkk8d6y,8vl24qejgu,fikgrul8ha,kxofr4ogqv,fgbejvm6v5,dt69g381zr,imkvujjkoq","ufe8zotz6s,15ubmvkv18v,w7bt2y6uje,gd4p38yzne,mxym01b6ex,7a0a18gmj1,kfi45vk6cl,4z6fznz8rr,fvd4zovg2w,66u7yaj60u,hxv42eomit,6by0qr33vh,2l8oeo83s,5om8nc216b,2sxhule8n7"],["zmlmvya6ca,e9hko4env9,10qez45m3r4,nsyvhdeard,azhlzeywvd,20d3hcn16u,g1yui5cqcj,lt8h0auaej,1pwwet8qhi,9ex2zmmhts,fe0i8efuzw,ajlloe4h9l,40igcs7ku,9fxlt5pkg9,le3srcy51p","hfm22eva14,tex1g0yegl,d21rltw9g8,ev4jszvz5z,mtjx43u6ho,652rt8ewp9,d68fe11sew,9r1bo7kvqx,cxuvysfvol,bgvlbfc08z,274yrn6fat,74iyny8uvf,9uk9v4j955,96tjbzkgz5,2icew00p3a","jdze6slkva,sbo1qwi4lw,d5exjo2ps0,kdqylqnmf3,13132i54edq,c65u3hxeoz,i3h54a38nm,a3pn8ku4xj,a3n03zy271,hqqr8wyh52,azbincorv1,guxxmjwd3r,l5pin9jeur,kmyxs6xu7u,m08wqy7ex9","yyqy4gnmvh,k5nj0zwgvo,lbnp96wbfm,fvlibhzkbl,r8gpt9pgey,15yaigvejz,aifoo662ao,e4lchrnil6,gknpuxkk9z,29u2q9zze5,i80j1ymw2k,frpsmh1u0y,b7zbagtc3i,j8rrsrwoap,yxjs2bj","gyw19vwrq4,vzpkit8eyy,rfghito3pk,mdm51g0bt8,hanjim87yo,l4y1pee3nw,4yeb5bgtff,65ugxe7tla,ax5fbs12qb,a6gxvt3uwl,5mekioxdm6,jqseb1dssi,a0e0a0f516,k2daggybm,9053a83a8a","d9d4x85td4,kg40mh3qg5,wupn511mil,os8zj3a4c5,aiwuwx4tra,hfeg1jwcgm,gp56mvwxvk,bcauqhzc7k,hjbrrco29l,3xw1nxriwd,i8fkb0vmsx,3z5ef85r92,82uz8whqvn,7huszk7tr1,h63otm03c7","41nnt9orfs,kqw7nnhrln,w27qlg4duf,n5j55u91ug,bmkcmm6mlz,2tcxi8d5sv,6drb7gtail,atcnq0bqy5,dgef8781hr,etseafmr9t,6m8klfprmh,gi2ajgmgu8,69iz0yew9g,fg9p86k55c,lb4i4910lv","iqgc2h481y,wd70szukj2,blrjd02rf2,p4xc01jq5e,cm2gxhlae5,fwlgw29dfn,3zapdsc131,l9q6sswvzm,bfirv2snob,fjd8xmbvqd,jtkvp0ckfl,83mv7j8k3l,hkysqvuq2u,gfhjjt8zn8,3u1r9fs79v"],["qn3ht6fygw,n7wx66k9m0,kenk6hnfce,31dvrk44ri,cudaliwtkp,cr2gto39py,klhw3obinw,i88xz5v4tl,172gzhjhw,7ru02h2nlx,kidwr1120a,8cry4qps9i,9sc54i3zm1,du540mnm71,f3ca00ot0k","10wgxoq2wcb,dr9mens1e2,13nd3fcpdq6,njkpcm54z3,mtsztfs83m,hjt8hem01a,asr8hcnmgd,9s488e8ay,5c7igte6c9,f605eyuim9,6tu9p0z2nx,1oslk4i626,fc8dhkgqob,aky50po6zy,avd9dea4r0","3ee7803veg,wzzju2si5g,ni0ag31afy,h4z2jpkj8z,om6hnk85h6,2a199u01x5,f10w1z4ab8,jwimvurhvb,ez4suku055,7xtmgu1rss,amp09kdym6,8l8opcj7f9,7juabyeps0,layugbejtp,jx9arfpe2w","8ey2nwitro,j2ecmx1j4b,nnvumd75c5,uaqzyp7b7m,fayehq1a4j,eqow2vkzqm,aacvsop406,h5p4kvja9o,c6jvq12ded,8cyn0iglaz,6krtv0za02,ioiyn1ntwx,ds5n3nfw2a,b99lrfvna3,khxp01gbg9","nf9lgxa6bu,j2amhyahbh,gs61qswu0e,ulv1k6lwk8,t87lpnb0am,ak4y75mim8,l50xgxh5i0,eutg0hax57,97p9p9nmqd,aygdgmh5dw,3a8eb0re64,2rbuyg0k7g,kpv9eyz4g4,a7eaaykd1l,5a1l3rgc5r","puneh0l20e,nm402xigvw,p5zvmypv74,q9or33gw8y,ykbowlq7fi,bofxqjojjl,m64n9e9tly,atjk44bdm1,bcqsotj2zi,hn2te6c243,ievy6n7wwp,kyw2yhfwt0,8e3xp5rds6,2vt8lm7uj7,3ygoalolxu","degizej78w,814n484oz8,wa5zgdnd1b,j7uodl6l6e,rn8jybnjja,f848vh4oid,4iqh3nv9tj,at39yevnnz,hj29i6epyj,73hm33i69k,bxrfb7161i,f4pn6zpv1i,lms2o5emb,icphctgyeh,c1lfaqpnfa","cqsixwny04,xtqdci01sl,uuxof3uf9g,mstwxra2fy,lsjkhkhye6,3c6lvdyndi,5x698xm9xp,42nncavvlg,9ihi4uzmq4,i41fk8odin,2bijw0nw74,lemzdhephu,f5alcdgmxb,cmdth62bpk,hvp3f6d65t"],["g2mckvhmf4,i1uzjayo5p,klttfxe5pv,1546jtwu6a2,lrej8ebjza,ci3dfpaqu,guz71bk6pb,9ooh4cd7cs,yxv0fe3hq,c4xpkpdbks,joajq3rkae,hpo99kyikh,7q1ir2njr1,fndmbsulmn,fnk4ebid84","h2k4titnsp,mhfsjwdqky,o5se9jzrxn,vxv3t0yrp9,brchvjeql7,8c11v168ep,7chqrzvg18,8637ywa0v4,5tvc5de3iq,9fbb5fqymp,hb7mfj331v,63i730qxan,1nkz0vfjp1,di5lbdnggr,idtyjto5zy","pdz84u2u34,oqzd7ksyjr,gquao977s0,fjbkla0xl4,y5te61d7u0,gvmkimjcyn,ejutw8ax4o,5ns7fmfag8,l9cdaynwhy,fbe1qpwj1b,8enn9h6s5n,9txs2zzp3v,i2rn3iah8j,21liojfqy8,2jkyp59idu","nk861v5usd,yckvw8n9yf,si5n9mcaum,g7ocjqd1mc,bwa9lzdrn9,esamka72un,dc9j17ui80,e80b7kufbb,8u8xco5agp,8f3ec28i7g,7185zpumsu,a63szzsn8e,hguu3v02m2,ah3lr1dwkn,h4b6uvl9ae","g5k1kcjqqx,semwcs41ww,lsbhuup1ij,mh1fug84do,psto4kvdb5,bjbcq2bgq5,ffhh44qwcp,eba2jr5hhx,7gnp4o6hrh,fy2h8my2j8,457tvo62ut,9k86s3i4tq,ld1h4x0dkz,ct8f6mujfl,gcyh1gpyhs","v3qtemdgla,d4cntxxrqp,144rpyvhx7r,zmz3unms26,jiraq53kfn,b1jt6squm7,a204dy4usr,135p7rc3vh,evmj9zhf5m,kry1446ssu,2zha8if8ss,kaw6lqrg0a,3h2umegnig,eh0i0gtrj,2gkp1ju5wk","8fmhw2f50o,r6g8cdhrma,zqq412tdhf,13540qv3wag,jbkh1d12ew,e8gdflif3c,ee9zn2tvz,3yj8602eu9,4ryrluhmu0,gc7zwft65e,73y9p7hqy,bngtseugdk,l2kg71dsgv,k81co0s9z2,ksnbjxfprx","lxzpmmus1e,10s330lwixv,dh5ebgluwb,wrsd0dteiz,56ojzedpav,6zhnat27jw,58grfrvknw,34cr58k2uz,hv4d7nqjk5,2jngxoif54,adez8yznvr,j91cpik6wb,9yc1hjvayx,bn79dth0hp,c7k7tvqqxe"],["ja170br3x2,hm12g0wfpf,nj05swtq2a,m6kc3ogcut,ub4rns9a4j,i7e8fedwh9,fkrxb1rv0f,i7ipcuogz3,air1cpvvd0,jpfrhoy530,f1qb90dcjx,l3g7ft5p0f,lgmj5ek5b6,3kipvxcyuw,fo3fflkfhb","nqx5smhldt,ogjymeibob,l5tkc6f3dk,5vzklhjkrb,nzda7nyi71,jtnb7saowl,6iw60n9ahi,7tfxxtspwb,41xrej95n4,7x62168ptj,k7c26sppl8,4t4bud0ikh,lyj9x2qjp0,95qi2npo2s,6oopk6xlre","f2lgq7g7im,8mgyxf9xon,pj9p42fy1w,qlo96yj8cg,ae5tkrdt42,ee6e5evdyw,j92wfd1oto,1s40s2eax3,fa4pfc4b0w,5hpbzqw626,3jbgukxycr,d1n5m5h2dx,8w0xmmrggi,2wayjqbahv,ikwcdt3im5","16ah4klvnqr,k2hnu8a1mf,cz0w7bjpze,drweqekfer,jyqkwh1hcd,kes6d5uslg,32n3o3cbn8,31v0a74sf5,9t50bhgted,fnsa7kpb8v,dra9rl979i,6um7y7pxph,lzvtrzakf8,hhlq3m0xfw,aot4c0u4p7","qid49gktdu,oojrlnxf48,r19axyin59,fbo4hl8srp,11lta5awb1u,j7h1izcmvs,is9w62g03x,hy4386d1hj,kw16qy5iuc,q5wqe8ak5,3t89cbzdm6,k9igvtomfw,c0s0wmvqbx,ho7qgojvzr,c402h6kdww","hdzh5k4ct6,snwx16jzy9,md80lxr095,yzow6cxy3x,x5vo2r0ga4,b3ovskr8dn,c24vil3igg,ckdrbne6lm,f28w9m7v05,fnjl2lq7n1,lh6ixyk8g6,lklqro8ctw,evsm35xlhd,c9uk4m051m,6l3krajeht","qhenpunzfz,srch1ksmmn,mz85ijedv5,55p4kvj32x,ol25wzcdvo,jg8fpnzxfo,ajx6tjwuv2,5usbhtho1r,ihl6e5ok95,eo151g9bf9,9fsjc3kg8a,2alws3ww5j,8duta70wwd,5l8fjrk7cn,h4vusaewtl","ju3ezc97xw,1waoni9buo,oa0cdhpwfu,llzycw1m8y,gwf5rfvo0z,f65nsaa6v1,l5i6rxd2v1,fqdh3gh6tx,c47njjo0nw,811kd5rjvx,h49njxandm,hit29wca0o,hkaihkjp0g,iigqmn4vq7,apqrqiw8at"],["snwel8y8es,j9i3o9g6lw,i0vrkei2ga,ugbwc9s0t4,gftqx9rv33,b9bosllljf,f348jfvql7,arj8eip57t,4qijiboxrs,kvz47a2s0b,glscmlacge,eamex02bg1,2me6q3twc6,i2cbjqcqdv,gxyjay5zfk","uxeb7rxfj3,wg0fndghir,ulo0zlybvo,gfph49ur2z,fsc4dnyctj,bvmqr68cx2,3a3eqnotwu,dt6wxipa5q,b11esfnj8q,j5m2gx5er1,7js2cgeoaj,ew1djzhhsq,bppxruxdgm,klayxo2bd6,l32hunj3vh","qaydddj5gh,jojijscx0y,107vthico0b,xjl1bcqvcl,qynr9pavuy,98jssfvao2,dzz70v6r1y,j496l680em,1rszv0fi0i,dxctcua6z6,3x2vkf1aac,fj974pcky8,9yzmb1pp1e,f62fa7kego,9ym1l4nw3z","ga1cqfskwb,m8coi6zvns,ix7oljc4ur,fsmbo452w3,ungxg6uhtt,9tabzoprbn,ec2cu75afz,7bu4kzm5vh,1dchzbedfu,9ukjmh7k5p,ea9sctvu4g,eji6qmfq99,a5a0tuabyt,6444a1ck4g,h6grr3t33m","rolq8gvjis,mjby5cvwtc,k2mqgkp0at,g4crx51kff,wa305ywspw,9h24xrw78m,azsusvyod3,1sjn2mk0tb,ebyvx4g14n,1xhtrwtihg,7ugq6puimf,iok5prxs4b,451jufmry9,lbru3l2w00,96fgd6pyf5","8mvxxq7j45,djmcwn9zuf,sie82g3bt5,so5ktaqx6s,md21mkxcty,ltu9yjq56y,3vyjllbrci,lvv6hdyiwn,5huzd29t1d,alujsf5cx2,7vz0pe4y2l,iukn53ymes,5nnoi32is7,ehgwxs0zbt,f0z7pwygww","vit2zm2pdb,lqcvdgab5u,v5ss89q753,r3ublw11dw,msavinul5b,eio8e8jkev,hc5df8amwd,be9i4g2ja8,fz99kjwiz6,1mn0pj9mh4,jbcs5nwc1k,10dipgztgp,acwa6y4myy,fsg6b5woml,j48staz2qm","dsy1xsv027,ph1w5qqtls,mvqg4aai3d,8hpbqz2abp,ujohh40vnc,c5o0dmhfqz,ao0hb9pwkt,8uetd7k69j,g5mw9td91m,1juuilyefh,b9bwv4pnm8,jmbmouar7r,6n0aqwc5mk,hgluybkfkm,6n0xkt41ml"],["i2lfr4puge,1pn4kn21k8,821lrssu2k,13it4b2mq4y,a23dk7puci,eu21857846,ky4nn73nur,524qea0afj,1duqtx5f76,4cueybbhge,k917asl7s0,25nuqgbsb3,lljn89odp1,i4n7h5lg9k,5h967x0q91","z4by4zwhpn,abv6smblei,16iqh3vqe27,ost0rtt9q5,k3agnenp9b,xcr7vp6ia,92zqjzyh00,8ovc27brv,l2d4t2bsbr,kndgdkequ4,5alioqolgz,ds11fwc1xy,fe9t4abskp,l5o1who2mu,5exipzlilg","h7lxevekan,6p7ygmgq3z,htfob5bklh,s0ukdim7wm,o5olxg4v3x,36p8eovbi9,jfkmx37i0p,bqltv09bku,s4n3dnf95,dj22ngog0r,23lm94ezkr,43j4kferdj,j7enidb747,cxkqqbjnpo,ldoxbfjk16","o180r18a87,9sbz852kth,uzr7lt02jf,11eo32dalzj,ejonsqe2ut,fyg3g44m8i,5bs4772kfp,m0ips629rd,l7u3opqt3a,jfy38sg6oi,d9ehvsh9w5,davs99yrnm,9a6arwr791,l7x0rvnae6,9yw8m47ae9","kqwb90n376,b5gm4j635c,hyvvqlfu0a,7knn7qhghl,ial2oh2fjk,akxqsoad4j,2gd1dantl5,bk9ne907re,fcmgxgf4gg,ehvro077gx,ifsdt42v2k,imzl9fpylc,ix4w1y3a76,cidpbkm20w,e61vsxmml9","uf0yam9s50,w50daso0vi,9quinu3mci,db11i7kv52,peoo20p28e,a4ifqp1hje,guiifp0p8h,datvvbeexh,ixpdntjs9z,eq5z1tb3nj,ipscjy9exb,48hwtw18hf,6rocgkkngf,873nwc8w6g,glid0gpjga","ugvuqmug7i,5yowyvzzwn,2v3cf22zkx,ns1sjqpop0,lsqckr0kf0,bkz5h2lpnw,gzmpbqjo3f,4i2l2th6u,6oc4476luo,1loieqxtmv,e9agz00y09,hmakeyewip,3sogkofaqh,vz21w5kyi,879unrswnb","r94tcb7i7i,m26zat4vlz,zhbmynbf58,y7syehdx1j,tk4s4so2v5,cfx19hlhzz,auu8jtlt9s,56k3vvgp50,l6tqff7qhr,elz6d8ogey,4d0zl3kpcf,fqw8v4fsfe,iyhriay62g,8uuncegm0u,3g5ops60dk"],["gmybp5o4to,s0p7kl12ed,vswh7pbn35,jjo2wr0dne,12oba2sr3e1,fbzf10zsgr,3cqs1f1jzn,ejt5wsqzq3,61wlspkymz,k0q08muo5q,9jecgq5ril,c2eywjolr4,6j02z3i12k,bdlj7kii03,7sfq0u419a","en4jpmhe3m,vy76kpghhy,hncfjcj55r,t1uj20eg1u,l7hvzrn7mx,b24udcy5bb,6r0l8oj642,4zxiqc6h47,dwpz3l517l,5lcfk1o28i,5ilfc6k2fd,llp4fkxcwx,hyl1yc8jnm,5p9atk26nc,gn2snxnazd","iw0o5m20e5,pnlh4gejy3,j0a1m5g3fm,feoim2z55o,14hzjfsyatc,kzhp9kaz3w,bl2zf2kj58,harz4acwlx,dost3mn1l8,jd05bdealr,kbm19r1n0r,l2nt8ln48t,6w3bwdeh14,2ov5qwshsc,3p4reiaccw","jxjxfurw0a,q9zv0wnz27,wsoaulizbp,nv104dj2ny,a5p63ybb70,k0ygrjuisi,h6ilb8nwlg,lkhull8sp4,j714fzo7ft,29wesi6fhw,3dw336fncl,5f0i44trq0,ea6rndo9vi,4qpppr5mp6,8ty7ew0j22","l6ijrjcgdb,p9ritd0k00,mrdmgkie77,gibszki5fe,k62u45fjls,f1ykrxp0c5,fsxcm6age0,adzkdayibv,ecxijom6mp,c5hhqs8wra,86d2ib83ks,hj22pifdgp,e199myxi25,3kgjypyiv5,lcsp969l5y","xjvoe5sh56,9nm6bc0mmd,k7zzeb0ri9,r089bgt5eu,r74bry7yks,gku87tfejo,6f7ooxo2wg,c13aloi72b,iok3gpclrx,35b4xmq1jj,63ckt2ds2c,psf9rpoow,kacd3vxred,h1hr34uwce,hbj8oetu6","10kuih6mp5t,xfdc7go3vf,61ur794m1u,dviuefpawn,ijei6qs8cj,lyil2tgngb,5jwjhpvn80,k45in58oym,859ayv431c,6m7punibjj,2lnht5z9hc,gajcg6ebbt,lija7cprlv,lqc3lomdyc,4zd8e0esvm","hkj7btpkti,jfmumy4x64,3ap2vfkq53,xk8j92yyiq,w95mqvxy1h,kc2sdeaz4f,b5odmeknl,30m89n8ufn,1shynaker2,is0g6sjc3n,eqgy5txi2w,h7sb7x85ei,8ldgu8g364,8230uwr5xj,yppnaqtto"],["qtdl5bttr0,ssk8atuxk8,hrtfdaecjq,i51l6kjphw,10yk8nvufg2,9z5lgadzgb,5b15b8fdwm,iv33ocp7fa,h5s1krdkp1,ikq5f6ag6o,kmcuctxmh4,2zqyr4jsgk,egnui09to,6e7kpox9wa,hwmbrtdc7r","m2mo34a77u,5eqtvfh63p,893ytc0twg,gzpdn76pjh,12ysmbvsgcz,bz28xk5bss,hrl8lz9vp,ff1fwwjyk2,73txc5oz3o,3fs71uo2to,9c98on0896,3eq4fxjuw9,b3bcg7nwyv,hbnf6pt7i2,4urtjviggq","ebqb0itd4a,us90cs8d16,eg2h1hk8bv,e3pp28s1qp,ksjeivmpt7,kqaphm6ztu,jnoqmk963l,ctvlw69k2s,8dz56ombap,dbv0ifuyu3,7dyji17qw7,encwql9fkl,5dfv4956g,evyie6i37c,9kgb5booep","igi9h6l2u2,kx2g63k187,htlobdwl9u,91jn5l8sy7,ry1fe6xwkq,c5styxdi0s,bhco2chkk2,h6ovbtmfav,du7pcr6u8w,1kyi74ldt,gdrru0upxv,38701ip527,d7n7m79qcy,jc80scesil,h7fcs1g8yc","6hya83k5di,keevcvzr7b,zjtyuxqbrv,8z66oww2jm,w5ri98z3dj,lq6t0a1p2v,gn9hbg82w0,fr7pm3rrty,l89svfs2ut,awc370qph4,d8or611e8e,j723vws4v8,h3bwqvymmt,6nl034e1rp,i26d1ifkpo","iwx40ibkvd,nqilg3q956,mv49q27734,sc3wnjhhqw,10ml5zkakgg,64k4ef6gbr,bwylm5l4lc,h5koyge6f7,dtmawdpg41,43vq7fd660,820r9rwif,1npurb4i3p,d1ftunuw02,i3zboax8od,4z09k1kg3r","z3p8x3blck,gyd08jkv3h,moq03w81vm,kc07xt8u7z,u3ihbj0vli,d63bpa8rqk,cofk3y5hos,jvbtfdytmg,6f6fx55d7p,8ubgwjvw3n,je8e7chmj2,7oh598v7d1,jsyph6p662,hyjhlytian,afd6ns91wx","o7oyy8wrci,b0cze91smk,tn79x0u3lw,7xz2jydwrd,bedc3ecw5x,cjfvtxvmy6,g4swyfkppa,7h4k540ns7,6k2z4h19hv,8ub3wnee5p,gwpw3gimx6,aflibvi0oi,i3gah02s7m,adnoxxkgod,6pcu0podc7"],["m0ypu0kozn,m57mlh8wmu,k9pu09u7dz,nn68telm5b,lt7q3qqvc5,s650loho5,i865i0a3we,hz67l3wkj7,8398rfj6gc,7p4fssefbe,7fwzuftmka,1i1lcv9z70,bln13lzgkw,41fwubkohz,1ji4fnkgcu","104wfz591x5,qxy01n8u78,12dwz7t6zyd,zyzd3vfl14,da8va9lunk,eq2g3qww4t,377xo1qa39,gffgwktpp,famy63pwko,85uk7901b7,club3ty822,ke1rffsagg,g5nxpnnxfq,kns2s2a9b3,4fua5nbl5u","q6pqvzp9z1,nf28zqd30j,ozl7fpaihg,jood3pfpi1,jzr7yhzsyy,ccufuis5oj,bcsdabibvn,9a8dtidsaq,69u26k0pcw,bbe21f67yb,8szgbtynck,3xw3gvx0oa,4085hzyr0l,fqudmjcz6p,ba6ctnzg8q","10x6dp18ddf,n989axt1hn,b41647f7ev,ipj4vgff0c,ng7ci65b59,4ge5w6jbhl,dbabls65vd,bjywkeij3g,jomj8m65zt,3m7g7oqok2,gwtephynpm,eiwsgvs55z,8s5razwa0m,88mnuab06b,ikiz5djuss","yedeaxari8,o0lo095em6,x6ny05zb1c,qe6ajuvtk9,mgyh8lwbfg,jww4lm7bn6,apyb7fzu63,jh34pp3598,i9hf2pqof8,5k07r68ilp,98su89jlm1,au0nzfwikh,a0s5qlnp8w,j9shtjy76p,1i5ptcw8u2","upmvld2yiz,sa4vfry05p,oebgbb6tpv,pjfbuiu4cc,hcgmp521lj,cr2c12thrn,963c6yuyo6,dckef71od3,92wl8xp037,8s9nj3rlb5,gjv01dxwfe,59rq9oqob4,l1e6f6f0ne,j4gng5cby4,ch8klbpxb6","prxt0be9e4,qfk83pb5qj,nf06ddg6ly,jfo2xl2lil,sj1vns01xk,59tlmwiqup,5durqumd0q,f0gaazytcn,l1w3mn91x3,cew72zfji3,bf5hmy32df,lnbaqo7kui,71ag3g04qh,t0vhja753,em1hr3yuhm","dka07it97l,k5d25je91c,hqryb4seq5,ms843el3fx,dd0ie8sc5o,jtrkoj9p1r,i0yce3t2if,5a1l5t3neg,5zyvubpe22,2ny6o5ul5x,c6o77rahq1,ly02eduvfa,dn1hqf62lk,5u9kvfx6bu,4uzhysfpm9"],["mmz6xkyiil,img807ci00,9oreyv4k8w,nwn25hsndu,x9f7rm3ikb,gohept88hr,4xyhc0kv2w,gngs7idjp7,9cm586sgqz,2pinvi0t6y,b2lveimiuo,gd0iev943k,erkt92ehom,flt6jcd9cc,5huhx9yjgq","hkk7qr5itw,fy4v05unzb,knfig8iol7,opqs2euwgc,iribibiq2d,cow3crbdq6,96ahgatnca,1vlwm6595u,jrdeqhf4qe,9wkmjk4t52,efhsyfnve7,1i77mh2jrr,6p5p9kw939,1pejgx4z21,6k7z6zizsc","ksajuubqnb,zqxcdk0raj,cal3jsqls7,zhjjmsvbc6,insa128ion,1oqkacftdi,6ixijjpgzp,4jvvktvkvl,4lib24u04a,6gusvqts6z,4t7amccxkx,8j5bhfu5wa,gth0v104rs,ghb0h371hz,etvu2l87uf","nr28zssm4d,9cvx5bddag,qesm79g87a,709np251v3,35rt541h31,9qkaul0e6t,ddzf12gulq,ctgmegee6l,2w9il0nou4,aeierkb1f,e4g2c2pfo6,zh524hrn5,26dh0l8pe7,1ua2q9wp9o,cuus6n00i2","lpxk16k4ri,r3dstrh4kk,9gzikt6aon,nq83l17erd,i4qw6c87r4,bqfokrc7fk,i6pzeaewjf,dlyc4x0xr4,a8mrj9mpkg,7rlzmhn4yj,d9gjmdoavk,cpxm7vp6ae,l3lm3fsfqw,7qwkve1hi3,fh4h7pe3yn","7r0yblgjgw,o63vdo9rt1,zj2fl7viyz,e3bvijy3lp,7qqg8k8is5,4uk3jy0wpj,2zsnz84ylh,hchsnwixvk,2avaa6dn7i,jib6i7uj3d,6k0bqvhbd6,d86uhlg6e9,8tjn3n76dh,4bqdiyokfw,jk9sj8p2f5","tm7kcvg5vd,gyai1r9owc,opx5owuh71,dox7jw59lg,bxt10d5kn1,8eboreqjar,hw2h5wqpqa,f77zevq7r0,bkeem69dak,1znctlsrh0,bv8ipguds3,7y8fflwvu,9ryxxflb0s,dpl2p1ltm8,6s15n69fby","wim24psv7g,j9agvb3yem,ldm2854zc5,n2pu0uhvja,4ephr6s5a9,co9n003j8u,64qir1rc5z,8o9rtwxu8w,7aob3iwsn2,32fv40co24,9vri0rog2u,5d9p0aukc5,i7p01amblk,cziyd3uzw2,2rdh13tvy0"]],Ys=cn.FromArrayOfStringsInRadix36Form(Ps),Hs=new Ns(Cs.map(cn.FromArrayOfStringsInRadix36Form)),Rs=new z([278908739862762n,821645201101625n,8113234426968n,1777959178193151n,2118520810568447n]),ln=c(class hn{constructor(){y(this,"bytes");}static FromBytes(t){let e=new hn;return e.bytes=t,e}ToBytes(){return this.bytes.slice()}},"_CompressedRistretto"),We=c(class{constructor(){y(this,"edwardsBasepointTable"),this.edwardsBasepointTable=Hs;}Mul(n){let t=this.edwardsBasepointTable.Mul(n);return new Ht(t)}},"RistrettoBasepointTable"),Ht=c(class Rt{constructor(t){y(this,"Ep"),this.Ep=t;}static FromCompressedPoint(t){let e=t.ToBytes(),s=pt.FromCompressedPoint(e.slice());return new Rt(s)}static FromCompressedPointBytes(t){let e=pt.FromCompressedPoint(t.slice());return new Rt(e)}Negate(){let t=this.Ep.Negate();return new Rt(t)}static vartimeDoubleScalarMulBasepoint(t,e,s){let r=t.NonAdjacentForm(5),i=s.NonAdjacentForm(8),o=0;for(let d=255;d>=0&&(o=d,!(r[o]!==0||i[o]!==0));d--);let a=Xs.FromEdwardsPoint(e),l=Ys,h=ke.Identity();for(;o>=0;){let d=h.Double();if(r[o]>0){let u=d.ToExtended(),p=Math.floor(Math.abs(-1*r[o]/2)),f=a.Pnp[p];d=u.AddPnp(f);}else if(r[o]<0){let u=d.ToExtended(),p=Math.floor(Math.abs(-1*r[o]/2)),f=a.Pnp[p];d=u.SubPnp(f);}if(i[o]>0){let u=d.ToExtended(),p=Math.floor(Math.abs(-1*i[o]/2)),f=l.affineNielsPoints[p];d=u.AddAnp(f);}else if(i[o]<0){let u=d.ToExtended(),p=Math.floor(Math.abs(-1*i[o]/2)),f=l.affineNielsPoints[p];d=u.SubAnp(f);}h=d.ToProjective(),o--;}return h.ToExtended()}Compress(){let t=this.Ep.X,e=this.Ep.Y,s=this.Ep.Z,r=this.Ep.T,i=s.Add(e).Mul(s.Sub(e)),o=t.Mul(e),a=z.SqrtRatioI(z.One(),i.Mul(o.Square())),l=a.i1.Mul(i),h=a.i1.Mul(o),d=l.Mul(h.Mul(r)),u=h,p=t.Mul(Gt),f=e.Mul(Gt),m=Rs,w=l.Mul(m),x=r.Mul(d).IsNegative();t.ConditionalAssign(f,x),e.ConditionalAssign(p,x),u.ConditionalAssign(w,x),e.ConditionalNegate(t.Mul(d).IsNegative());let q=u.Mul(s.Sub(e)),S=q.IsNegative();return q.ConditionalNegate(S),ln.FromBytes(q.ToBytes())}},"_RistrettoPoint");function Ds(n,t){if(n.length!==t.length)return !1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return !1;return !0}c(Ds,"isUint8ArrayEqual");var F=new TextEncoder,Dt=c(class Ot{constructor(){y(this,"nonce"),y(this,"key");}static FromBytes(t){if(t.length!==64)throw new Error(`Invalid secret key length: ${t.length} (expected 64)`);let e=new Ot;return e.key=L.FromBytes(L.DivideScalarBytesByCofactor(t.slice(0,32))),e.nonce=t.slice(32,64),e}static FromScalarAndNonce(t,e){if(e.length!==32)throw new Error(`Invalid nonce length: ${e.length} (expected 32)`);let s=new Ot;return s.key=t,s.nonce=e,s}static FromMiniSecret(t){if(t.length!==32)throw new Error(`Invalid mini secret length: ${t.length} (expected 32)`);let e=wt(t),s=e.slice(0,32);s[0]&=248,s[31]&=63,s[31]|=64;let r=L.FromBits(L.DivideScalarBytesByCofactor(s)),i=e.slice(32,64),o=new Ot;return o.key=r,o.nonce=i,o}ToBytes(){let t=new Uint8Array(64),e=this.key.bytes.slice();return L.MultiplyScalarBytesByCofactor(e),t.set(e,0),t.set(this.nonce.slice(),32),t}ToPublicKey(){let t=new xe,e=new We().Mul(this.key).Compress();return t.key=e.ToBytes(),t}sign(t,e,s=new dn){let r=new pn(F.encode("substrate")),i=new Os(r);r.Bytes(t),i.SetProtocolName(F.encode("Schnorr-sig")),i.CommitPointBytes(F.encode("sign:pk"),e.ToBytes());let o=i.WitnessScalarLabel(F.encode("signing"),this.nonce,s),a=new L;a.bytes=o;let h=new We().Mul(a).Compress();i.CommitPoint(F.encode("sign:R"),h);let d=i.ChallengeScalar(F.encode("sign:c")),u=we(Ss(St(d),St(this.key.ToBytes())),St(o));return fn.FromCompressedRistrettoAndScalar(h,L.FromBytes(ye(u)))}},"_SecretKey"),xe=c(class un{constructor(){y(this,"key");}static FromBytes(t){let e=new un;return e.key=t,e}ToBytes(){return this.key.slice()}ToRistrettoPoint(){return Ht.FromCompressedPointBytes(this.key)}verify(t,e){let s=new pn(F.encode("substrate")).BytesClone(t),r=fn.FromBytes(e);s.AppendMessage(F.encode("proto-name"),F.encode("Schnorr-sig")),s.AppendMessage(F.encode("sign:pk"),this.key),s.AppendMessage(F.encode("sign:R"),r.R.ToBytes());let i=L.FromBytes(L.FromBytesModOrderWide(s.ChallengeBytes(F.encode("sign:c"),64))),a=this.ToRistrettoPoint().Negate(),l=Ht.vartimeDoubleScalarMulBasepoint(i,a.Ep,r.S),h=new Ht(l).Compress();return Ds(h.ToBytes(),r.R.ToBytes())}},"_PublicKey"),dn=c(class{GetRandomArrayU8_32(){return ut(32)}GetHardcoded(){return Uint8Array.from([77,196,92,65,167,196,215,23,222,26,136,164,123,67,115,78,178,96,208,59,8,157,203,111,157,87,69,105,155,61,111,153])}},"RandomGenerator"),fn=c(class pe{constructor(){y(this,"R"),y(this,"S");}static FromBytes(t){let e=new pe;if(t.length!==64)throw new Error("Invalid signature length");let s=t.slice(0,32),r=t.slice(32,64);if(!(r[31]&128))throw new Error("Invalid signature");return r[31]&=127,e.R=ln.FromBytes(s),e.S=L.FromBytes(r),e}static FromCompressedRistrettoAndScalar(t,e){let s=new pe;return s.R=t,s.S=e,s}ToBytes(){let t=this.R.ToBytes(),e=this.S.ToBytes(),s=new Uint8Array(t.length+e.length);return s.set(t),s.set(e,t.length),s[63]|=128,s}},"_Signature"),Os=c(class{constructor(n){y(this,"context"),this.context=n;}SetProtocolName(n){this.CommitBytesB(this.context.GetTranscript(),F.encode("proto-name"),n);}CommitPoint(n,t){this.CommitBytesB(this.context.GetTranscript(),n,t.ToBytes());}CommitPointBytes(n,t){this.CommitBytesB(this.context.GetTranscript(),n,t);}WitnessScalarLabel(n,t,e){return this.WitnessScalarFR(this.context.GetTranscript(),n,t,e)}WitnessScalar(n,t){return this.WitnessScalarSR(this.context.GetTranscript(),n,t)}ChallengeScalar(n){let t=this.ChallengeBytes(n);return L.FromBytesModOrderWide(t)}ChallengeBytes(n){return this.ChallengeBytesTL(this.context.GetTranscript(),n)}ChallengeBytesTL(n,t){return n.ChallengeBytes(t,64)}CommitBytesB(n,t,e){n.AppendMessage(t,e);}CommitBytesS(n,t,e){n.AppendMessage(F.encode(t),e);}CommitPointF(n,t,e){this.CommitBytesB(n,t,e);}WitnessScalarSR(n,t,e){let s=n.WitnessBytes(new Uint8Array(0),t,e);s.MetaAd(Uint8Array.from([64]),!1);let r=s.Prf(64,!1);return L.FromBytesModOrderWide(r)}WitnessScalarFR(n,t,e,s){let r=n.WitnessBytes(t,e,s);r.MetaAd(Bt(64),!1);let i=r.Prf(64,!1);return L.FromBytesModOrderWide(i)}},"SigningTranscript"),pn=c(class{constructor(n){y(this,"ts"),this.ts=new _s,this.ts.Init("SigningContext"),this.ts.AppendMessage(new Uint8Array,n);}Bytes(n){this.ts.AppendMessage(F.encode("sign-bytes"),n);}BytesClone(n){let t=this.ts.Clone();return t.AppendMessage(F.encode("sign-bytes"),n),t}GetTranscript(){return this.ts}},"SigningContext085"),Zs=c((n,t)=>n>=0?n:(1n<<BigInt(t))+n,"toTwos"),$e={bitLength:-1,isLe:!0,isNegative:!1},Zt=c((n,t=$e)=>{t={...$e,...t};let{bitLength:e,isLe:s,isNegative:r}=t,i=Math.ceil(e===-1?(n||0n).toString(2).length/8:(e||0)/8);if(!n)return new Uint8Array(e===-1?1:i);let a=((r?Zs(n,i*8):n).toString(16).padStart(i*2,"0").match(/.{2}/g)||[]).map(l=>parseInt(l,16));return new Uint8Array(s?a.reverse():a)},"bigIntToUint8Array"),Ks=/^0x[\da-fA-F]+$/;function gt(n,t=-1,e){return typeof n=="string"&&(n==="0x"||Ks.test(n))&&(t===-1?e||n.length%2===0:n.length===2+Math.ceil(t/4))}c(gt,"isHex");var Gs=c(n=>n?n.reduce((t,e)=>t+e.toString(16).padStart(2,"0"),"0x"):"0x","uInt8ArrayToHex"),bt=c((n,t=-1)=>{if(!n)return new Uint8Array;if(!gt(n))throw new Error(`Invalid hex string: ${n}`);n.startsWith("0x")&&(n=n.slice(2)),t!==-1&&(n=t/4<n.length?n.slice(0,t/4):n.padStart(t/4,"0")),n.length%2!==0&&(n=n+"0");let e=n.replace(/^0x/,"").match(/.{1,2}/g);if(!e)return new Uint8Array;let s=e.map(r=>parseInt(r,16));return new Uint8Array(s)},"hexStringToUint8Array");function Et(n,t=0){let e=0;if(!t)for(let r=0;r<n.length;r++)t+=n[r].length;let s=new Uint8Array(t);for(let r=0;r<n.length;r++)s.set(n[r],e),e+=n[r].length;return s}c(Et,"u8aConcatStrict");var Ws=0b111111n,$s=0b11111111111111n,Vs=1023,Js={bitLength:16},Qs={bitLength:32},tr=c(n=>{let t=BigInt(n);if(t<=Ws)return new Uint8Array([Number(t<<2n)]);if(t<=$s)return Zt((t<<2n)+1n,Js);if(t<=Vs)return Zt((t<<2n)+2n,Qs);let e=Zt(t),s=e.length;for(;e[s-1]===0;)s--;if(s<4)throw new Error("Invalid length, previous checks match anything less than 2^30");return Et([new Uint8Array([(s-4<<2)+3]),e.subarray(0,s)])},"compactToU8a");function er(n){return Et([tr(n.length),n])}c(er,"compactAddLength");var Ve="Invalid mnemonicToMiniSecretAsync",gn="Invalid entropy",nr="Invalid mnemonicToMiniSecretAsync checksum",bn="abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo",Je=bn.split("|").reduce((n,t,e)=>(n[t]=e,n),{}),mn=c(n=>Pe(n)[0].toString(2).padStart(8,"0").slice(0,n.length/4),"sha256FirstNBits"),yn=c(n=>{let t=n.normalize("NFKD").split(" ").filter(h=>!!h);if(t.length%3!==0||t.length<12||t.length>24)throw new Error(Ve);let e=t.map(h=>{if(!(h in Je))throw new Error(Ve);return Je[h].toString(2).padStart(11,"0")}).join(""),s=e.length-t.length/3,r=e.slice(0,s),i=e.slice(s),a=r.match(/(.{1,8})/g)?.map(h=>parseInt(h,2));if(!a||a.length%4!==0||a.length<16||a.length>32)throw new Error(gn);let l=Uint8Array.from(a);if(mn(l)!==i)throw new Error(nr);return l},"mnemonicToEntropy");function sr(n){if(n.length%4!==0||n.length<16||n.length>32)throw new Error(gn);let r=(Array.from(n).map(a=>a.toString(2).padStart(8,"0")).join("")+mn(n)).match(/(.{1,11})/g)?.map(a=>parseInt(a,2));if(!r||r.length<12)throw new Error("Unable to map entropy to mnemonic");let i=bn.split("|");return r.map(a=>i[a]).join(" ")}c(sr,"entropyToMnemonic");var rr=c((n=128)=>sr(ut(n/8)).toString().trim(),"generateMnemonic"),ir=c(n=>{try{yn(n);}catch(t){return {result:!1,error:t}}return {result:!0,error:null}},"validateMnemonic"),wn=c((n,t="")=>{let e=ir(n);if(!e.result)throw new Error(`Invalid bip39 mnemonic specified: ${e.error.toString()}`);let s=yn(n),r=new TextEncoder().encode(`mnemonic${t}`);return {entropy:s,salt:r}},"mnemonicToEntropyAndSalt"),or=c(async(n,t="")=>{let{entropy:e,salt:s}=wn(n,t);return (await Re(wt,e,s,{c:2048,dkLen:64})).slice(0,32)},"mnemonicToMiniSecretAsync"),kn=c((n,t="")=>{let{entropy:e,salt:s}=wn(n,t);return He(wt,e,s,{c:2048,dkLen:64}).slice(0,32)},"mnemonicToMiniSecret"),M=c((n,...t)=>new TextEncoder().encode(String.raw(n,...t)),"b"),Qe=c(n=>{yt(new Uint32Array(n.buffer,n.byteOffset,Math.floor(n.byteLength/4)),24);},"keccakF16002"),qt=166,ar=1,Ct=2,ae=4,cr=8,lr=16,hr=32,ge=c(class xn{constructor(t){y(this,"state"),y(this,"pos"),y(this,"pos_begin"),y(this,"cur_flags");let e=new Uint8Array(200);e[0]=1,e[1]=qt+2,e[2]=1,e[3]=0,e[4]=1,e[5]=96,e.set(M`STROBEv1.0.2`,6),Qe(e),this.state=e,this.pos=0,this.pos_begin=0,this.cur_flags=0,this.meta_ad(t,!1);}meta_ad(t,e){this.begin_op(lr|Ct,e),this.absorb(t);}ad(t,e){this.begin_op(Ct,e),this.absorb(t);}prf(t,e){this.begin_op(ar|Ct|ae,e),this.squeeze(t);}key(t,e){this.begin_op(Ct|ae,e),this.overwrite(t);}clone(){let t=new xn(new Uint8Array(0));return t.state.set(this.state),t.pos=this.pos,t.pos_begin=this.pos_begin,t.cur_flags=this.cur_flags,t}cloneState(){return {state:this.state.slice(),pos:this.pos,pos_begin:this.pos_begin,cur_flags:this.cur_flags}}run_f(){this.state[this.pos]^=this.pos_begin,this.state[this.pos+1]^=4,this.state[qt+1]^=128,Qe(this.state),this.pos=0,this.pos_begin=0;}absorb(t){for(let e=0;e<t.length;e++)this.state[this.pos]^=t[e],this.pos++,this.pos===qt&&this.run_f();}overwrite(t){for(let e=0;e<t.length;e++)this.state[this.pos]=t[e],this.pos++,this.pos===qt&&this.run_f();}squeeze(t){for(let e=0;e<t.length;e++)t[e]=this.state[this.pos],this.state[this.pos]=0,this.pos++,this.pos===qt&&this.run_f();}begin_op(t,e){if(e){if(this.cur_flags!==t)throw new Error(`You tried to continue op ${this.cur_flags.toString(2)} but changed flags to ${t.toString(2)}`);return}if(t&cr)throw new Error("You used the T flag, which this implementation doesn't support");let s=this.pos_begin;this.pos_begin=this.pos+1,this.cur_flags=t,this.absorb(new Uint8Array([s,t])),(t&(ae|hr))!==0&&this.pos!==0&&this.run_f();}},"_Strobe128"),ur=M`Merlin v1.0`,vn=c(n=>{let t=new Uint8Array(8);return t[0]=Number(n&255n),t[1]=Number(n>>8n&255n),t[2]=Number(n>>16n&255n),t[3]=Number(n>>24n&255n),t[4]=Number(n>>32n&255n),t[5]=Number(n>>40n&255n),t[6]=Number(n>>48n&255n),t[7]=Number(n>>56n&255n),t},"encode_u64"),ft=c(n=>{if(n>4294967295n)throw new Error("encode_usize_as_u32: x > 4294967295n");let t=new Uint8Array(4);return t[0]=n&255,t[1]=n>>8&255,t[2]=n>>16&255,t[3]=n>>24&255,t},"encode_usize_as_u32"),jn=c(class{constructor(n){y(this,"strobe"),this.strobe=new ge(ur),this.append_message(M`dom-sep`,n);}cloneStrobe(){return this.strobe.clone()}append_message(n,t){let e=ft(t.length);this.strobe.meta_ad(n,!1),this.strobe.meta_ad(e,!0),this.strobe.ad(t,!1);}append_u64(n,t){this.append_message(n,vn(t));}challenge_bytes(n,t){let e=ft(t.length);this.strobe.meta_ad(n,!1),this.strobe.meta_ad(e,!0),this.strobe.prf(t,!1);}build_rng(){return new dr(this.strobe.clone())}fill_bytes(n){let t=ft(n.length);this.strobe.meta_ad(t,!0),this.strobe.prf(n,!1);}witness_bytes_rng(n,t,e){let s=this.build_rng();for(let i of e)s=s.rekey_with_witness_bytes(n,i);s.finalize().fill_bytes(t);}witness_bytes(n,t,e){this.witness_bytes_rng(n,t,e);}witness_scalar(n,t){let e=new Uint8Array(64);this.witness_bytes(n,e,t);}},"Transcript2"),dr=c(class{constructor(n){if(y(this,"strobe"),n instanceof Uint8Array)this.strobe=new ge(n);else if(n instanceof ge)this.strobe=n;else throw new Error("TranscriptRngBuilder constructor: label is not Uint8Array or Strobe128")}cloneStrobe(){return this.strobe.clone()}rekey_with_witness_bytes(n,t){let e=ft(t.length);return this.strobe.meta_ad(n,!1),this.strobe.meta_ad(e,!0),this.strobe.key(t,!1),this}finalize(n){let t=n?n():ut(32);return this.strobe.meta_ad(M`rng`,!1),this.strobe.key(t,!1),new fr(this.strobe)}},"TranscriptRngBuilder2"),fr=c(class{constructor(n){y(this,"strobe"),this.strobe=n;}cloneStrobe(){return this.strobe.clone()}rekey_with_witness_bytes(n,t){let e=ft(t.length);this.strobe.meta_ad(n,!1),this.strobe.meta_ad(e,!0),this.strobe.key(t,!1);}rekey_with_witness_u64(n,t){this.rekey_with_witness_bytes(n,vn(t));}fill_bytes(n){let t=ft(n.length);this.strobe.meta_ad(t,!1),this.strobe.prf(n,!1);}},"TranscriptRng"),pr="bottom drive obey lake curtain smoke basket hold race lonely fit walk",gr=/^\d+$/,qn=c(n=>{let t=[],[e,s=""]=n.split("///"),r=e.split("//"),i=r.shift()||pr,o=i.split("/");if(i=o.shift()||"",!i)throw new Error(`Invalid mnemonic: ${n}`);o.length&&t.push(...o.map(a=>({value:a,cc:ce(a)})));for(let a of r){let l=a.split("/"),h=l.shift();if(!h)throw new Error("Invalid hard derivation");t.push({value:h,hard:!0,cc:ce(h)}),t.push(...l.map(d=>({value:d,cc:ce(d)})));}return {mnemonic:i,password:s,derivations:t}},"parseUri"),br=new TextEncoder,ce=c(n=>{let t=gr.test(n)?BigInt(n):n,e;typeof t=="bigint"?e=Zt(t,{bitLength:256,isLe:!0}):e=gt(t)?bt(t):er(br.encode(t));let s=new Uint8Array(32);return s.set(e.length>32?Nt(e,{dkLen:32}):e,0),s},"getChainCode"),mr=c((n,t)=>{let e=new jn(M`SchnorrRistrettoHDKD`);e.append_message(M`sign-bytes`,new Uint8Array),e.append_message(M`chain-code`,t),e.append_message(M`secret-key`,n.secretKey.key.bytes.slice());let s=new Uint8Array(32);e.challenge_bytes(M`HDKD-hard`,s);let r=new Uint8Array(32);return e.challenge_bytes(M`HDKD-chaincode`,r),ct.FromMiniSecret(s)},"deriveHard"),yr=c((n,t)=>{let e=new jn(M`SchnorrRistrettoHDKD`);e.append_message(M`sign-bytes`,new Uint8Array),e.append_message(M`chain-code`,t),e.append_message(M`public-key`,n.publicKey.key.slice());let s=new Uint8Array(64);e.challenge_bytes(M`HDKD-scalar`,s);let r=L.FromBytesModOrderWide(s),i=new Uint8Array(32);e.challenge_bytes(M`HDKD-chaincode`,i);let o=new Uint8Array(32);e.witness_bytes(M`HDKD-nonce`,o,[n.secretKey.nonce.slice(),n.secretKey.ToBytes().slice()]);let a=L.FromBytes(ye(we(St(n.secretKey.key.bytes.slice()),St(r)))),l=Dt.FromScalarAndNonce(a,o),h=l.ToPublicKey();return new ct(h,l)},"deriveSoft"),zn=c((n,t)=>{for(let{hard:e,cc:s}of t)n=e?mr(n,s):yr(n,s);return n},"processDerivations"),_n=c(n=>{let{mnemonic:t,password:e,derivations:s}=qn(n);return zn(ct.FromMiniSecret(kn(t,e)),s)},"parseUriAndDerive"),wr=c(async n=>{let{mnemonic:t,password:e,derivations:s}=qn(n);return zn(ct.FromMiniSecret(await or(t,e)),s)},"parseUriAndDeriveAsync"),ct=c(class Kt{constructor(t,e){y(this,"publicKey"),y(this,"secretKey"),this.publicKey=t,this.secretKey=e;}static FromBytes(t){let e=Dt.FromBytes(t.slice(0,64)),s=xe.FromBytes(t.slice(64));return new Kt(s,e)}static FromSecretKeyBytes(t){if(t.length!==64)throw new Error(`Expected secret key with 64 bytes, found ${t.length}`);let e=Dt.FromBytes(t),s=e.ToPublicKey();return new Kt(s,e)}static FromUri(t){return _n(t)}static async FromUriAsync(t){return await wr(t)}static FromMiniSecret(t){let e=Dt.FromMiniSecret(t),s=e.ToPublicKey();return new Kt(s,e)}ToBytes(){let t=new Uint8Array(96);return t.set(this.secretKey.ToBytes()),t.set(this.publicKey.key,64),t}},"_Keypair"),kr="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",xr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",An=(0, ve.default)(kr);(0, ve.default)(xr);var vr=new Uint8Array([83,83,53,56,80,82,69]),Bn=c(n=>Nt(Et([vr,n]),{dkLen:64}),"sshash"),be=c((n,t=42)=>{if(t<0||t>16383||[46,47].includes(t))throw new Error(`ss58Format is not valid, received ${typeof t} "${t}"`);let e=[1,2,4,8,32,33];if(!e.includes(n.length))throw new Error(`key length is not valid, received ${n.length}, valid values are ${e.join(", ")}`);let s=t<64?new Uint8Array([t]):new Uint8Array([(t&252)>>2|64,t>>8|(t&3)<<6]),r=Et([s,n]);return An.encode(Et([r,Bn(r).subarray(0,[32,33].includes(n.length)?2:1)]))},"encodeSubstrateAddress"),jr=c((n,t=!1)=>{let e=n[0]&64?2:1,s=e===1?n[0]:(n[0]&63)<<2|n[1]>>6|(n[1]&63)<<8,r=[34+e,35+e].includes(n.length),i=n.length-(r?2:1),o=!1;if(!t){let a=Bn(n.subarray(0,i));o=(n[0]&128)===0&&![46,47].includes(n[0])&&(r?n[n.length-2]===a[0]&&n[n.length-1]===a[1]:n[n.length-1]===a[0]);}return [o,i,e,s]},"checkAddressChecksum");function Sn(n,t,e=-1){let s=null;try{if(gt(n))return bt(n);let r=An.decode(n),i=[3,4,6,10,35,36,37,38];if(!i.includes(r.length))throw s=new Error(`key length is not valid, decoded key length is ${r.length}, valid values are ${i.join(", ")}`),s;let[o,a,l,h]=jr(r,t);if(!t&&!o)throw s=new Error("Invalid decoded address checksum"),s;if(![-1,h].includes(e))throw s=new Error(`Expected ss58Format ${e}, received ${h}`),s;return r.slice(l,a)}catch(r){throw s??new Error(`Decoding ${n}: ${r.message}`)}}c(Sn,"decodeSubstrateAddress");var qr=new TextEncoder,me=c(n=>typeof n=="string"?gt(n)?bt(n):qr.encode(n):n,"anyToU8a"),Wt=c(n=>{if(n instanceof Uint8Array)return n;if(gt(n))return bt(n);throw new Error("Invalid message: should be Uint8Array or hex string")},"u8aOrHexToU8a"),Yt=c(n=>({get publicKey(){return n.publicKey.key.slice()},address:be(n.publicKey.key),prefixedAddress(t=42){return be(n.publicKey.key,t)},sign(t){return n.secretKey.sign(me(t),n.publicKey).ToBytes()},verify(t,e){return n.publicKey.verify(me(t),Wt(e))},signer:{async sign(t){let e=bt(t.signerPayloadHex),s=n.secretKey.sign(e,n.publicKey).ToBytes();return {signature:`0x01${Gs(s).substring(2)}`,signatureType:"sr25519"}}}}),"getAccountFromKeypair"),zr=c((n,t,e)=>{let s;if(e instanceof Uint8Array)s=e;else if(typeof e=="string")s=gt(e)?bt(e):Sn(e);else throw new Error("Invalid signerAddressOrPublicKey: should be Uint8Array or hex string");return xe.FromBytes(s).verify(me(n),Wt(t))},"verifySignature"),_r=_n,Ar={fromUri:n=>{let t=ct.FromUri(n);return Yt(t)},verifySignature:zr,other:{fromMiniSecret:n=>{let t=ct.FromMiniSecret(Wt(n));return Yt(t)},fromSecretKeyBytes:n=>{let t=ct.FromSecretKeyBytes(Wt(n));return Yt(t)},fromKeypair:Yt,mnemonicToMiniSecret:kn,dangerouslyParseUriAndGetFullKeypair:_r},utils:{encodeSubstrateAddress:be,decodeSubstrateAddress:Sn},generateMnemonic:rr},Zi=Ar;/*! Bundled license information:

  @noble/hashes/esm/utils.js:
    (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
  */

  exports.Account = Zi;
  exports.Sr25519Account = Ar;
  exports.dangerouslyParseUriAndGetFullKeypair = _r;
  exports.verifySignature = zr;

  return exports;

})({});
//# sourceMappingURL=out.js.map
//# sourceMappingURL=sr25519.js.map