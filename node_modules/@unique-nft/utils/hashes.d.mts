declare function u8aConcat(u8as: readonly Uint8Array[], length?: number): Uint8Array;
declare function xxhash64(input: Uint8Array, initSeed: bigint | number): Uint8Array;
declare function xxhashOfU8a(data: Uint8Array, bitLength?: 64 | 128 | 192 | 256 | 320 | 384 | 448 | 512): Uint8Array;
declare const xxhashOfU8aAsHex: (data: Uint8Array, bitLength?: 64 | 128 | 192 | 256 | 320 | 384 | 448 | 512) => string;
declare const encodeSubstrateStorageKey$1: (entries: string[]) => `0x${string}`;

declare const xxhash_u8aConcat: typeof u8aConcat;
declare const xxhash_xxhash64: typeof xxhash64;
declare const xxhash_xxhashOfU8a: typeof xxhashOfU8a;
declare const xxhash_xxhashOfU8aAsHex: typeof xxhashOfU8aAsHex;
declare namespace xxhash {
  export { encodeSubstrateStorageKey$1 as encodeSubstrateStorageKey, xxhash_u8aConcat as u8aConcat, xxhash_xxhash64 as xxhash64, xxhash_xxhashOfU8a as xxhashOfU8a, xxhash_xxhashOfU8aAsHex as xxhashOfU8aAsHex };
}

declare const encodeSubstrateStorageKey: (entries: string[]) => `0x${string}`;

export { xxhash as Xxhash, encodeSubstrateStorageKey };
