import { KeyringPair, KeyringOptions, KeyringPair$Json } from '@polkadot/keyring/types';
import { KeyringAccountBase, Provider, Account } from '@unique-nft/accounts/types';
import { KeypairType } from '@polkadot/util-crypto/types';

declare class KeyringAccount extends KeyringAccountBase {
    constructor(keyringPair: KeyringPair);
}

declare class KeyringProvider extends Provider<KeyringPair> {
    private options;
    static fromUri(uri: string, type?: KeypairType | KeyringOptions): Promise<KeyringAccount>;
    static fromMnemonic(mnemonic: string, type?: KeypairType | KeyringOptions): Promise<KeyringAccount>;
    private keyring;
    constructor(options?: KeyringOptions);
    init(): Promise<void>;
    getAccounts(): Promise<Account<KeyringPair>[]>;
    private emitAccountsChanged;
    addSeed(seed: string): KeyringAccount;
    addUri(uri: string): KeyringAccount;
    addKeyfile(keyfile: KeyringPair$Json, password?: string): KeyringAccount;
    forgetAccount(account: Account<KeyringPair> | string): void;
}

export { KeyringAccount, KeyringProvider };
