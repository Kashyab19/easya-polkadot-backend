import { InjectedAccountWithMeta, InjectedExtension, Web3AccountsOptions } from '@polkadot/extension-inject/types';
import { Account, UnsignedTxPayload, SignResult, Provider } from '@unique-nft/accounts/types';

declare class PolkadotAccount extends Account<InjectedAccountWithMeta> {
    readonly injectedAccount: InjectedAccountWithMeta;
    private readonly injector;
    constructor(injectedAccount: InjectedAccountWithMeta, injector: InjectedExtension);
    formatAddress(prefix?: number | 'ethereum'): string;
    sign(unsignedTxPayload: UnsignedTxPayload): Promise<SignResult>;
}

declare class PolkadotProvider extends Provider<InjectedAccountWithMeta> {
    private readonly options;
    constructor(options?: Web3AccountsOptions);
    init(): Promise<void>;
    getAccounts(): Promise<Account<InjectedAccountWithMeta>[]>;
    forgetAccount(account: Account<InjectedAccountWithMeta>): void;
}

export { PolkadotAccount, PolkadotProvider };
